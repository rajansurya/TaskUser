android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    android.support.v4.util.SimpleArrayMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> b
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    android.support.v4.util.SimpleArrayMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.h:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.j:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.k:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    android.support.v4.util.SimpleArrayMap children -> c
    java.util.ArrayList fragments -> d
    android.support.v4.util.SimpleArrayMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.l:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.m:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.n:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.o:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.p:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.q:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.s:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.t:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.u:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.v:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.w:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.x:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.y:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.z:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.aa:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ab:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.ac:
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> a
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> a
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.ad:
    int icon -> a
    java.lang.CharSequence title -> b
    android.app.PendingIntent actionIntent -> c
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.ae:
    android.graphics.Bitmap mPicture -> a
    android.graphics.Bitmap mBigLargeIcon -> b
    boolean mBigLargeIconSet -> c
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.af:
    java.lang.CharSequence mBigText -> a
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.ag:
    android.content.Context mContext -> a
    java.lang.CharSequence mContentTitle -> b
    java.lang.CharSequence mContentText -> c
    android.app.PendingIntent mContentIntent -> d
    android.app.PendingIntent mFullScreenIntent -> e
    android.widget.RemoteViews mTickerView -> f
    android.graphics.Bitmap mLargeIcon -> g
    java.lang.CharSequence mContentInfo -> h
    int mNumber -> i
    int mPriority -> j
    boolean mUseChronometer -> k
    android.support.v4.app.NotificationCompat$Style mStyle -> l
    java.lang.CharSequence mSubText -> m
    int mProgressMax -> n
    int mProgress -> o
    boolean mProgressIndeterminate -> p
    java.util.ArrayList mActions -> q
    android.app.Notification mNotification -> r
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> a
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> a
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> a
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> b
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> a
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> c
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> a
    void setFlag(int,boolean) -> a
    android.app.Notification build() -> a
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.ah:
    java.util.ArrayList mTexts -> a
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.ai:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.aj:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.ak:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.al:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.am:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> a
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.an:
    java.lang.CharSequence mBigContentTitle -> d
    java.lang.CharSequence mSummaryText -> e
    boolean mSummaryTextSet -> f
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.ao:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> a
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.ap:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> a
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.aq:
    android.app.Notification$Builder b -> a
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> a
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> a
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> a
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> a
    android.app.Notification build() -> a
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ar:
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> b
    int modeToMode(java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
    java.lang.String[] copyOf(java.lang.String[],int) -> a
    java.lang.Object[] copyOf(java.lang.Object[],int) -> a
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.a:
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.b:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.Loader -> android.support.v4.content.c:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.d:
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.a.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.a.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.a.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.a.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.a.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.ArrayMap -> android.support.v4.b.a:
    android.support.v4.util.MapCollections mCollections -> a
    android.support.v4.util.MapCollections getCollection() -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
android.support.v4.util.ArrayMap$1 -> android.support.v4.b.b:
    android.support.v4.util.ArrayMap this$0 -> a
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.ContainerHelpers -> android.support.v4.b.c:
    int[] EMPTY_INTS -> a
    long[] EMPTY_LONGS -> b
    java.lang.Object[] EMPTY_OBJECTS -> c
    int idealIntArraySize(int) -> a
    int idealByteArraySize(int) -> b
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int binarySearch(int[],int,int) -> a
android.support.v4.util.DebugUtils -> android.support.v4.b.d:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.b.e:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.MapCollections -> android.support.v4.b.f:
    android.support.v4.util.MapCollections$EntrySet mEntrySet -> b
    android.support.v4.util.MapCollections$KeySet mKeySet -> c
    android.support.v4.util.MapCollections$ValuesCollection mValues -> d
    boolean containsAllHelper(java.util.Map,java.util.Collection) -> a
    boolean removeAllHelper(java.util.Map,java.util.Collection) -> b
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> c
    java.lang.Object[] toArrayHelper(int) -> b
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    java.util.Set getEntrySet() -> d
    java.util.Set getKeySet() -> e
    java.util.Collection getValues() -> f
    int colGetSize() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    int colIndexOfValue(java.lang.Object) -> b
    java.util.Map colGetMap() -> b
    void colPut(java.lang.Object,java.lang.Object) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    void colClear() -> c
android.support.v4.util.MapCollections$ArrayIterator -> android.support.v4.b.g:
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    android.support.v4.util.MapCollections this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
android.support.v4.util.MapCollections$EntrySet -> android.support.v4.b.h:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.util.Map$Entry) -> a
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean add(java.lang.Object) -> add
android.support.v4.util.MapCollections$KeySet -> android.support.v4.b.i:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
android.support.v4.util.MapCollections$MapIterator -> android.support.v4.b.j:
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    android.support.v4.util.MapCollections this$0 -> d
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object next() -> next
android.support.v4.util.MapCollections$ValuesCollection -> android.support.v4.b.k:
    android.support.v4.util.MapCollections this$0 -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
android.support.v4.util.SimpleArrayMap -> android.support.v4.b.l:
    java.lang.Object[] mBaseCache -> b
    int mBaseCacheSize -> c
    java.lang.Object[] mTwiceBaseCache -> d
    int mTwiceBaseCacheSize -> e
    int[] mHashes -> f
    java.lang.Object[] mArray -> g
    int mSize -> h
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    void allocArrays(int) -> e
    void freeArrays(int[],java.lang.Object[],int) -> a
    void clear() -> clear
    void ensureCapacity(int) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int indexOfValue(java.lang.Object) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object keyAt(int) -> b
    java.lang.Object valueAt(int) -> c
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeAt(int) -> d
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.b.m:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.SparseArrayCompat clone() -> a
    void gc() -> d
    int size() -> b
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> c
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.n:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.o:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.p:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.q:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.r:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.s:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.t:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.u:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.v:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.w:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.x:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.y:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.z:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.aa:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.ab:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.ac:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.ad:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.ae:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    java.lang.CharSequence getPageTitle(int) -> a
    float getPageWidth(int) -> b
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    int getMinHeight() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.af:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.ag:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> a
    void setTextSpacing(int) -> a
    int getTextSpacing() -> b
    void setNonPrimaryAlpha(float) -> a
    void setTextSize(int,float) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> a
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.ah:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.ai:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.aj:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.ak:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.al:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.am:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.an:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.ao:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ap:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.aq:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ar:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.as:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.at:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.au:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.av:
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.aw:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ax:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ay:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.az:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ba:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$KitKatViewCompatImpl -> android.support.v4.view.bb:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.bc:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.bd:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.be:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.bf:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.bg:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.bh:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> c
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.bi:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.bj:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.bk:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bl:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bm:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.bn:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.bo:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.bp:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.bq:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.br:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatJellybeanMR2Impl -> android.support.v4.view.bs:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.bt:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.bu:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    int mDrawingOrder -> ab
    java.util.ArrayList mDrawingOrderedChildren -> ac
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ad
    java.lang.Runnable mEndScrollRunnable -> ae
    int mScrollState -> af
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> e
    android.support.v4.view.PagerAdapter getAdapter() -> b
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    int getClientWidth() -> h
    void setCurrentItem(int) -> a
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> c
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void populate() -> d
    void populate(int) -> b
    void sortChildDrawingOrder() -> i
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> f
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestParentDisallowInterceptTouchEvent(boolean) -> c
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> j
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> k
    void setScrollingCacheEnabled(boolean) -> d
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> d
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> e
    boolean pageRight() -> f
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> g
android.support.v4.view.ViewPager$1 -> android.support.v4.view.bv:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bw:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bx:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.by:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bz:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ca:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.cb:
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.cc:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.cd:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ce:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.cf:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setMovementGranularities(int) -> b
    int getMovementGranularities() -> c
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> d
    boolean isChecked() -> e
    boolean isFocusable() -> f
    void setFocusable(boolean) -> a
    boolean isFocused() -> g
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> h
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> i
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> j
    void setSelected(boolean) -> e
    boolean isClickable() -> k
    void setClickable(boolean) -> f
    boolean isLongClickable() -> l
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> m
    void setEnabled(boolean) -> h
    boolean isPassword() -> n
    boolean isScrollable() -> o
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> p
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> q
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> r
    java.lang.CharSequence getContentDescription() -> s
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> t
    java.lang.String getViewIdResourceName() -> u
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.e:
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> android.support.v4.view.a.f:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.g:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> s
    boolean isAccessibilityFocused(java.lang.Object) -> t
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.h:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.i:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    void setMovementGranularities(java.lang.Object,int) -> a
    int getMovementGranularities(java.lang.Object) -> b
    boolean isAccessibilityFocused(java.lang.Object) -> c
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.j:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.k:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.m:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.n:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> android.support.v4.view.a.o:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> android.support.v4.view.a.p:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.q:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.r:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.s:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.t:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> android.support.v4.view.a.u:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> android.support.v4.view.a.v:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge -> android.support.v4.view.a.w:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.x:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.y:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.z:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.aa:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.ab:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.ac:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.ad:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.ContentLoadingProgressBar -> android.support.v4.widget.ContentLoadingProgressBar:
    long mStartTime -> a
    boolean mPostedHide -> b
    boolean mPostedShow -> c
    boolean mDismissed -> d
    java.lang.Runnable mDelayedHide -> e
    java.lang.Runnable mDelayedShow -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void removeCallbacks() -> a
    boolean access$002(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> a
    long access$102(android.support.v4.widget.ContentLoadingProgressBar,long) -> a
    boolean access$202(android.support.v4.widget.ContentLoadingProgressBar,boolean) -> b
    boolean access$300(android.support.v4.widget.ContentLoadingProgressBar) -> a
android.support.v4.widget.ContentLoadingProgressBar$1 -> android.support.v4.widget.a:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.ContentLoadingProgressBar$2 -> android.support.v4.widget.b:
    android.support.v4.widget.ContentLoadingProgressBar this$0 -> a
    void run() -> run
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewAbsoluteGravity(android.view.View) -> e
    boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> d
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.c:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void addChildrenForAccessibility(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.d:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.e:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.f:
    int mAbsGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.g:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.h:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.i:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.j:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.k:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.l:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.m:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.n:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.o:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.p:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.q:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.r:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void dispatchOnPanelSlide(android.view.View) -> a
    void dispatchOnPanelOpened(android.view.View) -> b
    void dispatchOnPanelClosed(android.view.View) -> c
    void updateObscuredViewsVisibility(android.view.View) -> d
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void onPanelDragged(int) -> a
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> g
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> f
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.t:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.u:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.v:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewReleased(android.view.View,float,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    void onEdgeDragStarted(int,int) -> b
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.w:
    void onPanelSlide(android.view.View,float) -> a
    void onPanelOpened(android.view.View) -> a
    void onPanelClosed(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.x:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.y:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.z:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.aa:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.ab:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ac:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.ad:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.ae:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.af:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.appsflyer.AppsFlyerLib -> com.appsflyer.AppsFlyerLib:
    android.net.Uri ATTRIBUTION_ID_CONTENT_URI -> a
    com.appsflyer.ConversionDataListener conversionDataListener -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void debugAction(java.lang.String,java.lang.String,android.content.Context) -> b
    void setProperty(java.lang.String,java.lang.String) -> a
    java.lang.String getProperty(java.lang.String) -> a
    void setAppsFlyerKey(java.lang.String) -> b
    java.lang.String getAppUserId() -> a
    void sendTracking(android.content.Context) -> a
    void sendTracking(android.content.Context,java.lang.String) -> a
    void sendTrackingWithEvent(android.content.Context,java.lang.String,java.lang.String) -> a
    java.util.Map getConversionData(android.content.Context) -> b
    java.util.Map referrerStringToMap(java.lang.String) -> d
    java.util.Map attributionStringToMap(java.lang.String) -> e
    void sendTrackingWithEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void runInBackground(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    void sendTrackingWithEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> c
    java.lang.String getConfiguredChannel(android.content.Context) -> f
    boolean isPreInstalledApp(android.content.Context) -> c
    java.lang.String getCachedChannel(android.content.Context,java.lang.String) -> c
    java.lang.String getFirstInstallDate(java.text.SimpleDateFormat,android.content.Context) -> a
    void addAdvertiserIDData(android.content.Context,java.util.Map) -> a
    java.lang.String getAttributionId(android.content.ContentResolver) -> a
    java.lang.String getNetwork(android.content.Context) -> g
    java.lang.String getAppsFlyerUID(android.content.Context) -> d
    void access$200(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void access$300(java.lang.String,java.lang.String,android.content.Context) -> a
    java.lang.String access$400(android.content.Context) -> e
    java.lang.String access$500(android.content.Context,java.lang.String) -> b
    java.util.Map access$600(java.lang.String) -> c
    com.appsflyer.ConversionDataListener access$700() -> b
com.appsflyer.AppsFlyerLib$1 -> com.appsflyer.a:
com.appsflyer.AppsFlyerLib$AttributionIdFetcher -> com.appsflyer.b:
    java.lang.ref.WeakReference ctxReference -> a
    java.lang.String appsFlyerDevKey -> b
    java.util.concurrent.atomic.AtomicInteger currentRequestsCounter -> c
    void run() -> run
com.appsflyer.AppsFlyerLib$DataCollector -> com.appsflyer.c:
    android.content.Context context -> a
    java.lang.String appsFlyerKey -> b
    java.lang.String eventName -> c
    java.lang.String eventValue -> d
    java.lang.String referrer -> e
    void run() -> run
com.appsflyer.AppsFlyerLib$SendToServerRunnable -> com.appsflyer.d:
    java.lang.String urlString -> b
    java.lang.ref.WeakReference ctxReference -> c
    java.util.Map params -> a
    void run() -> run
    void callServer(java.net.URL,java.lang.String,java.lang.String) -> a
com.appsflyer.AppsFlyerProperties -> com.appsflyer.e:
    com.appsflyer.AppsFlyerProperties instance -> a
    java.util.Map properties -> b
    boolean isOnReceiveCalled -> c
    boolean isLaunchCalled -> d
    java.lang.String referrer -> e
    com.appsflyer.AppsFlyerProperties getInstance() -> a
    void set(java.lang.String,java.lang.String) -> a
    java.lang.String get(java.lang.String) -> a
    boolean getBoolean(java.lang.String,boolean) -> a
    void setOnReceiveCalled() -> b
    boolean isLaunchCalled() -> c
    void setLaunchCalled() -> d
    void setReferrer(java.lang.String) -> b
    java.lang.String getReferrer(android.content.Context) -> a
com.appsflyer.AttributionIDNotReady -> com.appsflyer.f:
com.appsflyer.ConversionDataListener -> com.appsflyer.g:
    void onConversionDataLoaded(java.util.Map) -> a
    void onConversionFailure(java.lang.String) -> a
com.appsflyer.DebugLogQueue -> com.appsflyer.h:
    com.appsflyer.DebugLogQueue ourInstance -> b
    java.util.List queue -> a
    com.appsflyer.DebugLogQueue getInstance() -> a
    void push(java.lang.String) -> a
com.appsflyer.DebugLogQueue$Item -> com.appsflyer.i:
    java.lang.String msg -> a
    long timestamp -> b
com.appsflyer.HashUtils -> com.appsflyer.HashUtils:
    java.lang.String getNativeCode(java.lang.String,java.lang.String,java.lang.String) -> getNativeCode
    java.lang.String getHashCode(java.util.Map) -> a
    java.lang.String byteToHex(byte[]) -> a
com.appsflyer.Installation -> com.appsflyer.j:
    java.lang.String sID -> a
    java.lang.String id(android.content.Context) -> a
    java.lang.String readInstallationFile(java.io.File) -> a
    void writeInstallationFile(java.io.File) -> b
com.appsflyer.MultipleInstallBroadcastReceiver -> com.appsflyer.MultipleInstallBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.appsflyer.TestReciever -> com.appsflyer.TestReciever:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.android.gcm.GCMBaseIntentService -> com.google.android.gcm.GCMBaseIntentService:
    android.os.PowerManager$WakeLock sWakeLock -> a
    java.lang.Object LOCK -> b
    java.lang.String[] mSenderIds -> c
    int sCounter -> d
    java.util.Random sRandom -> e
    int MAX_BACKOFF_MS -> f
    java.lang.String TOKEN -> g
    java.lang.String getName(java.lang.String) -> a
    java.lang.String getName(java.lang.String[]) -> a
    java.lang.String[] getSenderIds(android.content.Context) -> a
    void onMessage(android.content.Context,android.content.Intent) -> a
    void onDeletedMessages(android.content.Context,int) -> a
    boolean onRecoverableError(android.content.Context,java.lang.String) -> a
    void onError(android.content.Context,java.lang.String) -> b
    void onRegistered(android.content.Context,java.lang.String) -> c
    void onUnregistered(android.content.Context,java.lang.String) -> d
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void runIntentInService(android.content.Context,android.content.Intent,java.lang.String) -> a
    void handleRegistration(android.content.Context,android.content.Intent) -> b
com.google.android.gcm.GCMBroadcastReceiver -> com.google.android.gcm.GCMBroadcastReceiver:
    boolean mReceiverSet -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    java.lang.String getGCMIntentServiceClassName(android.content.Context) -> a
    java.lang.String getDefaultIntentServiceClassName(android.content.Context) -> b
com.google.android.gcm.GCMRegistrar -> com.google.android.gcm.a:
    com.google.android.gcm.GCMBroadcastReceiver sRetryReceiver -> a
    java.lang.String sRetryReceiverClassName -> b
    void checkDevice(android.content.Context) -> a
    void checkManifest(android.content.Context) -> b
    void checkReceiver(android.content.Context,java.util.Set,java.lang.String) -> a
    void register(android.content.Context,java.lang.String[]) -> a
    void internalRegister(android.content.Context,java.lang.String[]) -> b
    java.lang.String getFlatSenderIds(java.lang.String[]) -> a
    void onDestroy(android.content.Context) -> c
    void internalUnregister(android.content.Context) -> d
    void setRetryBroadcastReceiver(android.content.Context) -> e
    void setRetryReceiverClassName(java.lang.String) -> a
    java.lang.String getRegistrationId(android.content.Context) -> f
    boolean isRegistered(android.content.Context) -> g
    java.lang.String clearRegistrationId(android.content.Context) -> h
    java.lang.String setRegistrationId(android.content.Context,java.lang.String) -> a
    void setRegisteredOnServer(android.content.Context,boolean) -> a
    boolean isRegisteredOnServer(android.content.Context) -> i
    long getRegisterOnServerLifespan(android.content.Context) -> j
    int getAppVersion(android.content.Context) -> m
    void resetBackoff(android.content.Context) -> k
    int getBackoff(android.content.Context) -> l
    void setBackoff(android.content.Context,int) -> a
    android.content.SharedPreferences getGCMPreferences(android.content.Context) -> n
com.taskmanager.app.GCMIntentService -> com.taskmanager.app.GCMIntentService:
    int i -> a
    void onRegistered(android.content.Context,java.lang.String) -> c
    void onUnregistered(android.content.Context,java.lang.String) -> d
    void updateTask(java.lang.String) -> a
    void onMessage(android.content.Context,android.content.Intent) -> a
    void onDeletedMessages(android.content.Context,int) -> a
    void onError(android.content.Context,java.lang.String) -> b
    boolean onRecoverableError(android.content.Context,java.lang.String) -> a
    void generateNotification(android.content.Context,java.lang.String,long,java.lang.String,java.lang.String) -> a
    void reloadListOnScreen(android.content.Context) -> b
com.taskmanager.app.MyApp -> com.taskmanager.app.MyApp:
    com.taskmanager.app.MyApp singleInstance -> b
    java.lang.Object mSyncObject -> a
    void onCreate() -> onCreate
com.taskmanager.app.R -> com.taskmanager.app.a:
com.taskmanager.app.R$styleable -> com.taskmanager.app.b:
    int[] MySwitch -> a
    int[] PullToRefresh -> b
    int[] mySwitchTextAppearanceAttrib -> c
com.taskmanager.app.api.pulldown.internal.EmptyViewMethodAccessor -> com.taskmanager.app.a.a.a.a:
    void setEmptyViewInternal(android.view.View) -> a
com.taskmanager.app.api.pulldown.internal.FlipLoadingLayout -> com.taskmanager.app.a.a.a.b:
    android.view.animation.Animation mRotateAnimation -> f
    android.view.animation.Animation mResetRotateAnimation -> g
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Mode -> h
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void pullToRefreshImpl() -> a
    void refreshingImpl() -> b
    void releaseToRefreshImpl() -> c
    void resetImpl() -> d
    int getDefaultDrawableResId() -> e
    float getDrawableRotationAngle() -> p
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Mode() -> f
com.taskmanager.app.api.pulldown.internal.IndicatorLayout -> com.taskmanager.app.a.a.a.c:
    android.view.animation.Animation mInAnim -> a
    android.view.animation.Animation mOutAnim -> b
    android.widget.ImageView mArrowImageView -> c
    android.view.animation.Animation mRotateAnimation -> d
    android.view.animation.Animation mResetRotateAnimation -> e
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Mode -> f
    boolean isVisible() -> a
    void hide() -> b
    void show() -> c
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void releaseToRefresh() -> d
    void pullToRefresh() -> e
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Mode() -> f
com.taskmanager.app.api.pulldown.internal.LoadingLayout -> com.taskmanager.app.a.a.a.d:
    android.view.animation.Interpolator ANIMATION_INTERPOLATOR -> a
    android.widget.FrameLayout mInnerLayout -> f
    android.widget.ImageView mHeaderImage -> b
    android.widget.ProgressBar mHeaderProgress -> c
    boolean mUseIntrinsicAnimation -> g
    android.widget.TextView mHeaderText -> h
    android.widget.TextView mSubHeaderText -> i
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode mMode -> d
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Orientation mScrollDirection -> e
    java.lang.CharSequence mPullLabel -> j
    java.lang.CharSequence mRefreshingLabel -> k
    java.lang.CharSequence mReleaseLabel -> l
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Orientation -> m
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Mode -> n
    void setHeight(int) -> a
    void setWidth(int) -> b
    int getContentSize() -> g
    void hideAllViews() -> h
    void onPull(float) -> b
    void pullToRefresh() -> i
    void refreshing() -> j
    void releaseToRefresh() -> k
    void reset() -> l
    void setLastUpdatedLabel(java.lang.CharSequence) -> a
    void setLoadingDrawable(android.graphics.drawable.Drawable) -> b
    void showInvisibleViews() -> m
    int getDefaultDrawableResId() -> e
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void pullToRefreshImpl() -> a
    void refreshingImpl() -> b
    void releaseToRefreshImpl() -> c
    void resetImpl() -> d
    void setSubHeaderText(java.lang.CharSequence) -> b
    void setSubTextAppearance(int) -> c
    void setSubTextColor(android.content.res.ColorStateList) -> a
    void setTextAppearance(int) -> d
    void setTextColor(android.content.res.ColorStateList) -> b
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Orientation() -> n
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Mode() -> o
com.taskmanager.app.api.pulldown.internal.RotateLoadingLayout -> com.taskmanager.app.a.a.a.e:
    android.view.animation.Animation mRotateAnimation -> f
    android.graphics.Matrix mHeaderImageMatrix -> g
    float mRotationPivotX -> h
    float mRotationPivotY -> i
    boolean mRotateDrawableWhilePulling -> j
    void onLoadingDrawableSet(android.graphics.drawable.Drawable) -> a
    void onPullImpl(float) -> a
    void refreshingImpl() -> b
    void resetImpl() -> d
    void resetImageRotation() -> f
    void pullToRefreshImpl() -> a
    void releaseToRefreshImpl() -> c
    int getDefaultDrawableResId() -> e
com.taskmanager.app.api.pulldown.internal.Utils -> com.taskmanager.app.a.a.a.f:
    void warnDeprecation(java.lang.String,java.lang.String) -> a
com.taskmanager.app.api.pulldown.internal.ViewCompat -> com.taskmanager.app.a.a.a.g:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> a
com.taskmanager.app.api.pulldown.internal.ViewCompat$SDK16 -> com.taskmanager.app.a.a.a.h:
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> a
com.taskmanager.app.pulldown.api.ILoadingLayout -> com.taskmanager.app.pulldown.api.a:
    void setLastUpdatedLabel(java.lang.CharSequence) -> a
com.taskmanager.app.pulldown.api.LoadingLayoutProxy -> com.taskmanager.app.pulldown.api.b:
    java.util.HashSet mLoadingLayouts -> a
    void addLayout(com.taskmanager.app.api.pulldown.internal.LoadingLayout) -> a
    void setLastUpdatedLabel(java.lang.CharSequence) -> a
com.taskmanager.app.pulldown.api.OverscrollHelper -> com.taskmanager.app.pulldown.api.c:
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Orientation -> a
    void overScrollBy(com.taskmanager.app.pulldown.api.PullToRefreshBase,int,int,int,int,boolean) -> a
    void overScrollBy(com.taskmanager.app.pulldown.api.PullToRefreshBase,int,int,int,int,int,boolean) -> a
    void overScrollBy(com.taskmanager.app.pulldown.api.PullToRefreshBase,int,int,int,int,int,int,float,boolean) -> a
    boolean isAndroidOverScrollEnabled(android.view.View) -> a
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Orientation() -> a
com.taskmanager.app.pulldown.api.PullToRefreshAdapterViewBase -> com.taskmanager.app.pulldown.api.PullToRefreshAdapterViewBase:
    boolean mLastItemVisible -> b
    android.widget.AbsListView$OnScrollListener mOnScrollListener -> c
    com.taskmanager.app.pulldown.api.PullToRefreshBase$OnLastItemVisibleListener mOnLastItemVisibleListener -> d
    android.view.View mEmptyView -> e
    com.taskmanager.app.api.pulldown.internal.IndicatorLayout mIndicatorIvTop -> f
    com.taskmanager.app.api.pulldown.internal.IndicatorLayout mIndicatorIvBottom -> g
    boolean mShowIndicator -> h
    boolean mScrollEmptyView -> i
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Mode -> j
    android.widget.FrameLayout$LayoutParams convertEmptyViewLayoutParams(android.view.ViewGroup$LayoutParams) -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void setAdapter(android.widget.ListAdapter) -> a
    void setEmptyView(android.view.View) -> a
    void setOnLastItemVisibleListener(com.taskmanager.app.pulldown.api.PullToRefreshBase$OnLastItemVisibleListener) -> a
    void setShowIndicator(boolean) -> a
    void onPullToRefresh() -> a
    void onRefreshing(boolean) -> b
    void onReleaseToRefresh() -> b
    void onReset() -> c
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    boolean isReadyForPullStart() -> d
    boolean isReadyForPullEnd() -> e
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void updateUIForMode() -> f
    void addIndicatorViews() -> D
    boolean getShowIndicatorInternal() -> E
    boolean isFirstItemVisible() -> F
    boolean isLastItemVisible() -> G
    void removeIndicatorViews() -> H
    void updateIndicatorViewsVisibility() -> I
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Mode() -> g
com.taskmanager.app.pulldown.api.PullToRefreshBase -> com.taskmanager.app.pulldown.api.PullToRefreshBase:
    int mTouchSlop -> b
    float mLastMotionX -> c
    float mLastMotionY -> d
    float mInitialMotionX -> e
    float mInitialMotionY -> f
    boolean mIsBeingDragged -> g
    com.taskmanager.app.pulldown.api.PullToRefreshBase$State mState -> h
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode mMode -> i
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode mCurrentMode -> j
    android.view.View mRefreshableView -> a
    android.widget.FrameLayout mRefreshableViewWrapper -> k
    boolean mShowViewWhileRefreshing -> l
    boolean mScrollingWhileRefreshingEnabled -> m
    boolean mFilterTouchEvents -> n
    boolean mOverScrollEnabled -> o
    boolean mLayoutVisibilityChangesEnabled -> p
    android.view.animation.Interpolator mScrollAnimationInterpolator -> q
    com.taskmanager.app.pulldown.api.PullToRefreshBase$AnimationStyle mLoadingAnimationStyle -> r
    com.taskmanager.app.api.pulldown.internal.LoadingLayout mHeaderLayout -> s
    com.taskmanager.app.api.pulldown.internal.LoadingLayout mFooterLayout -> t
    com.taskmanager.app.pulldown.api.PullToRefreshBase$OnRefreshListener mOnRefreshListener -> u
    com.taskmanager.app.pulldown.api.PullToRefreshBase$OnRefreshListener2 mOnRefreshListener2 -> v
    com.taskmanager.app.pulldown.api.PullToRefreshBase$OnPullEventListener mOnPullEventListener -> w
    com.taskmanager.app.pulldown.api.PullToRefreshBase$SmoothScrollRunnable mCurrentSmoothScrollRunnable -> x
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Orientation -> y
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$State -> z
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Mode -> A
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode getCurrentMode() -> h
    com.taskmanager.app.pulldown.api.ILoadingLayout getLoadingLayoutProxy() -> i
    com.taskmanager.app.pulldown.api.ILoadingLayout getLoadingLayoutProxy(boolean,boolean) -> a
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode getMode() -> j
    android.view.View getRefreshableView() -> k
    boolean getShowViewWhileRefreshing() -> l
    com.taskmanager.app.pulldown.api.PullToRefreshBase$State getState() -> m
    boolean isPullToRefreshEnabled() -> n
    boolean isPullToRefreshOverScrollEnabled() -> o
    boolean isRefreshing() -> p
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void onRefreshComplete() -> q
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setScrollingWhileRefreshingEnabled(boolean) -> c
    void setLongClickable(boolean) -> setLongClickable
    void setMode(com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode) -> a
    void setOnRefreshListener(com.taskmanager.app.pulldown.api.PullToRefreshBase$OnRefreshListener) -> a
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> r
    void setState(com.taskmanager.app.pulldown.api.PullToRefreshBase$State,boolean[]) -> a
    void addViewInternal(android.view.View,int,android.view.ViewGroup$LayoutParams) -> a
    void addViewInternal(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    com.taskmanager.app.api.pulldown.internal.LoadingLayout createLoadingLayout(android.content.Context,com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode,android.content.res.TypedArray) -> a
    com.taskmanager.app.pulldown.api.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> b
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
    void disableLoadingLayoutVisibilityChanges() -> s
    com.taskmanager.app.api.pulldown.internal.LoadingLayout getFooterLayout() -> t
    int getFooterSize() -> u
    com.taskmanager.app.api.pulldown.internal.LoadingLayout getHeaderLayout() -> v
    int getHeaderSize() -> w
    int getPullToRefreshScrollDuration() -> x
    android.widget.FrameLayout getRefreshableViewWrapper() -> y
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    boolean isReadyForPullEnd() -> e
    boolean isReadyForPullStart() -> d
    void onPtrRestoreInstanceState(android.os.Bundle) -> a
    void onPtrSaveInstanceState(android.os.Bundle) -> b
    void onPullToRefresh() -> a
    void onRefreshing(boolean) -> b
    void onReleaseToRefresh() -> b
    void onReset() -> c
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void refreshLoadingViewsSize() -> z
    void refreshRefreshableViewSize(int,int) -> a
    void setHeaderScroll(int) -> a
    void smoothScrollTo(int) -> b
    void smoothScrollTo(int,com.taskmanager.app.pulldown.api.PullToRefreshBase$OnSmoothScrollFinishedListener) -> a
    void updateUIForMode() -> f
    void addRefreshableView(android.content.Context,android.view.View) -> a
    void callRefreshListener() -> g
    void init(android.content.Context,android.util.AttributeSet) -> b
    boolean isReadyForPull() -> D
    void pullEvent() -> E
    android.widget.LinearLayout$LayoutParams getLoadingLayoutLayoutParams() -> F
    int getMaximumPullScroll() -> G
    void smoothScrollTo(int,long) -> a
    void smoothScrollTo(int,long,long,com.taskmanager.app.pulldown.api.PullToRefreshBase$OnSmoothScrollFinishedListener) -> a
    android.view.animation.Interpolator access$0(com.taskmanager.app.pulldown.api.PullToRefreshBase) -> a
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Orientation() -> A
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$State() -> B
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Mode() -> C
    void access$4(com.taskmanager.app.pulldown.api.PullToRefreshBase) -> b
com.taskmanager.app.pulldown.api.PullToRefreshBase$1 -> com.taskmanager.app.pulldown.api.d:
    com.taskmanager.app.pulldown.api.PullToRefreshBase this$0 -> a
    void onSmoothScrollFinished() -> a
com.taskmanager.app.pulldown.api.PullToRefreshBase$2 -> com.taskmanager.app.pulldown.api.e:
    com.taskmanager.app.pulldown.api.PullToRefreshBase this$0 -> a
    void run() -> run
com.taskmanager.app.pulldown.api.PullToRefreshBase$AnimationStyle -> com.taskmanager.app.pulldown.api.f:
    com.taskmanager.app.pulldown.api.PullToRefreshBase$AnimationStyle ROTATE -> a
    com.taskmanager.app.pulldown.api.PullToRefreshBase$AnimationStyle FLIP -> b
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$AnimationStyle -> c
    com.taskmanager.app.pulldown.api.PullToRefreshBase$AnimationStyle[] ENUM$VALUES -> d
    com.taskmanager.app.pulldown.api.PullToRefreshBase$AnimationStyle getDefault() -> a
    com.taskmanager.app.pulldown.api.PullToRefreshBase$AnimationStyle mapIntToValue(int) -> a
    com.taskmanager.app.api.pulldown.internal.LoadingLayout createLoadingLayout(android.content.Context,com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode,com.taskmanager.app.pulldown.api.PullToRefreshBase$Orientation,android.content.res.TypedArray) -> a
    com.taskmanager.app.pulldown.api.PullToRefreshBase$AnimationStyle[] values() -> values
    com.taskmanager.app.pulldown.api.PullToRefreshBase$AnimationStyle valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$AnimationStyle() -> b
com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode -> com.taskmanager.app.pulldown.api.g:
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode DISABLED -> a
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode PULL_FROM_START -> b
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode PULL_FROM_END -> c
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode BOTH -> d
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode MANUAL_REFRESH_ONLY -> e
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode PULL_DOWN_TO_REFRESH -> f
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode PULL_UP_TO_REFRESH -> g
    int mIntValue -> h
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode[] ENUM$VALUES -> i
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode mapIntToValue(int) -> a
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode getDefault() -> a
    boolean permitsPullToRefresh() -> b
    boolean showHeaderLoadingLayout() -> c
    boolean showFooterLoadingLayout() -> d
    int getIntValue() -> e
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode[] values() -> values
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode valueOf(java.lang.String) -> valueOf
com.taskmanager.app.pulldown.api.PullToRefreshBase$OnLastItemVisibleListener -> com.taskmanager.app.pulldown.api.h:
    void onLastItemVisible() -> a
com.taskmanager.app.pulldown.api.PullToRefreshBase$OnPullEventListener -> com.taskmanager.app.pulldown.api.i:
    void onPullEvent(com.taskmanager.app.pulldown.api.PullToRefreshBase,com.taskmanager.app.pulldown.api.PullToRefreshBase$State,com.taskmanager.app.pulldown.api.PullToRefreshBase$Mode) -> a
com.taskmanager.app.pulldown.api.PullToRefreshBase$OnRefreshListener -> com.taskmanager.app.pulldown.api.j:
    void onRefresh(com.taskmanager.app.pulldown.api.PullToRefreshBase) -> a
com.taskmanager.app.pulldown.api.PullToRefreshBase$OnRefreshListener2 -> com.taskmanager.app.pulldown.api.k:
    void onPullDownToRefresh(com.taskmanager.app.pulldown.api.PullToRefreshBase) -> a
    void onPullUpToRefresh(com.taskmanager.app.pulldown.api.PullToRefreshBase) -> b
com.taskmanager.app.pulldown.api.PullToRefreshBase$OnSmoothScrollFinishedListener -> com.taskmanager.app.pulldown.api.l:
    void onSmoothScrollFinished() -> a
com.taskmanager.app.pulldown.api.PullToRefreshBase$Orientation -> com.taskmanager.app.pulldown.api.m:
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Orientation VERTICAL -> a
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Orientation HORIZONTAL -> b
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Orientation[] ENUM$VALUES -> c
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Orientation[] values() -> values
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Orientation valueOf(java.lang.String) -> valueOf
com.taskmanager.app.pulldown.api.PullToRefreshBase$SmoothScrollRunnable -> com.taskmanager.app.pulldown.api.n:
    android.view.animation.Interpolator mInterpolator -> b
    int mScrollToY -> c
    int mScrollFromY -> d
    long mDuration -> e
    com.taskmanager.app.pulldown.api.PullToRefreshBase$OnSmoothScrollFinishedListener mListener -> f
    boolean mContinueRunning -> g
    long mStartTime -> h
    int mCurrentY -> i
    com.taskmanager.app.pulldown.api.PullToRefreshBase this$0 -> a
    void run() -> run
    void stop() -> a
com.taskmanager.app.pulldown.api.PullToRefreshBase$State -> com.taskmanager.app.pulldown.api.o:
    com.taskmanager.app.pulldown.api.PullToRefreshBase$State RESET -> a
    com.taskmanager.app.pulldown.api.PullToRefreshBase$State PULL_TO_REFRESH -> b
    com.taskmanager.app.pulldown.api.PullToRefreshBase$State RELEASE_TO_REFRESH -> c
    com.taskmanager.app.pulldown.api.PullToRefreshBase$State REFRESHING -> d
    com.taskmanager.app.pulldown.api.PullToRefreshBase$State MANUAL_REFRESHING -> e
    com.taskmanager.app.pulldown.api.PullToRefreshBase$State OVERSCROLLING -> f
    int mIntValue -> g
    com.taskmanager.app.pulldown.api.PullToRefreshBase$State[] ENUM$VALUES -> h
    com.taskmanager.app.pulldown.api.PullToRefreshBase$State mapIntToValue(int) -> a
    int getIntValue() -> a
    com.taskmanager.app.pulldown.api.PullToRefreshBase$State[] values() -> values
    com.taskmanager.app.pulldown.api.PullToRefreshBase$State valueOf(java.lang.String) -> valueOf
com.taskmanager.app.pulldown.api.PullToRefreshListView -> com.taskmanager.app.pulldown.api.PullToRefreshListView:
    com.taskmanager.app.api.pulldown.internal.LoadingLayout mHeaderLoadingView -> b
    com.taskmanager.app.api.pulldown.internal.LoadingLayout mFooterLoadingView -> c
    android.widget.FrameLayout mLvFooterLoadingFrame -> d
    boolean mListViewExtrasEnabled -> e
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Mode -> f
    com.taskmanager.app.pulldown.api.PullToRefreshBase$Orientation getPullToRefreshScrollDirection() -> r
    void onRefreshing(boolean) -> b
    void onReset() -> c
    com.taskmanager.app.pulldown.api.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean) -> b
    android.widget.ListView createListView(android.content.Context,android.util.AttributeSet) -> b
    android.widget.ListView createRefreshableView(android.content.Context,android.util.AttributeSet) -> c
    void handleStyledAttributes(android.content.res.TypedArray) -> a
    android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet) -> a
    android.widget.FrameLayout access$1(com.taskmanager.app.pulldown.api.PullToRefreshListView) -> a
    int[] $SWITCH_TABLE$com$taskmanager$app$pulldown$api$PullToRefreshBase$Mode() -> D
com.taskmanager.app.pulldown.api.PullToRefreshListView$InternalListView -> com.taskmanager.app.pulldown.api.p:
    boolean mAddedLvFooter -> b
    com.taskmanager.app.pulldown.api.PullToRefreshListView this$0 -> a
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setEmptyView(android.view.View) -> setEmptyView
    void setEmptyViewInternal(android.view.View) -> a
com.taskmanager.app.pulldown.api.PullToRefreshListView$InternalListViewSDK9 -> com.taskmanager.app.pulldown.api.q:
    com.taskmanager.app.pulldown.api.PullToRefreshListView this$0 -> b
    boolean overScrollBy(int,int,int,int,int,int,int,int,boolean) -> overScrollBy
com.taskmanager.autocom.CustomAutoCompleteTextChangedListener -> com.taskmanager.autocom.a:
    android.content.Context context -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.taskmanager.autocom.CustomAutoCompleteTextChangedListener$1 -> com.taskmanager.autocom.b:
    com.taskmanager.autocom.CustomAutoCompleteTextChangedListener this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.taskmanager.autocom.CustomAutoCompleteView -> com.taskmanager.autocom.CustomAutoCompleteView:
    void performFiltering(java.lang.CharSequence,int) -> performFiltering
    void replaceText(java.lang.CharSequence) -> replaceText
com.taskmanager.background.AlarmReceiver -> com.taskmanager.background.AlarmReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.taskmanager.background.AlarmTaskReciever -> com.taskmanager.background.AlarmTaskReciever:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.taskmanager.background.DialogCallback -> com.taskmanager.background.a:
    java.lang.Object execuet(android.app.Dialog) -> a
com.taskmanager.background.ReminderReceiver -> com.taskmanager.background.ReminderReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.taskmanager.background.SMSReceiver -> com.taskmanager.background.SMSReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.taskmanager.background.SyncModule -> com.taskmanager.background.b:
    android.content.Context context -> b
    java.io.File SD_CARD -> a
    void run() -> run
    java.lang.String resendOTP() -> a
    com.taskmanager.bean.ResponseDto createTask(com.taskmanager.bean.taskListDTO) -> a
    void updateTaskContent(java.lang.String,java.lang.String) -> a
    java.lang.String UpdateTask(com.taskmanager.bean.UpdateTask) -> a
    void changeTaskStatus(java.lang.String,java.lang.String,boolean,java.lang.String) -> a
    java.lang.String UpdateStatus() -> b
    com.taskmanager.bean.ResponseDto createMessage(com.taskmanager.bean.MessageDto) -> a
    com.taskmanager.bean.ChangeAssigneeResponseDto changeAssignee(com.taskmanager.bean.ChangeAssigneeDto) -> a
    void UpdateTargetDate(java.lang.String,java.lang.String) -> b
    void saveLoginResponse(com.taskmanager.bean.registrationDTO) -> a
    void saveValidateOTPResponse(com.taskmanager.bean.OTPValidateDTO) -> a
    void saveTaskListResponse(java.util.ArrayList) -> a
    void reloadListOnScreen() -> d
    void registerDeviceOnServer(android.content.Context,java.lang.String,java.lang.String) -> a
    void createNotaiont(java.lang.String,java.lang.String) -> c
    android.content.Context access$0() -> c
com.taskmanager.background.SyncModule$1 -> com.taskmanager.background.c:
    com.taskmanager.background.SyncModule this$0 -> a
    com.taskmanager.bean.taskListDTO val$task -> b
    com.taskmanager.bean.TaskInfoDto val$taskInfoDto -> c
    void run() -> run
com.taskmanager.background.SyncModule$2 -> com.taskmanager.background.d:
    com.taskmanager.background.SyncModule this$0 -> a
    com.taskmanager.bean.taskListDTO val$task -> b
    int val$randomNo -> c
    void run() -> run
com.taskmanager.background.SyncModule$3 -> com.taskmanager.background.e:
    com.taskmanager.background.SyncModule this$0 -> a
    java.lang.String val$taskId -> b
    java.lang.String val$taskDescription -> c
    void run() -> run
com.taskmanager.background.SyncModule$4 -> com.taskmanager.background.f:
    com.taskmanager.background.SyncModule this$0 -> a
    java.lang.String val$taskStatus -> b
    boolean val$isAssigner -> c
    java.lang.String val$mobileNumber -> d
    java.lang.String val$taskId -> e
    void run() -> run
com.taskmanager.background.SyncModule$5 -> com.taskmanager.background.g:
    com.taskmanager.background.SyncModule this$0 -> a
    void run() -> run
com.taskmanager.background.SyncModule$7 -> com.taskmanager.background.h:
    com.taskmanager.background.SyncModule this$0 -> a
    java.lang.String val$taskId -> b
    java.lang.String val$targetDate -> c
    void run() -> run
com.taskmanager.background.TaskSyncUtils -> com.taskmanager.background.i:
    com.taskmanager.background.TaskSyncUtils syncUtils -> a
    android.content.Context context -> b
    com.taskmanager.background.TaskSyncUtils getInstance(android.content.Context) -> a
    void run() -> run
    boolean fullSync(java.lang.String,android.content.Context,java.lang.String) -> a
    void syscTaskANdMessage(android.content.Context) -> b
    void updateTaskAndMessage(java.lang.String,android.content.Context) -> d
    void createTask(com.taskmanager.domain.TaskInfoType,android.content.Context) -> a
    void updateTask(com.taskmanager.domain.TaskInfoType,android.content.Context) -> b
    void createMessage(com.taskmanager.domain.MessageInfoType,android.content.Context) -> a
    void updateMessage(com.taskmanager.domain.MessageInfoType,android.content.Context) -> b
    boolean isNewMessage(java.lang.String,android.content.Context) -> a
    boolean isNewTask(java.lang.String,android.content.Context) -> b
    void markMessageAsRead(android.content.Context) -> c
    void sync(java.lang.String,android.content.Context) -> c
com.taskmanager.background.TaskSyncUtils$1 -> com.taskmanager.background.j:
    android.content.Context val$context -> a
    void run() -> run
com.taskmanager.bean.ChangeAssigneeDto -> com.taskmanager.a.a:
    java.lang.String taskId -> a
    java.lang.String Assign_To_No -> b
    java.lang.String Assign_To_Name -> c
    java.lang.String oldAssignee -> d
    java.lang.String isAssigneeSync -> e
    java.lang.String mobileNumber -> f
    java.lang.String taskType -> g
    java.lang.String getTaskType() -> a
    java.lang.String getMobileNumber() -> b
    void setMobileNumber(java.lang.String) -> a
    void setIsAssigneeSync(java.lang.String) -> b
    java.lang.String getTaskId() -> c
    void setTaskId(java.lang.String) -> c
    java.lang.String getAssign_To_No() -> d
    void setAssign_To_No(java.lang.String) -> d
    java.lang.String getAssign_To_Name() -> e
    void setAssign_To_Name(java.lang.String) -> e
    java.lang.String getOldAssignee() -> f
    void setOldAssignee(java.lang.String) -> f
com.taskmanager.bean.ChangeAssigneeResponseDto -> com.taskmanager.a.b:
    java.lang.String status -> a
    java.lang.String getStatus() -> a
    void setStatus(java.lang.String) -> a
com.taskmanager.bean.CheckRegistrationDTO -> com.taskmanager.a.c:
    java.lang.String status -> a
    java.lang.String mobileNumber -> b
    java.lang.String firstName -> c
    java.lang.String messageDescription -> d
    java.lang.String regStatus -> e
    java.lang.String getRegStatus() -> a
    void setRegStatus(java.lang.String) -> a
    java.lang.String getStatus() -> b
    void setStatus(java.lang.String) -> b
    void setMobileNumber(java.lang.String) -> c
    void setFirstName(java.lang.String) -> d
    void setMessageDescription(java.lang.String) -> e
com.taskmanager.bean.CreateTaskDTO -> com.taskmanager.a.d:
    java.lang.String status -> a
    java.lang.String DisplayMessage -> b
    java.util.List taskList -> c
    java.util.List notRegisteredNo -> d
    java.util.List getNotRegisteredNo() -> a
    void setNotRegisteredNo(java.util.List) -> a
    java.util.List getTaskList() -> b
    void setTaskList(java.util.List) -> b
    java.lang.String getStatus() -> c
    void setStatus(java.lang.String) -> a
    java.lang.String getDisplayMessage() -> d
    void setDisplayMessage(java.lang.String) -> b
com.taskmanager.bean.LoginDTO -> com.taskmanager.a.e:
    java.lang.String fName -> a
    java.lang.String lName -> b
    java.lang.String middleName -> c
    java.lang.String phoneNo -> d
    java.lang.String email -> e
    java.lang.String countryName -> f
    java.lang.String getCountryName() -> a
    void setCountryName(java.lang.String) -> a
    java.lang.String getfName() -> b
    void setfName(java.lang.String) -> b
    java.lang.String getlName() -> c
    void setlName(java.lang.String) -> c
    java.lang.String getMiddleName() -> d
    void setMiddleName(java.lang.String) -> d
    java.lang.String getPhoneNo() -> e
    void setPhoneNo(java.lang.String) -> e
    java.lang.String getEmail() -> f
com.taskmanager.bean.MessageDialogDto -> com.taskmanager.a.f:
    java.util.ArrayList dialogMessgaeList -> a
    java.lang.String taskTypeDB -> b
    java.lang.String Taskid -> c
    java.lang.String AssignFromNum -> d
    android.app.Dialog dialogView -> e
    java.lang.String unReadStatus -> f
    java.lang.String AssignToNum -> g
    java.lang.String getUnReadStatus() -> a
    void setUnReadStatus(java.lang.String) -> a
    android.app.Dialog getDialogView() -> b
    void setDialogView(android.app.Dialog) -> a
    java.util.ArrayList getDialogMessgaeList() -> c
    void setDialogMessgaeList(java.util.ArrayList) -> a
    void setTaskTypeDB(java.lang.String) -> b
    java.lang.String getTaskid() -> d
    void setTaskid(java.lang.String) -> c
    void setAssignFromNum(java.lang.String) -> d
    java.lang.String getAssignToNum() -> e
    void setAssignToNum(java.lang.String) -> e
com.taskmanager.bean.MessageDto -> com.taskmanager.a.g:
    java.lang.String Message_ID -> a
    java.lang.String M_Desc -> b
    java.lang.String M_From -> c
    java.lang.String M_To -> d
    java.lang.String IsMessageSync -> e
    java.lang.String IsRead -> f
    java.lang.String Task_ID -> g
    java.lang.String M_From_Name -> h
    java.lang.String Creation_Date -> i
    java.lang.String transactionId -> j
    boolean IsMessage -> k
    java.lang.String getTransactionId() -> a
    void setTransactionId(java.lang.String) -> a
    void setIsMessage(boolean) -> a
    java.lang.String getMessage_ID() -> b
    void setMessage_ID(java.lang.String) -> b
    java.lang.String getM_Desc() -> c
    void setM_Desc(java.lang.String) -> c
    java.lang.String getM_From() -> d
    void setM_From(java.lang.String) -> d
    java.lang.String getM_To() -> e
    void setM_To(java.lang.String) -> e
    void setIsMessageSync(java.lang.String) -> f
    void setIsRead(java.lang.String) -> g
    java.lang.String getTask_ID() -> f
    void setTask_ID(java.lang.String) -> h
    void setM_From_Name(java.lang.String) -> i
    java.lang.String getCreation_Date() -> g
    void setCreation_Date(java.lang.String) -> j
com.taskmanager.bean.MessageListDTO -> com.taskmanager.a.h:
    java.lang.String oldMessageId -> a
    java.lang.String taskId -> b
    java.lang.String mFrom -> c
    java.lang.String mTo -> d
    java.lang.String mDesc -> e
    java.lang.String transactioId -> f
    java.lang.String getTransactioId() -> a
    void setTransactioId(java.lang.String) -> a
    java.lang.String getOldMessageId() -> b
    void setOldMessageId(java.lang.String) -> b
    java.lang.String getTaskId() -> c
    void setTaskId(java.lang.String) -> c
    java.lang.String getmFrom() -> d
    void setmFrom(java.lang.String) -> d
    java.lang.String getmTo() -> e
    void setmTo(java.lang.String) -> e
    java.lang.String getmDesc() -> f
    void setmDesc(java.lang.String) -> f
com.taskmanager.bean.NotationDto -> com.taskmanager.a.i:
    java.lang.String notaionName -> a
    int count -> b
    java.lang.String getNotaionName() -> a
    void setNotaionName(java.lang.String) -> a
    int getCount() -> b
    void setCount(int) -> a
com.taskmanager.bean.OTPValidateDTO -> com.taskmanager.a.j:
    java.lang.String mobileNo -> a
    java.lang.String OTP -> b
    java.lang.String OTP_status -> c
    java.lang.String DisplayMessage -> d
    java.lang.String getMobileNo() -> a
    void setMobileNo(java.lang.String) -> a
    java.lang.String getOTP() -> b
    void setOTP(java.lang.String) -> b
    java.lang.String getOTP_status() -> c
    void setOTP_status(java.lang.String) -> c
    void setDisplayMessage(java.lang.String) -> d
com.taskmanager.bean.ResponseDto -> com.taskmanager.a.k:
    java.lang.String status -> a
    java.lang.String messageId -> b
    java.lang.String messageDescription -> c
    java.lang.String getMessageDescription() -> a
    void setMessageDescription(java.lang.String) -> a
    java.lang.String getStatus() -> b
    void setStatus(java.lang.String) -> b
    java.lang.String getMessageId() -> c
    void setMessageId(java.lang.String) -> c
com.taskmanager.bean.TaskInfoDto -> com.taskmanager.a.l:
    java.lang.String taskId -> e
    java.lang.String groupId -> f
    java.lang.String assignFrom -> g
    java.lang.String assignTo -> a
    java.lang.String taskDescription -> b
    java.lang.String priority -> c
    java.lang.String transactionId -> d
    void setTransactionId(java.lang.String) -> a
    java.lang.String getTaskId() -> a
    void setTaskId(java.lang.String) -> b
    java.lang.String getGroupId() -> b
    void setGroupId(java.lang.String) -> c
    java.lang.String getAssignFrom() -> c
    void setAssignFrom(java.lang.String) -> d
    java.lang.String getAssignTo() -> d
    void setAssignTo(java.lang.String) -> e
    void setTaskDescription(java.lang.String) -> f
    void setPriority(java.lang.String) -> g
com.taskmanager.bean.UpdateTask -> com.taskmanager.a.m:
    java.lang.String Task_Desc -> a
    java.lang.String IsTaskUpdateSync -> b
    java.lang.String groupId -> c
    java.lang.String task_id -> d
    java.lang.String priority -> e
    java.lang.String target_date -> f
    java.lang.String reminderTime -> g
    java.lang.String updateDate -> h
    long updateDateTime -> i
    java.lang.String assignFrom -> j
    java.lang.String assignTo -> k
    long closureDate -> l
    java.lang.String TASK_SYNC_TYPE -> m
    java.lang.String getAssignFrom() -> a
    void setAssignFrom(java.lang.String) -> a
    java.lang.String getAssignTo() -> b
    void setAssignTo(java.lang.String) -> b
    void setUpdateDate(java.lang.String) -> c
    void setUpdateDateTime(long) -> a
    void setClosureDate(long) -> b
    java.lang.String getReminderTime() -> c
    void setReminderTime(java.lang.String) -> d
    java.lang.String getTarget_date() -> d
    void setTarget_date(java.lang.String) -> e
    java.lang.String getTask_id() -> e
    void setTask_id(java.lang.String) -> f
    java.lang.String getPriority() -> f
    void setPriority(java.lang.String) -> g
    void setGroupId(java.lang.String) -> h
    java.lang.String getTask_Desc() -> g
    void setTask_Desc(java.lang.String) -> i
    java.lang.String getIsTaskUpdateSync() -> h
    void setIsTaskUpdateSync(java.lang.String) -> j
    java.lang.String getTASK_SYNC_TYPE() -> i
    void setTASK_SYNC_TYPE(java.lang.String) -> k
com.taskmanager.bean.registrationDTO -> com.taskmanager.a.n:
    java.lang.String status -> a
    java.lang.String firstName -> b
    java.lang.String middleName -> c
    java.lang.String lastName -> d
    java.lang.String xToken -> e
    java.lang.String mobileNo -> f
    java.lang.String email -> g
    java.lang.String oprSys -> h
    java.lang.String displayMessage -> i
    void setDisplayMessage(java.lang.String) -> a
    java.lang.String getFirstName() -> a
    void setFirstName(java.lang.String) -> b
    java.lang.String getMiddleName() -> b
    void setMiddleName(java.lang.String) -> c
    java.lang.String getLastName() -> c
    void setLastName(java.lang.String) -> d
    java.lang.String getMobileNo() -> d
    void setMobileNo(java.lang.String) -> e
    java.lang.String getEmail() -> e
    void setEmail(java.lang.String) -> f
    java.lang.String getOprSys() -> f
    void setOprSys(java.lang.String) -> g
    java.lang.String getStatus() -> g
    void setStatus(java.lang.String) -> h
    java.lang.String getxToken() -> h
    void setxToken(java.lang.String) -> i
com.taskmanager.bean.taskListDTO -> com.taskmanager.a.o:
    java.lang.String taskId -> a
    java.lang.String assignFrom -> b
    java.lang.String assignFromName -> c
    java.lang.String assignTo -> d
    java.lang.String assignToName -> e
    java.lang.String taskDesc -> f
    java.lang.String priority -> g
    java.lang.String priorityDesc -> h
    java.lang.String closureDateTime -> i
    java.lang.String targetDateTime -> j
    java.lang.String fireFlag -> k
    java.lang.String reminderTime -> l
    java.lang.String isReminder -> m
    java.lang.String isMessage -> n
    java.lang.String status -> o
    java.lang.String favouraite -> p
    java.lang.String taskType -> q
    java.lang.String creationDate -> r
    java.lang.String transactioId -> s
    java.lang.String IsJunk -> t
    java.lang.String groupId -> u
    java.lang.String TotalMessage -> v
    java.lang.String UnreadMessage -> w
    java.lang.String closedBy -> x
    long creationDateime -> y
    long closureDate -> z
    java.lang.String isMsgSendChecked -> A
    java.lang.String taskUrl -> B
    java.lang.String updationDate -> C
    long updatedDateTime -> D
    java.lang.String getTransactioId() -> a
    void setTransactioId(java.lang.String) -> a
    void setUpdationDate(java.lang.String) -> b
    void setUpdatedDateTime(long) -> a
    void setIsMsgSendChecked(java.lang.String) -> c
    void setCreationDateime(long) -> b
    void setClosureDate(long) -> c
    java.lang.String getTaskId() -> b
    void setTaskId(java.lang.String) -> d
    java.lang.String getAssignFrom() -> c
    void setAssignFrom(java.lang.String) -> e
    java.lang.String getAssignTo() -> d
    void setAssignTo(java.lang.String) -> f
    java.lang.String getClosureDateTime() -> e
    void setClosureDateTime(java.lang.String) -> g
    java.lang.String getPriority() -> f
    void setPriority(java.lang.String) -> h
    java.lang.String getFireFlag() -> g
    void setFireFlag(java.lang.String) -> i
    java.lang.String getFavouraite() -> h
    void setFavouraite(java.lang.String) -> j
    java.lang.String getIsReminder() -> i
    java.lang.String getReminderTime() -> j
    void setReminderTime(java.lang.String) -> k
    java.lang.String getIsMessage() -> k
    void setIsMessage(java.lang.String) -> l
    java.lang.String getTaskDesc() -> l
    void setTaskDesc(java.lang.String) -> m
    java.lang.String getStatus() -> m
    void setStatus(java.lang.String) -> n
    java.lang.String getTaskType() -> n
    void setTaskType(java.lang.String) -> o
    java.lang.String getAssignFromName() -> o
    void setAssignFromName(java.lang.String) -> p
    void setAssignToName(java.lang.String) -> q
    java.lang.String getPriorityDesc() -> p
    void setPriorityDesc(java.lang.String) -> r
    java.lang.String getTargetDateTime() -> q
    void setTargetDateTime(java.lang.String) -> s
    java.lang.String getCreationDate() -> r
    void setCreationDate(java.lang.String) -> t
    java.lang.String getGroupId() -> s
    void setGroupId(java.lang.String) -> u
    java.lang.String getTotalMessage() -> t
    void setTotalMessage(java.lang.String) -> v
    java.lang.String getUnreadMessage() -> u
    void setUnreadMessage(java.lang.String) -> w
    java.lang.String getClosedBy() -> v
com.taskmanager.customui.CustomCheckBox -> com.taskmanager.customui.CustomCheckBox:
    int getCompoundPaddingLeft() -> getCompoundPaddingLeft
com.taskmanager.customui.MySwitch -> com.taskmanager.customui.MySwitch:
    int mOrientation -> a
    com.taskmanager.customui.MySwitch$OnChangeAttemptListener mOnChangeAttemptListener -> b
    boolean mPushStyle -> c
    boolean mTextOnThumb -> d
    int mThumbExtraMovement -> e
    android.graphics.drawable.Drawable mLeftBackground -> f
    android.graphics.drawable.Drawable mRightBackground -> g
    android.graphics.drawable.Drawable mMaskDrawable -> h
    android.graphics.drawable.Drawable mThumbDrawable -> i
    android.graphics.drawable.Drawable mTrackDrawable -> j
    int mThumbTextPadding -> k
    int mTrackTextPadding -> l
    int mSwitchMinWidth -> m
    int mSwitchMinHeight -> n
    int mSwitchPadding -> o
    java.lang.CharSequence mTextOn -> p
    java.lang.CharSequence mTextOff -> q
    android.graphics.drawable.Drawable mDrawableOn -> r
    android.graphics.drawable.Drawable mDrawableOff -> s
    boolean fixed -> t
    boolean clickDisabled -> u
    boolean onOrOff -> v
    android.graphics.Bitmap pushBitmap -> w
    android.graphics.Bitmap maskBitmap -> x
    android.graphics.Bitmap tempBitmap -> y
    android.graphics.Canvas backingLayer -> z
    int mTouchMode -> A
    int mTouchSlop -> B
    float mTouchX -> C
    float mTouchY -> D
    android.view.VelocityTracker mVelocityTracker -> E
    int mMinFlingVelocity -> F
    float mThumbPosition -> G
    int mSwitchWidth -> H
    int mSwitchHeight -> I
    int mThumbWidth -> J
    int mThumbHeight -> K
    int mSwitchLeft -> L
    int mSwitchTop -> M
    int mSwitchRight -> N
    int mSwitchBottom -> O
    android.text.TextPaint mTextPaint -> P
    android.content.res.ColorStateList mTextColors -> Q
    android.text.Layout mOnLayout -> R
    android.text.Layout mOffLayout -> S
    android.graphics.Paint xferPaint -> T
    android.graphics.Bitmap leftBitmap -> U
    android.graphics.Bitmap rightBitmap -> V
    android.graphics.Rect mTrackPaddingRect -> W
    android.graphics.Rect mThPad -> Z
    android.graphics.Rect canvasClipBounds -> aa
    int[] CHECKED_STATE_SET -> ab
    void setSwitchTextAppearance(android.content.Context,int) -> a
    void setSwitchTypefaceByIndex(int,int) -> a
    void setSwitchTypeface(android.graphics.Typeface,int) -> a
    void setSwitchTypeface(android.graphics.Typeface) -> a
    android.text.Layout makeLayout(java.lang.CharSequence) -> a
    boolean hitThumb(float,float) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performClick() -> performClick
    void cancelSuperTouch(android.view.MotionEvent) -> a
    void stopDrag(android.view.MotionEvent) -> b
    void animateThumbToCheckedState(boolean) -> a
    boolean getTargetCheckedState() -> a
    void setChecked(boolean) -> setChecked
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDraw(android.graphics.Canvas) -> onDraw
    int getCompoundPaddingRight() -> getCompoundPaddingRight
    int getCompoundPaddingTop() -> getCompoundPaddingTop
    int getThumbScrollRange() -> b
    int[] onCreateDrawableState(int) -> onCreateDrawableState
    void drawableStateChanged() -> drawableStateChanged
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.taskmanager.customui.MySwitch$OnChangeAttemptListener -> com.taskmanager.customui.a:
    void onChangeAttempted(boolean) -> a
com.taskmanager.database.DBAdapter -> com.taskmanager.b.a:
    java.lang.String DB_PATH -> a
    java.lang.String DB_NAME -> b
    android.database.sqlite.SQLiteDatabase myDataBase -> c
    android.content.Context myContext -> d
    com.taskmanager.database.DBAdapter dbAdapter -> e
    com.taskmanager.database.DBAdapter getInstance(android.content.Context) -> a
    void createDataBase() -> a
    boolean checkDataBase() -> k
    void openDataBase() -> b
    void openReadDataBase() -> c
    void close() -> close
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.util.ArrayList selectRecordsFromDBList(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String) -> a
    int updateRecordsInDB(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> a
    int deleteRecordInDB(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int CreateorUpdate(java.lang.String,java.lang.String) -> a
    int getTotalMessageForTask(java.lang.String) -> a
    java.lang.String getTaskIds(android.content.Context) -> b
    java.util.Map getTaskList(java.lang.String,android.content.Context) -> a
    java.util.Map getTaskListClose(java.lang.String,android.content.Context) -> b
    java.util.Map getCreateContactList(java.lang.String,android.content.Context) -> c
    java.util.ArrayList selectRecordsFromDBArrayListNew(java.lang.String) -> b
    java.util.ArrayList exceuteQueryWithException(java.lang.String) -> c
    long insertRecordsInDB(java.lang.String,java.lang.String,android.content.ContentValues) -> a
    void executeSQL(java.lang.String) -> d
    void createTable() -> d
    void createNewTable() -> e
    java.util.List getAsycnTaskList(java.lang.String) -> e
    java.util.List getMessageByTaskId(java.lang.String) -> f
    java.util.List getNewMessageByTaskId(java.lang.String) -> g
    void updateTask(android.content.ContentValues,java.lang.String) -> a
    void updateNotaionMapping(android.content.ContentValues,java.lang.String) -> b
    void updateMessage(android.content.ContentValues,java.lang.String) -> c
    java.util.List getAsyncMessageByTaskId(java.lang.String) -> h
    long saveRecord(java.lang.String,java.lang.String,android.content.ContentValues) -> b
    int updateRecord(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> b
    boolean isTaskExist(java.lang.String) -> i
    boolean isMessageExist(java.lang.String) -> j
    int getTotalOpenTask() -> f
    int getTotalCloseTask() -> g
    int getTotalJunkTask() -> h
    java.util.List getMSGReadAsyncTaskIds() -> i
    java.util.List getContacList() -> j
    boolean isUserRegistered(java.lang.String) -> k
    java.lang.String[] getTaskByHash(java.lang.String) -> l
    java.util.List getHasGroup(java.lang.String) -> m
    long createNotaion(android.content.ContentValues) -> a
    boolean isNotaionExist(java.lang.String) -> n
    boolean isTaskNotaionExist(java.lang.String,java.lang.String) -> b
    long createNotaionTaskMapping(android.content.ContentValues) -> b
com.taskmanager.database.DBAdapter$1 -> com.taskmanager.b.b:
    com.taskmanager.database.DBAdapter this$0 -> a
    android.content.Context val$context -> b
    com.taskmanager.dto.TaskInfoEntity val$entity -> c
    java.lang.String val$user_Assign_ToNO -> d
    void run() -> run
com.taskmanager.database.DBAdapter$2 -> com.taskmanager.b.c:
    com.taskmanager.database.DBAdapter this$0 -> a
    android.content.Context val$context -> b
    com.taskmanager.dto.TaskInfoEntity val$entity -> c
    java.lang.String val$user_Assign_ToNO -> d
    void run() -> run
com.taskmanager.domain.AssigneeType -> com.taskmanager.domain.AssigneeType:
    java.lang.String assignFrom -> a
    java.lang.String assignFromName -> b
    java.lang.String assignTo -> c
    java.lang.String assignToName -> d
    java.lang.String getAssignFrom() -> getAssignFrom
    void setAssignFrom(java.lang.String) -> setAssignFrom
    java.lang.String getAssignFromName() -> getAssignFromName
    void setAssignFromName(java.lang.String) -> setAssignFromName
    java.lang.String getAssignTo() -> getAssignTo
    void setAssignTo(java.lang.String) -> setAssignTo
    java.lang.String getAssignToName() -> getAssignToName
    void setAssignToName(java.lang.String) -> setAssignToName
com.taskmanager.domain.ChangedAssigneeType -> com.taskmanager.domain.ChangedAssigneeType:
    java.lang.String taskId -> a
    java.lang.String newAssignee -> b
    java.lang.String getTaskId() -> getTaskId
    void setTaskId(java.lang.String) -> setTaskId
    java.lang.String getNewAssignee() -> getNewAssignee
    void setNewAssignee(java.lang.String) -> setNewAssignee
com.taskmanager.domain.ContactStatus -> com.taskmanager.domain.ContactStatus:
    java.util.List mobilenumbers -> a
    java.lang.String regstatus -> b
    java.util.List getMobilenumbers() -> getMobilenumbers
    void setMobilenumbers(java.util.List) -> setMobilenumbers
    java.lang.String getRegstatus() -> getRegstatus
    void setRegstatus(java.lang.String) -> setRegstatus
com.taskmanager.domain.MessageInfoType -> com.taskmanager.domain.MessageInfoType:
    java.lang.String transactionId -> i
    java.lang.String isMessageRead -> j
    java.lang.String oldMessageId -> k
    java.lang.Long messageId -> a
    java.lang.String assignFrom -> b
    java.lang.String assignFromName -> c
    java.lang.String assignTo -> d
    java.lang.String assignToName -> e
    java.lang.String createdTime -> f
    java.lang.Long taskId -> g
    java.lang.String messageDescription -> h
    java.lang.String getTransactionId() -> getTransactionId
    void setTransactionId(java.lang.String) -> setTransactionId
    java.lang.String getIsMessageRead() -> getIsMessageRead
    void setIsMessageRead(java.lang.String) -> setIsMessageRead
    java.lang.Long getMessageId() -> getMessageId
    void setMessageId(java.lang.Long) -> setMessageId
    java.lang.String getAssignFrom() -> getAssignFrom
    void setAssignFrom(java.lang.String) -> setAssignFrom
    java.lang.String getAssignFromName() -> getAssignFromName
    void setAssignFromName(java.lang.String) -> setAssignFromName
    java.lang.String getAssignTo() -> getAssignTo
    void setAssignTo(java.lang.String) -> setAssignTo
    java.lang.String getAssignToName() -> getAssignToName
    void setAssignToName(java.lang.String) -> setAssignToName
    java.lang.String getCreatedTime() -> getCreatedTime
    void setCreatedTime(java.lang.String) -> setCreatedTime
    java.lang.Long getTaskId() -> getTaskId
    void setTaskId(java.lang.Long) -> setTaskId
    java.lang.String getMessageDescription() -> getMessageDescription
    void setMessageDescription(java.lang.String) -> setMessageDescription
    java.lang.String getOldMessageId() -> getOldMessageId
    void setOldMessageId(java.lang.String) -> setOldMessageId
com.taskmanager.domain.MessageListType -> com.taskmanager.domain.MessageListType:
    java.util.List message -> a
    java.util.List getMessage() -> getMessage
    void setMessage(java.util.List) -> setMessage
com.taskmanager.domain.RegistrationStatus -> com.taskmanager.domain.RegistrationStatus:
    java.util.List contactList -> a
    java.lang.String status -> b
    java.util.List getContactList() -> getContactList
    void setContactList(java.util.List) -> setContactList
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
com.taskmanager.domain.SyncTask -> com.taskmanager.domain.SyncTask:
    com.taskmanager.domain.SysncTaskResponseType response -> a
    com.taskmanager.domain.SysncTaskResponseType getResponse() -> getResponse
    void setResponse(com.taskmanager.domain.SysncTaskResponseType) -> setResponse
com.taskmanager.domain.SysncTaskResponseType -> com.taskmanager.domain.SysncTaskResponseType:
    com.taskmanager.domain.TaskResponseListType tasks -> a
    com.taskmanager.domain.TaskResponseListType getTasks() -> getTasks
    void setTasks(com.taskmanager.domain.TaskResponseListType) -> setTasks
com.taskmanager.domain.Task -> com.taskmanager.domain.Task:
    com.taskmanager.domain.TaskResponseType response -> a
    com.taskmanager.domain.TaskResponseType getResponse() -> getResponse
    void setResponse(com.taskmanager.domain.TaskResponseType) -> setResponse
com.taskmanager.domain.TaskInfoType -> com.taskmanager.domain.TaskInfoType:
    java.lang.String regStatus -> a
    java.lang.String oldTaskId -> b
    java.lang.String mobileNumber -> c
    java.lang.String lastUpdateTime -> d
    java.lang.String modifiedBy -> e
    java.lang.String transactionId -> f
    java.lang.String taskId -> g
    java.lang.String groupId -> h
    java.lang.String assignFrom -> i
    java.lang.String assignFromName -> j
    java.lang.String assignTo -> k
    java.lang.String assignToName -> l
    java.lang.String taskDescription -> m
    java.lang.String priority -> n
    java.lang.String fire -> o
    java.lang.String priorityDescription -> p
    java.lang.String targetDate -> q
    java.lang.String closerDate -> r
    java.lang.String closedBy -> s
    java.lang.String reminderTime -> t
    java.lang.String message -> u
    java.lang.String status -> v
    java.lang.String favouraite -> w
    java.lang.String creationDate -> x
    java.lang.String totalMessage -> y
    java.lang.String unreadMessage -> z
    java.lang.String isAssiner -> A
    java.lang.String oldAssignee -> B
    java.lang.String newAssignee -> C
    java.lang.String taskUrl -> D
    java.lang.String modifyDate -> E
    java.lang.String modyfiedDate -> F
    java.lang.String isMessageRead -> G
    java.lang.String isTaskRead -> H
    java.lang.String updateState -> I
    com.taskmanager.domain.MessageListType messages -> J
    java.lang.String getIsMessageRead() -> getIsMessageRead
    void setIsMessageRead(java.lang.String) -> setIsMessageRead
    java.lang.String getIsTaskRead() -> getIsTaskRead
    void setIsTaskRead(java.lang.String) -> setIsTaskRead
    java.lang.String getUpdateState() -> getUpdateState
    void setUpdateState(java.lang.String) -> setUpdateState
    java.lang.String getModyfiedDate() -> getModyfiedDate
    void setModyfiedDate(java.lang.String) -> setModyfiedDate
    java.lang.String getModifyDate() -> getModifyDate
    void setModifyDate(java.lang.String) -> setModifyDate
    java.lang.String getTaskUrl() -> getTaskUrl
    void setTaskUrl(java.lang.String) -> setTaskUrl
    java.lang.String getOldTaskId() -> getOldTaskId
    void setOldTaskId(java.lang.String) -> setOldTaskId
    java.lang.String getMobileNumber() -> getMobileNumber
    void setMobileNumber(java.lang.String) -> setMobileNumber
    java.lang.String getLastUpdateTime() -> getLastUpdateTime
    void setLastUpdateTime(java.lang.String) -> setLastUpdateTime
    java.lang.String getTaskId() -> getTaskId
    void setTaskId(java.lang.String) -> setTaskId
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.lang.String getAssignFrom() -> getAssignFrom
    void setAssignFrom(java.lang.String) -> setAssignFrom
    java.lang.String getAssignFromName() -> getAssignFromName
    void setAssignFromName(java.lang.String) -> setAssignFromName
    java.lang.String getAssignTo() -> getAssignTo
    void setAssignTo(java.lang.String) -> setAssignTo
    java.lang.String getAssignToName() -> getAssignToName
    void setAssignToName(java.lang.String) -> setAssignToName
    java.lang.String getTaskDescription() -> getTaskDescription
    void setTaskDescription(java.lang.String) -> setTaskDescription
    java.lang.String getPriority() -> getPriority
    void setPriority(java.lang.String) -> setPriority
    java.lang.String getFire() -> getFire
    void setFire(java.lang.String) -> setFire
    java.lang.String getPriorityDescription() -> getPriorityDescription
    void setPriorityDescription(java.lang.String) -> setPriorityDescription
    java.lang.String getTargetDate() -> getTargetDate
    void setTargetDate(java.lang.String) -> setTargetDate
    java.lang.String getCloserDate() -> getCloserDate
    void setCloserDate(java.lang.String) -> setCloserDate
    java.lang.String getClosedBy() -> getClosedBy
    void setClosedBy(java.lang.String) -> setClosedBy
    java.lang.String getReminderTime() -> getReminderTime
    void setReminderTime(java.lang.String) -> setReminderTime
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
    java.lang.String getFavouraite() -> getFavouraite
    void setFavouraite(java.lang.String) -> setFavouraite
    java.lang.String getCreationDate() -> getCreationDate
    void setCreationDate(java.lang.String) -> setCreationDate
    java.lang.String getTotalMessage() -> getTotalMessage
    void setTotalMessage(java.lang.String) -> setTotalMessage
    java.lang.String getUnreadMessage() -> getUnreadMessage
    void setUnreadMessage(java.lang.String) -> setUnreadMessage
    java.lang.String getIsAssiner() -> getIsAssiner
    void setIsAssiner(java.lang.String) -> setIsAssiner
    java.lang.String getOldAssignee() -> getOldAssignee
    void setOldAssignee(java.lang.String) -> setOldAssignee
    java.lang.String getNewAssignee() -> getNewAssignee
    void setNewAssignee(java.lang.String) -> setNewAssignee
    com.taskmanager.domain.MessageListType getMessages() -> getMessages
    void setMessages(com.taskmanager.domain.MessageListType) -> setMessages
    java.lang.String getModifiedBy() -> getModifiedBy
    void setModifiedBy(java.lang.String) -> setModifiedBy
    java.lang.String getTransactionId() -> getTransactionId
    void setTransactionId(java.lang.String) -> setTransactionId
    java.lang.String getRegStatus() -> getRegStatus
    void setRegStatus(java.lang.String) -> setRegStatus
com.taskmanager.domain.TaskResponseListType -> com.taskmanager.domain.TaskResponseListType:
    java.util.List task -> a
    java.util.List getTask() -> getTask
    void setTask(java.util.List) -> setTask
com.taskmanager.domain.TaskResponseType -> com.taskmanager.domain.TaskResponseType:
    com.taskmanager.domain.TaskResponseListType taskList -> d
    java.lang.String messageDescription -> a
    java.lang.String errorMessage -> b
    java.lang.String status -> c
    com.taskmanager.domain.TaskResponseListType getTaskList() -> getTaskList
    void setTaskList(com.taskmanager.domain.TaskResponseListType) -> setTaskList
    java.lang.String getMessageDescription() -> getMessageDescription
    void setMessageDescription(java.lang.String) -> setMessageDescription
    java.lang.String getErrorMessage() -> getErrorMessage
    void setErrorMessage(java.lang.String) -> setErrorMessage
    java.lang.String getStatus() -> getStatus
    void setStatus(java.lang.String) -> setStatus
com.taskmanager.dto.Contact -> com.taskmanager.c.a:
    java.lang.String name -> a
    java.lang.String number -> b
    boolean isSelected -> c
    java.lang.String regStatus -> d
    boolean isSelected() -> a
    void setSelected(boolean) -> a
    java.lang.String getRegStatus() -> b
    void setRegStatus(java.lang.String) -> a
    java.lang.String getName() -> c
    void setName(java.lang.String) -> b
    java.lang.String getNumber() -> d
    void setNumber(java.lang.String) -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.taskmanager.dto.ContactWiseDto -> com.taskmanager.c.b:
    java.lang.String Value -> a
    java.lang.String ValueType -> b
    void setValue(java.lang.String) -> a
    void setValueType(java.lang.String) -> b
com.taskmanager.dto.MessageInfoEntity -> com.taskmanager.c.c:
    java.lang.String message_description -> a
    java.lang.String messageId -> b
    com.taskmanager.dto.UserInfoEntity userInfoFrom -> c
    com.taskmanager.dto.UserInfoEntity userInfoTo -> d
    java.lang.String messageSysnStatus -> e
    java.lang.String messageReadStatus -> f
    java.lang.String createdDate -> g
    java.lang.String transactionId -> h
    java.lang.String getTransactionId() -> a
    void setTransactionId(java.lang.String) -> a
    java.lang.String getCreatedDate() -> b
    void setCreatedDate(java.lang.String) -> b
    java.lang.String getMessageReadStatus() -> c
    void setMessageReadStatus(java.lang.String) -> c
    void setMessageSysnStatus(java.lang.String) -> d
    com.taskmanager.dto.UserInfoEntity getUserInfoFrom() -> d
    void setUserInfoFrom(com.taskmanager.dto.UserInfoEntity) -> a
    com.taskmanager.dto.UserInfoEntity getUserInfoTo() -> e
    void setUserInfoTo(com.taskmanager.dto.UserInfoEntity) -> b
    java.lang.String getMessageId() -> f
    void setMessageId(java.lang.String) -> e
    java.lang.String getMessage_description() -> g
    void setMessage_description(java.lang.String) -> f
com.taskmanager.dto.TaskInfoEntity -> com.taskmanager.c.d:
    java.lang.String id -> a
    java.lang.String isSendMessageUnread -> b
    java.lang.String assign_from -> c
    java.lang.String task_description -> d
    java.lang.String creation_date -> e
    java.lang.String target_date -> f
    java.lang.String closer_date -> g
    boolean userRegistered -> h
    java.lang.String fire_flag -> i
    java.lang.String IsFavouraite -> j
    java.lang.String isReminder -> k
    java.lang.String reminder_time -> l
    java.lang.String transactionId -> m
    java.lang.String newAssigne -> n
    java.lang.String isMessage -> o
    java.lang.String status -> p
    java.lang.String priority -> q
    com.taskmanager.dto.UserInfoEntity userInfoFrom -> r
    com.taskmanager.dto.UserInfoEntity userInfoTo -> s
    java.lang.String groupId -> t
    java.lang.String Alarm_Date_Time -> u
    java.lang.String taskSyncType -> v
    int alarmBackground -> w
    int textTypeface -> x
    int msgCount -> y
    int taskStatusArrow -> z
    java.lang.String taskAssigneeName -> A
    int msgSyncStatusBackground -> B
    int msgCountColor -> C
    int calenderImage -> D
    int editIcon -> E
    int userIcon -> F
    int fireBackground -> G
    boolean fireEnable -> H
    boolean fireCheck -> I
    java.lang.String updatedDate -> J
    java.lang.String isMessageSend -> K
    int textIconTextColor -> L
    boolean isLocalThread -> M
    java.lang.String taskUrl -> N
    int urlTaskBackground -> O
    boolean completeCheckBoxImgEnable -> P
    boolean completeCheckBoxChecked -> Q
    int TaskSyncStatus -> R
    java.lang.String isAlarmSet -> S
    java.lang.String taskType -> T
    java.lang.String isFAvSync -> U
    java.lang.String isStatusSync -> V
    java.lang.String isPrioritySync -> W
    java.lang.String isReminderSync -> X
    java.lang.String isTaskUpdateSync -> Y
    java.lang.String isTaskSync -> Z
    java.lang.String isActive -> aa
    java.lang.String IsJunk -> ab
    java.lang.String count -> ac
    java.lang.String assignFromName -> ad
    java.lang.String alarmTime -> ae
    java.lang.String isAssigneeSync -> af
    java.lang.String IsTargetSync -> ag
    java.lang.String TotalMessage -> ah
    java.lang.String UnreadMessage -> ai
    java.lang.String IsTaskRead -> aj
    java.lang.String ClosedBy -> ak
    java.lang.String oldAssignee -> al
    java.lang.String CreationDateTime -> am
    java.lang.String ClosureDate -> an
    void setNewAssigne(java.lang.String) -> a
    java.lang.String getTransactionId() -> a
    void setTransactionId(java.lang.String) -> b
    java.lang.String getIsSendMessageUnread() -> b
    void setIsSendMessageUnread(java.lang.String) -> c
    int getTextIconTextColor() -> c
    void setTextIconTextColor(int) -> a
    java.lang.String getIsMessageSend() -> d
    void setIsMessageSend(java.lang.String) -> d
    java.lang.String getUpdatedDate() -> e
    void setUpdatedDate(java.lang.String) -> e
    boolean isCompleteCheckBoxChecked() -> f
    void setCompleteCheckBoxChecked(boolean) -> a
    void setCompleteCheckBoxImg(boolean) -> b
    int getUrlTaskBackground() -> g
    void setUrlTaskBackground(int) -> b
    java.lang.String getTaskUrl() -> h
    void setTaskUrl(java.lang.String) -> f
    boolean isLocalThread() -> i
    void setLocalThread(boolean) -> c
    int getTaskSyncStatus() -> j
    void setTaskSyncStatus(int) -> c
    boolean isFireCheck() -> k
    void setFireCheck(boolean) -> d
    int getFireBackground() -> l
    void setFireBackground(int) -> d
    boolean isFireEnable() -> m
    void setFireEnable(boolean) -> e
    int getCalenderImage() -> n
    void setCalenderImage(int) -> e
    int getEditIcon() -> o
    void setEditIcon(int) -> f
    int getUserIcon() -> p
    void setUserIcon(int) -> g
    int getMsgSyncStatusBackground() -> q
    void setMsgSyncStatusBackground(int) -> h
    int getMsgCountColor() -> r
    void setMsgCountColor(int) -> i
    int getTaskStatusArrow() -> s
    void setTaskStatusArrow(int) -> j
    java.lang.String getTaskAssigneeName() -> t
    void setTaskAssigneeName(java.lang.String) -> g
    int getMsgCount() -> u
    void setMsgCount(int) -> k
    int getTextTypeface() -> v
    void setTextTypeface(int) -> l
    int getAlarmBackground() -> w
    void setAlarmBackground(int) -> m
    java.lang.String getTaskSyncType() -> x
    void setTaskSyncType(java.lang.String) -> h
    java.lang.String getAlarm_Date_Time() -> y
    void setAlarm_Date_Time(java.lang.String) -> i
    java.lang.String getIsAlarmSet() -> z
    void setIsAlarmSet(java.lang.String) -> j
    java.lang.String getAssignFromName() -> A
    void setAssignFromName(java.lang.String) -> k
    java.lang.String getCount() -> B
    void setCount(java.lang.String) -> l
    void setIsActive(java.lang.String) -> m
    java.lang.String getTaskType() -> C
    void setTaskType(java.lang.String) -> n
    java.lang.String getIsFAvSync() -> D
    void setIsFAvSync(java.lang.String) -> o
    java.lang.String getIsStatusSync() -> E
    void setIsStatusSync(java.lang.String) -> p
    java.lang.String getIsPrioritySync() -> F
    void setIsPrioritySync(java.lang.String) -> q
    void setIsReminderSync(java.lang.String) -> r
    java.lang.String getIsTaskUpdateSync() -> G
    void setIsTaskUpdateSync(java.lang.String) -> s
    java.lang.String getIsTaskSync() -> H
    void setIsTaskSync(java.lang.String) -> t
    void setIsJunk(java.lang.String) -> u
    void setAlarmTime(java.lang.String) -> v
    java.lang.String getIsAssigneeSync() -> I
    void setIsAssigneeSync(java.lang.String) -> w
    java.lang.String getIsTargetSync() -> J
    void setIsTargetSync(java.lang.String) -> x
    void setTotalMessage(java.lang.String) -> y
    void setUnreadMessage(java.lang.String) -> z
    java.lang.String getIsTaskRead() -> K
    void setIsTaskRead(java.lang.String) -> A
    void setClosedBy(java.lang.String) -> B
    java.lang.String getOldAssignee() -> L
    void setOldAssignee(java.lang.String) -> C
    void setCreationDateTime(java.lang.String) -> D
    void setClosureDate(java.lang.String) -> E
    java.lang.String getId() -> M
    void setId(java.lang.String) -> F
    java.lang.String getAssign_from() -> N
    void setAssign_from(java.lang.String) -> G
    java.lang.String getTask_description() -> O
    void setTask_description(java.lang.String) -> H
    java.lang.String getCreation_date() -> P
    void setCreation_date(java.lang.String) -> I
    java.lang.String getTarget_date() -> Q
    void setTarget_date(java.lang.String) -> J
    void setCloser_date(java.lang.String) -> K
    java.lang.String getFire_flag() -> R
    void setFire_flag(java.lang.String) -> L
    java.lang.String getIsFavouraite() -> S
    void setIsFavouraite(java.lang.String) -> M
    void setIsReminder(java.lang.String) -> N
    java.lang.String getReminder_time() -> T
    void setReminder_time(java.lang.String) -> O
    void setIsMessage(java.lang.String) -> P
    java.lang.String getStatus() -> U
    void setStatus(java.lang.String) -> Q
    java.lang.String getPriority() -> V
    void setPriority(java.lang.String) -> R
    com.taskmanager.dto.UserInfoEntity getUserInfoFrom() -> W
    void setUserInfoFrom(com.taskmanager.dto.UserInfoEntity) -> a
    com.taskmanager.dto.UserInfoEntity getUserInfoTo() -> X
    void setUserInfoTo(com.taskmanager.dto.UserInfoEntity) -> b
    void setGroupId(java.lang.String) -> S
    boolean isUserRegistered() -> Y
    void setUserRegistered(boolean) -> f
com.taskmanager.dto.UserInfoEntity -> com.taskmanager.c.e:
    java.lang.String firstName -> a
    java.lang.String mobile_number -> b
    java.lang.String getFirstName() -> a
    void setFirstName(java.lang.String) -> a
    java.lang.String getMobile_number() -> b
    void setMobile_number(java.lang.String) -> b
com.taskmanager.entites.TaskEntity -> com.taskmanager.d.a:
    int updateUserTableData(java.lang.String,java.lang.String,android.content.Context) -> a
    java.util.Map getTaskListNew(boolean,boolean,boolean,boolean,boolean,java.lang.String,java.lang.String,android.content.Context) -> a
    java.util.Map getCloseTaskList(boolean,boolean,boolean,boolean,boolean,java.lang.String,android.content.Context) -> a
    int unreadMessageCount(java.lang.String,android.content.Context) -> a
    int isMessRead(java.lang.String,android.content.Context) -> b
    java.util.Map getJunkTaskList(boolean,boolean,boolean,boolean,boolean,java.lang.String,android.content.Context) -> b
    java.util.List getContactWiseList(java.lang.String,java.lang.String,android.content.Context) -> b
    java.util.List getHasWiseGroup(android.content.Context) -> a
    java.util.Map getContactWiseTasks(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,android.content.Context) -> a
    boolean msgSyncStatus(java.lang.String,android.content.Context) -> c
    void deleteChangeAssignee(java.lang.String,android.content.Context) -> d
    int getTotalOpen(android.content.Context) -> b
    int getTotalClose(android.content.Context) -> c
    int getTotalJunk(android.content.Context) -> d
    boolean isUserRegistered(android.content.Context,java.lang.String) -> a
com.taskmanager.json.RequestMethod -> com.taskmanager.e.a:
    com.taskmanager.json.RequestMethod GET -> a
    com.taskmanager.json.RequestMethod POST -> b
    com.taskmanager.json.RequestMethod PUT -> c
    com.taskmanager.json.RequestMethod DELETE -> d
    com.taskmanager.json.RequestMethod[] ENUM$VALUES -> e
    com.taskmanager.json.RequestMethod[] values() -> values
    com.taskmanager.json.RequestMethod valueOf(java.lang.String) -> valueOf
com.taskmanager.json.RestClient -> com.taskmanager.e.b:
    java.util.ArrayList params -> a
    java.util.ArrayList headers -> b
    java.lang.String postData -> c
    int connectionTimeOut -> d
    int soTimeOut -> e
    java.lang.String url -> f
    int responseCode -> g
    java.lang.String message -> h
    java.lang.String response -> i
    int[] $SWITCH_TABLE$com$taskmanager$json$RequestMethod -> j
    void setSoTimeOut(int) -> a
    java.lang.String getResponse() -> a
    void AddHeader(java.lang.String,java.lang.String) -> a
    void Execute(com.taskmanager.json.RequestMethod) -> a
    void executeRequest(org.apache.http.client.methods.HttpUriRequest,java.lang.String) -> a
    java.lang.String convertStreamToString(java.io.InputStream) -> a
    void setPostData(java.lang.String) -> a
    int[] $SWITCH_TABLE$com$taskmanager$json$RequestMethod() -> b
com.taskmanager.ui.AlarmTaskAcitivity -> com.taskmanager.ui.AlarmTaskAcitivity:
    android.content.Context ctx -> b
    java.lang.String taskId -> a
    android.widget.LinearLayout layout -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void displayDialog(android.content.Context,java.lang.String,java.lang.String) -> a
    void addReminder(int,java.lang.String) -> a
    void access$0(com.taskmanager.ui.AlarmTaskAcitivity,int,java.lang.String) -> a
com.taskmanager.ui.AlarmTaskAcitivity$1 -> com.taskmanager.ui.a:
    com.taskmanager.ui.AlarmTaskAcitivity this$0 -> a
    android.content.Context val$ctx -> b
    android.app.Dialog val$dialog -> c
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AlarmTaskAcitivity$2 -> com.taskmanager.ui.b:
    com.taskmanager.ui.AlarmTaskAcitivity this$0 -> a
    android.content.Context val$ctx -> b
    android.app.Dialog val$dialog -> c
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AlarmTaskAcitivity$3 -> com.taskmanager.ui.c:
    com.taskmanager.ui.AlarmTaskAcitivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity -> com.taskmanager.ui.AllTaskActivity:
    java.util.Timer timer -> e
    java.lang.String pulldownDataState -> f
    boolean isTaskOrMsgCreationInitated -> a
    android.content.Context context -> g
    java.util.ArrayList openTaskList -> h
    java.lang.String sortVal -> i
    android.widget.LinearLayout addTask -> j
    boolean isTaskOpen -> k
    boolean istaskOpenClose -> l
    android.widget.LinearLayout headerBar -> m
    android.app.Dialog dialog -> n
    android.widget.LinearLayout moreBtn -> o
    boolean junkFlag -> p
    int totalUnreadCount -> q
    java.util.ArrayList unreadTaskID -> r
    android.widget.TextView totalUnread -> s
    boolean isPullRefreshInProgress -> t
    java.lang.String noOfFavourite -> u
    java.lang.String noOfFire -> v
    int favCount -> w
    int fireCount -> x
    android.widget.TextView favBadge -> y
    android.widget.TextView fireBadge -> z
    int scrollTask -> A
    int rowHeight -> B
    android.widget.LinearLayout openTaskInfoLinear -> C
    android.widget.LinearLayout openTaskDescBtnsLinear -> D
    android.widget.LinearLayout openTaskIcon -> E
    android.widget.ImageView openTaskDivider -> F
    android.widget.ImageView openTaskArrow -> G
    android.widget.LinearLayout openTaskcheck -> H
    android.widget.LinearLayout selfLinear -> I
    android.widget.LinearLayout receivedLinear -> J
    android.widget.LinearLayout assignedLinear -> K
    android.widget.CheckBox selfCheck -> L
    android.widget.CheckBox receivedCheck -> M
    android.widget.CheckBox assignedCheck -> N
    boolean selfFlag -> O
    boolean receivedFlag -> P
    boolean assignedFlag -> Q
    boolean restoredAssignedFlag -> R
    java.lang.String taskType -> S
    android.app.ProgressDialog progressDialog -> T
    android.os.Handler progressHandler -> U
    android.widget.TextView noTaskMsg -> V
    android.widget.ScrollView TaskList -> W
    java.lang.String sortBy -> X
    java.lang.String contactSummery -> Y
    android.widget.LinearLayout allFavroiteLinear -> Z
    android.widget.LinearLayout allFireLinear -> aa
    boolean favViewFlag -> ab
    boolean fireViewFlag -> ac
    java.lang.String changedAssigneeName -> ad
    java.lang.String changedAssigneeNum -> ae
    java.lang.String globalTaskId -> af
    java.lang.String globalAssigneeNum -> ag
    java.lang.String globalAssigneeName -> ah
    boolean flagcompleteCheckBox -> ai
    android.widget.LinearLayout linearTotalUnread -> aj
    boolean favouriteFlagSelf -> ak
    boolean favouriteFlagReceived -> al
    boolean favouriteFlagAssigned -> am
    java.util.HashMap taskCheckBoxMap -> b
    java.lang.String[] changeAssigneeNumbers -> an
    boolean flag_Close_Message -> ao
    android.app.ProgressDialog progressDialogReceived -> ap
    android.widget.ProgressBar progressBarMessage -> aq
    android.widget.LinearLayout lineartotalUnreadButton -> ar
    android.widget.LinearLayout linearTop -> as
    android.widget.LinearLayout linearUnreadTotal -> at
    int favCountGlobal -> au
    int firecountGlobal -> av
    android.widget.CheckBox checkBoxFavouriteTop -> aw
    android.widget.CheckBox checkBoxFireTop -> ax
    android.widget.TextView txtAssigorName -> ay
    com.taskmanager.app.pulldown.api.PullToRefreshListView list_view -> az
    boolean isTopClick -> aA
    com.taskmanager.background.TaskSyncUtils syncUtils -> aB
    android.widget.ListView actualListView -> c
    java.lang.String contactWiseType -> aC
    java.lang.String contactWiseTypeValue -> aD
    boolean isContactWise -> d
    android.content.BroadcastReceiver broadcastReceiver -> aE
    android.content.BroadcastReceiver mHandleMessageReceiver -> aF
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onPause() -> onPause
    void createContactWiseList(java.util.ArrayList) -> a
    void createHashWiseList(java.util.ArrayList) -> b
    void showCustomDialog() -> d
    void displayMessageDialogNew(java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.widget.TextView,android.widget.LinearLayout,com.taskmanager.dto.TaskInfoEntity) -> a
    void displayChangeAssignee(java.lang.String,java.lang.String,java.lang.String,android.widget.TextView) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void loadContactWiseTask(java.lang.String,java.lang.String) -> a
    void expandTask(android.view.View,android.view.View,android.view.View,android.view.View) -> b
    void collapseTask(android.view.View,android.view.View,android.view.View,android.view.View) -> a
    void expand(android.view.View) -> expand
    void collapse(android.view.View) -> collapse
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    java.lang.String getContactNameFromPhoneNo(android.content.Context,java.lang.String,java.lang.String) -> a
    void callAsynchronousTask() -> a
    void onDestroy() -> onDestroy
    void displayCloseMessageDialog(java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.widget.TextView,android.widget.LinearLayout,com.taskmanager.dto.TaskInfoEntity) -> b
    void onBackPressed() -> onBackPressed
    void editContentPopup(java.lang.String,java.lang.String,java.lang.String,android.widget.TextView,com.taskmanager.dto.TaskInfoEntity) -> a
    void deleteCalendarEvent(android.content.ContentResolver,android.net.Uri,java.lang.String) -> a
    android.widget.TextView access$0(com.taskmanager.ui.AllTaskActivity) -> a
    android.widget.LinearLayout access$1(com.taskmanager.ui.AllTaskActivity) -> b
    android.widget.ScrollView access$2(com.taskmanager.ui.AllTaskActivity) -> c
    void access$3(com.taskmanager.ui.AllTaskActivity,java.util.ArrayList) -> a
    android.content.Context access$4(com.taskmanager.ui.AllTaskActivity) -> d
    com.taskmanager.app.pulldown.api.PullToRefreshListView access$5(com.taskmanager.ui.AllTaskActivity) -> e
    android.widget.TextView access$6(com.taskmanager.ui.AllTaskActivity) -> f
    android.widget.TextView access$7(com.taskmanager.ui.AllTaskActivity) -> g
    android.widget.TextView access$8(com.taskmanager.ui.AllTaskActivity) -> h
    void access$9(com.taskmanager.ui.AllTaskActivity,java.lang.String) -> a
    android.widget.CheckBox access$10(com.taskmanager.ui.AllTaskActivity) -> i
    android.widget.CheckBox access$11(com.taskmanager.ui.AllTaskActivity) -> j
    android.widget.CheckBox access$12(com.taskmanager.ui.AllTaskActivity) -> k
    android.widget.CheckBox access$13(com.taskmanager.ui.AllTaskActivity) -> l
    android.widget.CheckBox access$14(com.taskmanager.ui.AllTaskActivity) -> m
    java.lang.String access$15(com.taskmanager.ui.AllTaskActivity) -> n
    java.lang.String access$16(com.taskmanager.ui.AllTaskActivity) -> o
    void access$17(boolean) -> a
    void access$18(com.taskmanager.ui.AllTaskActivity,int) -> a
    android.app.ProgressDialog access$19(com.taskmanager.ui.AllTaskActivity) -> p
    java.lang.String access$20(com.taskmanager.ui.AllTaskActivity) -> q
    void access$21(com.taskmanager.ui.AllTaskActivity,int) -> b
    void access$22(com.taskmanager.ui.AllTaskActivity,int) -> c
    int access$23(com.taskmanager.ui.AllTaskActivity) -> r
    void access$24(java.lang.String) -> a
    int access$25(com.taskmanager.ui.AllTaskActivity) -> s
    void access$26(java.lang.String) -> b
    void access$27(com.taskmanager.ui.AllTaskActivity,java.util.ArrayList) -> b
    void access$28(com.taskmanager.ui.AllTaskActivity,java.util.ArrayList) -> c
    void access$29(com.taskmanager.ui.AllTaskActivity,boolean) -> a
    java.lang.String access$30(com.taskmanager.ui.AllTaskActivity) -> t
    java.lang.String access$31(com.taskmanager.ui.AllTaskActivity) -> u
    void access$32(com.taskmanager.ui.AllTaskActivity,int) -> d
    void access$33(com.taskmanager.ui.AllTaskActivity,int) -> e
    void access$34(com.taskmanager.ui.AllTaskActivity,android.content.ContentResolver,android.net.Uri,java.lang.String) -> a
    void access$35(com.taskmanager.ui.AllTaskActivity,boolean) -> b
    boolean access$36(com.taskmanager.ui.AllTaskActivity) -> v
    android.widget.LinearLayout access$37(com.taskmanager.ui.AllTaskActivity) -> w
    android.widget.ImageView access$38(com.taskmanager.ui.AllTaskActivity) -> x
    android.widget.ImageView access$39(com.taskmanager.ui.AllTaskActivity) -> y
    android.widget.LinearLayout access$40(com.taskmanager.ui.AllTaskActivity) -> z
    void access$41(com.taskmanager.ui.AllTaskActivity,android.widget.LinearLayout) -> a
    void access$42(com.taskmanager.ui.AllTaskActivity,android.widget.ImageView) -> a
    void access$43(com.taskmanager.ui.AllTaskActivity,android.widget.LinearLayout) -> b
    void access$44(com.taskmanager.ui.AllTaskActivity,android.widget.ImageView) -> b
    void access$45(com.taskmanager.ui.AllTaskActivity,android.widget.LinearLayout) -> c
    void access$46(com.taskmanager.ui.AllTaskActivity,android.widget.LinearLayout) -> d
    void access$47(com.taskmanager.ui.AllTaskActivity,android.view.View,android.view.View,android.view.View,android.view.View) -> a
    void access$48(com.taskmanager.ui.AllTaskActivity,boolean) -> c
    void access$49(com.taskmanager.ui.AllTaskActivity,java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.widget.TextView,android.widget.LinearLayout,com.taskmanager.dto.TaskInfoEntity) -> a
    void access$50(com.taskmanager.ui.AllTaskActivity,android.widget.TextView) -> a
    void access$51(com.taskmanager.ui.AllTaskActivity,java.lang.String) -> b
    void access$52(com.taskmanager.ui.AllTaskActivity,java.lang.String) -> c
    void access$53(com.taskmanager.ui.AllTaskActivity,java.lang.String) -> d
    java.lang.String access$54(com.taskmanager.ui.AllTaskActivity) -> A
    java.lang.String access$55(com.taskmanager.ui.AllTaskActivity) -> B
    android.widget.TextView access$56(com.taskmanager.ui.AllTaskActivity) -> C
    void access$57(com.taskmanager.ui.AllTaskActivity,java.lang.String,java.lang.String,java.lang.String,android.widget.TextView) -> a
    void access$58(com.taskmanager.ui.AllTaskActivity,java.lang.String,java.lang.String,java.lang.String,android.widget.TextView,com.taskmanager.dto.TaskInfoEntity) -> a
    void access$59(com.taskmanager.ui.AllTaskActivity,java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.widget.TextView,android.widget.LinearLayout,com.taskmanager.dto.TaskInfoEntity) -> b
    boolean access$60(com.taskmanager.ui.AllTaskActivity) -> D
    void access$61(com.taskmanager.ui.AllTaskActivity,java.lang.String) -> e
    void access$62(com.taskmanager.ui.AllTaskActivity,java.lang.String) -> f
    android.app.ProgressDialog access$63(com.taskmanager.ui.AllTaskActivity) -> E
    boolean access$64() -> b
    void access$65(com.taskmanager.ui.AllTaskActivity,boolean) -> d
    void access$66(com.taskmanager.ui.AllTaskActivity,boolean) -> e
    void access$67(com.taskmanager.ui.AllTaskActivity,boolean) -> f
    void access$68(com.taskmanager.ui.AllTaskActivity,boolean) -> g
    void access$69(com.taskmanager.ui.AllTaskActivity,java.lang.String) -> g
    android.widget.LinearLayout access$70(com.taskmanager.ui.AllTaskActivity) -> F
    android.widget.LinearLayout access$71(com.taskmanager.ui.AllTaskActivity) -> G
    boolean access$72(com.taskmanager.ui.AllTaskActivity) -> H
    void access$73(com.taskmanager.ui.AllTaskActivity) -> I
    java.lang.String access$74(com.taskmanager.ui.AllTaskActivity) -> J
    void access$75(com.taskmanager.ui.AllTaskActivity,java.lang.String,java.lang.String) -> a
    void access$76(com.taskmanager.ui.AllTaskActivity,java.lang.String) -> h
    android.app.Dialog access$77(com.taskmanager.ui.AllTaskActivity) -> K
    java.lang.String access$78(com.taskmanager.ui.AllTaskActivity) -> L
    com.taskmanager.background.TaskSyncUtils access$79() -> c
    java.lang.String access$80(com.taskmanager.ui.AllTaskActivity) -> M
    java.lang.String access$81(com.taskmanager.ui.AllTaskActivity) -> N
    void access$82(com.taskmanager.ui.AllTaskActivity,java.lang.String) -> i
    void access$83(com.taskmanager.ui.AllTaskActivity,java.lang.String) -> j
    java.lang.String access$84(com.taskmanager.ui.AllTaskActivity) -> O
com.taskmanager.ui.AllTaskActivity$1 -> com.taskmanager.ui.d:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.taskmanager.ui.AllTaskActivity$10 -> com.taskmanager.ui.e:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$11 -> com.taskmanager.ui.f:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$12 -> com.taskmanager.ui.g:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$13 -> com.taskmanager.ui.h:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$14 -> com.taskmanager.ui.i:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onRefresh(com.taskmanager.app.pulldown.api.PullToRefreshBase) -> a
com.taskmanager.ui.AllTaskActivity$15 -> com.taskmanager.ui.j:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onLastItemVisible() -> a
com.taskmanager.ui.AllTaskActivity$16 -> com.taskmanager.ui.k:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    java.lang.String val$Val -> b
    java.lang.String val$ValType -> c
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$17 -> com.taskmanager.ui.l:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    java.lang.String val$Val -> b
    java.lang.String val$ValType -> c
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$18 -> com.taskmanager.ui.m:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$19 -> com.taskmanager.ui.n:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.LinearLayout val$sync -> b
    void handleMessage(android.os.Message) -> handleMessage
com.taskmanager.ui.AllTaskActivity$2 -> com.taskmanager.ui.o:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.taskmanager.ui.AllTaskActivity$20 -> com.taskmanager.ui.p:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.LinearLayout val$contactWiseAssigned -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$21 -> com.taskmanager.ui.q:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.LinearLayout val$contactWiseHasTask -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$22 -> com.taskmanager.ui.r:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.LinearLayout val$contactWiseReceived -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$23 -> com.taskmanager.ui.s:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.LinearLayout val$nameSorting -> b
    android.widget.LinearLayout val$dateSorting -> c
    android.widget.LinearLayout val$prioritySorting -> d
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$24 -> com.taskmanager.ui.t:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.LinearLayout val$nameSorting -> b
    android.widget.LinearLayout val$dateSorting -> c
    android.widget.LinearLayout val$prioritySorting -> d
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$25 -> com.taskmanager.ui.u:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.LinearLayout val$nameSorting -> b
    android.widget.LinearLayout val$dateSorting -> c
    android.widget.LinearLayout val$prioritySorting -> d
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$26 -> com.taskmanager.ui.v:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.LinearLayout val$openTaskFilter -> b
    android.widget.LinearLayout val$closedTaskFilter -> c
    android.widget.LinearLayout val$junkTaskFilter -> d
    android.widget.LinearLayout val$contactWiseAssigned -> e
    android.widget.LinearLayout val$contactWiseReceived -> f
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$27 -> com.taskmanager.ui.w:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.LinearLayout val$openTaskFilter -> b
    android.widget.LinearLayout val$closedTaskFilter -> c
    android.widget.LinearLayout val$junkTaskFilter -> d
    android.widget.LinearLayout val$contactWiseAssigned -> e
    android.widget.LinearLayout val$contactWiseReceived -> f
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$28 -> com.taskmanager.ui.x:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.LinearLayout val$openTaskFilter -> b
    android.widget.LinearLayout val$closedTaskFilter -> c
    android.widget.LinearLayout val$junkTaskFilter -> d
    android.widget.LinearLayout val$contactWiseAssigned -> e
    android.widget.LinearLayout val$contactWiseReceived -> f
    android.widget.TextView val$junkIcon -> g
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$29 -> com.taskmanager.ui.y:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.LinearLayout val$sync -> b
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.AllTaskActivity access$0(com.taskmanager.ui.AllTaskActivity$29) -> a
com.taskmanager.ui.AllTaskActivity$29$1 -> com.taskmanager.ui.z:
    android.app.ProgressDialog dialog -> b
    com.taskmanager.ui.AllTaskActivity$29 this$1 -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Void) -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$3 -> com.taskmanager.ui.aa:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.taskmanager.ui.AllTaskActivity$30 -> com.taskmanager.ui.ab:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.EditText val$messageEdit -> b
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.taskmanager.ui.AllTaskActivity$31 -> com.taskmanager.ui.ac:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.ImageView val$messageediticon -> b
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.taskmanager.ui.AllTaskActivity$32 -> com.taskmanager.ui.ad:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$33 -> com.taskmanager.ui.ae:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.EditText val$messageEdit -> b
    android.widget.Button val$send -> c
    android.widget.LinearLayout val$msgSyncStatus -> d
    java.lang.String val$msgToNum -> e
    java.lang.String val$taskId -> f
    android.app.Dialog val$dialog -> g
    android.widget.TextView val$msgCount -> h
    com.taskmanager.dto.TaskInfoEntity val$entity -> i
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$34 -> com.taskmanager.ui.af:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$35 -> com.taskmanager.ui.ag:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.LinearLayout val$asigneeName -> b
    android.app.Dialog val$dialog -> c
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$36 -> com.taskmanager.ui.ah:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.LinearLayout val$asigneeName -> b
    android.app.Dialog val$dialog -> c
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$37 -> com.taskmanager.ui.ai:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    java.lang.String val$taskid -> b
    android.widget.TextView val$txtAssinorTask -> c
    android.app.Dialog val$dialog -> d
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$38 -> com.taskmanager.ui.aj:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.taskmanager.ui.AllTaskActivity$39 -> com.taskmanager.ui.ak:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void run() -> run
com.taskmanager.ui.AllTaskActivity$4 -> com.taskmanager.ui.al:
    android.app.ProgressDialog dialog -> b
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$40 -> com.taskmanager.ui.am:
    android.view.View val$v -> a
    int val$targtetHeight -> b
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    boolean willChangeBounds() -> willChangeBounds
com.taskmanager.ui.AllTaskActivity$41 -> com.taskmanager.ui.an:
    android.view.View val$v -> a
    int val$initialHeight -> b
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    boolean willChangeBounds() -> willChangeBounds
com.taskmanager.ui.AllTaskActivity$42 -> com.taskmanager.ui.ao:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void run() -> run
com.taskmanager.ui.AllTaskActivity$42$1 -> com.taskmanager.ui.ap:
    com.taskmanager.ui.AllTaskActivity$42 this$1 -> a
    void run() -> run
com.taskmanager.ui.AllTaskActivity$43 -> com.taskmanager.ui.aq:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$44 -> com.taskmanager.ui.ar:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    java.lang.Object execuet(android.app.Dialog) -> a
com.taskmanager.ui.AllTaskActivity$45 -> com.taskmanager.ui.as:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.taskmanager.ui.AllTaskActivity$46 -> com.taskmanager.ui.at:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.widget.EditText val$messageEdit -> b
    java.lang.String val$taskId -> c
    java.lang.String val$targetDate -> d
    android.widget.TextView val$taskSummaryTxtView -> e
    com.taskmanager.dto.TaskInfoEntity val$entity -> f
    android.app.Dialog val$dialog -> g
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$47 -> com.taskmanager.ui.au:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$48 -> com.taskmanager.ui.av:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    java.lang.String val$taskId -> b
    android.widget.EditText val$messageEdit -> c
    java.lang.String val$targetDate -> d
    android.widget.TextView val$taskSummaryTxtView -> e
    com.taskmanager.dto.TaskInfoEntity val$entity -> f
    android.app.Dialog val$dialog -> g
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$49 -> com.taskmanager.ui.aw:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$5 -> com.taskmanager.ui.ax:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$6 -> com.taskmanager.ui.ay:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$7 -> com.taskmanager.ui.az:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.taskmanager.ui.AllTaskActivity$8 -> com.taskmanager.ui.ba:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.taskmanager.ui.AllTaskActivity$9 -> com.taskmanager.ui.bb:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.taskmanager.ui.AllTaskActivity$AsyncChangeAssignee -> com.taskmanager.ui.bc:
    android.app.ProgressDialog dialog -> b
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    java.util.Map doInBackground(java.util.Map[]) -> a
    void onPostExecute(java.util.Map) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$AsyncTotalOpen -> com.taskmanager.ui.bd:
    android.app.ProgressDialog progressUnread_new -> b
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.Map doInBackground(java.lang.String[]) -> a
    void onPostExecute(java.util.Map) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$Asyntask -> com.taskmanager.ui.be:
    android.app.ProgressDialog dialog -> b
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onPostExecute(java.util.Map) -> a
    void onPreExecute() -> onPreExecute
    java.util.Map doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$AsyntaskClose -> com.taskmanager.ui.bf:
    android.app.ProgressDialog dialog -> b
    java.lang.String status -> c
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onPostExecute(java.util.Map) -> a
    void onPreExecute() -> onPreExecute
    java.util.Map doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$AsyntaskCreateMessage -> com.taskmanager.ui.bg:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    java.util.Map doInBackground(java.util.Map[]) -> a
    void onPostExecute(java.util.Map) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$AsyntaskShowMessageDialog -> com.taskmanager.ui.bh:
    com.taskmanager.bean.MessageDialogDto dialogDto -> b
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    java.util.ArrayList doInBackground(com.taskmanager.bean.MessageDialogDto[]) -> a
    void onPostExecute(java.util.ArrayList) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.taskmanager.bean.MessageDialogDto access$2(com.taskmanager.ui.AllTaskActivity$AsyntaskShowMessageDialog) -> a
    com.taskmanager.ui.AllTaskActivity access$4(com.taskmanager.ui.AllTaskActivity$AsyntaskShowMessageDialog) -> b
com.taskmanager.ui.AllTaskActivity$AsyntaskShowMessageDialog$1 -> com.taskmanager.ui.bi:
    com.taskmanager.ui.AllTaskActivity$AsyntaskShowMessageDialog this$1 -> a
    void run() -> run
com.taskmanager.ui.AllTaskActivity$CloseViewHolder -> com.taskmanager.ui.bj:
    android.view.LayoutInflater inflater -> a
    android.view.View rowView -> b
    boolean isUserRegistered -> c
    android.widget.LinearLayout main -> d
    android.widget.LinearLayout taskDescBtnsLinear -> e
    android.widget.LinearLayout completeCheckBox -> f
    android.widget.CheckBox completeCheckBoxImg -> g
    android.widget.ImageView arrow -> h
    android.widget.LinearLayout tasksummarylinear -> i
    android.widget.TextView taskSummaryTxtView -> j
    android.widget.LinearLayout taskIcons -> k
    android.widget.LinearLayout favouriteLinear -> l
    android.widget.CheckBox favouriteicon -> m
    android.widget.LinearLayout reopenLinear -> n
    android.widget.LinearLayout fireIconLinear -> o
    android.widget.CheckBox fireIcon -> p
    android.widget.LinearLayout closeLinear -> q
    android.widget.LinearLayout linearOpenClose -> r
    android.widget.LinearLayout taskInfoLinear -> s
    android.widget.ImageView taskSyncStatus -> t
    android.widget.TextView assignFromTextView -> u
    android.widget.LinearLayout msgSyncStatus -> v
    android.widget.TextView msgCount -> w
    android.widget.ImageView taskStatusArrow -> x
    android.widget.TextView startFromTextView -> y
    android.widget.ImageView dividerLine -> z
    android.widget.LinearLayout iconList -> A
    android.widget.LinearLayout editBtn -> B
    android.widget.LinearLayout deadlineBtn -> C
    android.widget.LinearLayout assigneeBtnLinear -> D
    android.widget.LinearLayout taskCompleteLinear -> E
    android.widget.ImageView editIcon -> F
    android.widget.ImageView calenderIcon -> G
    android.widget.ImageView userIcon -> H
    android.widget.ImageView alarmIcon -> I
    android.widget.TextView updateDate -> J
    android.widget.TextView txtEdit -> K
    android.widget.TextView txtCalender -> L
    android.widget.TextView txtAssign -> M
    android.widget.TextView txtAlarm -> N
    android.widget.LinearLayout taskinfolinear -> O
    android.widget.LinearLayout iconlistlinear -> P
    com.taskmanager.ui.AllTaskActivity this$0 -> Q
com.taskmanager.ui.AllTaskActivity$CreateContactWiseSummery -> com.taskmanager.ui.bk:
    android.app.ProgressDialog dialog -> b
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.ArrayList doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.ArrayList) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$CreateHasWiseSummery -> com.taskmanager.ui.bl:
    android.app.ProgressDialog dialog -> b
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.ArrayList doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.ArrayList) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter -> com.taskmanager.ui.bm:
    android.content.Context context -> b
    java.util.ArrayList list_entity -> c
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$0(com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter) -> a
    java.util.ArrayList access$1(com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter) -> b
    com.taskmanager.ui.AllTaskActivity access$2(com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter) -> c
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$1 -> com.taskmanager.ui.bn:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter this$1 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    java.lang.String val$Taskid -> c
    int val$position -> d
    boolean onLongClick(android.view.View) -> onLongClick
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$1) -> a
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$1$1 -> com.taskmanager.ui.bo:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$1 this$2 -> a
    java.lang.String[] val$finaloption -> b
    com.taskmanager.dto.TaskInfoEntity val$entity -> c
    java.lang.String val$Taskid -> d
    int val$position -> e
    void onClick(android.content.DialogInterface,int) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$1 access$0(com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$1$1) -> a
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$1$1$1 -> com.taskmanager.ui.bp:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$1$1 this$3 -> a
    java.lang.String val$taskId -> b
    void run() -> run
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$10 -> com.taskmanager.ui.bq:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter this$1 -> a
    com.taskmanager.ui.AllTaskActivity$CloseViewHolder val$holder -> b
    com.taskmanager.dto.TaskInfoEntity val$entity -> c
    java.lang.String val$Taskid -> d
    java.lang.String val$AssignFromNum -> e
    java.lang.String val$AssignToNum -> f
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$10) -> a
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$10$1 -> com.taskmanager.ui.br:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$10 this$2 -> a
    android.content.ContentValues val$initialValues -> b
    java.lang.String val$Taskid -> c
    java.lang.String val$AssignFromNum -> d
    com.taskmanager.ui.AllTaskActivity$CloseViewHolder val$holder -> e
    java.lang.String val$AssignToNum -> f
    void run() -> run
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$11 -> com.taskmanager.ui.bs:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter this$1 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    com.taskmanager.ui.AllTaskActivity$CloseViewHolder val$holder -> c
    java.lang.String val$Taskid -> d
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$11) -> a
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$11$1 -> com.taskmanager.ui.bt:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$11 this$2 -> a
    com.taskmanager.ui.AllTaskActivity$CloseViewHolder val$holder -> b
    java.lang.String val$Taskid -> c
    void run() -> run
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$2 -> com.taskmanager.ui.bu:
    java.lang.String STATUS -> a
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter this$1 -> b
    java.lang.String val$AssignFromNum -> c
    com.taskmanager.ui.AllTaskActivity$CloseViewHolder val$holder -> d
    java.lang.String val$targetDate -> e
    com.taskmanager.dto.TaskInfoEntity val$entity -> f
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$2) -> a
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$2$1 -> com.taskmanager.ui.bv:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$2 this$2 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    boolean val$isAssigner -> c
    java.lang.String val$msisdn -> d
    void run() -> run
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$3 -> com.taskmanager.ui.bw:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter this$1 -> a
    com.taskmanager.ui.AllTaskActivity$CloseViewHolder val$holder -> b
    com.taskmanager.dto.TaskInfoEntity val$entity -> c
    java.lang.String val$Taskid -> d
    java.lang.String val$AssignFromNum -> e
    java.lang.String val$AssignToNum -> f
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$3) -> a
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$3$1 -> com.taskmanager.ui.bx:
    android.app.ProgressDialog progressDialogReceived -> b
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$3 this$2 -> a
    java.lang.String val$Taskid -> c
    com.taskmanager.dto.TaskInfoEntity val$entity -> d
    java.lang.String val$AssignFromNum -> e
    java.lang.String val$AssignToNum -> f
    com.taskmanager.ui.AllTaskActivity$CloseViewHolder val$holder -> g
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$4 -> com.taskmanager.ui.by:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$5 -> com.taskmanager.ui.bz:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter this$1 -> a
    com.taskmanager.ui.AllTaskActivity$CloseViewHolder val$holder -> b
    java.lang.String val$AssignFromNum -> c
    java.lang.String val$Taskid -> d
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$5) -> a
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$5$1 -> com.taskmanager.ui.ca:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$5 this$2 -> a
    java.lang.String val$AssignFromNum -> b
    java.lang.String val$Taskid -> c
    void run() -> run
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$6 -> com.taskmanager.ui.cb:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter this$1 -> a
    java.lang.String val$AssignFromNum -> b
    java.lang.String val$Taskid -> c
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$6) -> a
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$6$1 -> com.taskmanager.ui.cc:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$6 this$2 -> a
    java.lang.String val$AssignFromNum -> b
    java.lang.String val$Taskid -> c
    void run() -> run
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$7 -> com.taskmanager.ui.cd:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter this$1 -> a
    com.taskmanager.ui.AllTaskActivity$CloseViewHolder val$holder -> b
    com.taskmanager.dto.TaskInfoEntity val$entity -> c
    java.lang.String val$AssignToNum -> d
    java.lang.String val$AssignTo -> e
    java.lang.String val$Taskid -> f
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$7) -> a
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$7$1 -> com.taskmanager.ui.ce:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$7 this$2 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    com.taskmanager.ui.AllTaskActivity$CloseViewHolder val$holder -> c
    java.lang.String val$AssignToNum -> d
    java.lang.String val$AssignTo -> e
    java.lang.String val$Taskid -> f
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$8 -> com.taskmanager.ui.cf:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter this$1 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    java.lang.String val$Taskid -> c
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter$9 -> com.taskmanager.ui.cg:
    com.taskmanager.ui.AllTaskActivity$DisplayCloseTaskAdapter this$1 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    java.lang.String val$Taskid -> c
    java.lang.String val$AssignToNum -> d
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter -> com.taskmanager.ui.ch:
    android.content.Context context -> b
    java.util.ArrayList list_entity -> c
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.content.Context access$0(com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter) -> a
    java.util.ArrayList access$1(com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter) -> b
    com.taskmanager.ui.AllTaskActivity access$2(com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter) -> c
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$1 -> com.taskmanager.ui.ci:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter this$1 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    java.lang.String val$Taskid -> c
    int val$position -> d
    boolean onLongClick(android.view.View) -> onLongClick
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$1) -> a
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$1$1 -> com.taskmanager.ui.cj:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$1 this$2 -> a
    java.lang.String[] val$finaloption -> b
    com.taskmanager.dto.TaskInfoEntity val$entity -> c
    java.lang.String val$Taskid -> d
    int val$position -> e
    void onClick(android.content.DialogInterface,int) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$1 access$0(com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$1$1) -> a
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$1$1$1 -> com.taskmanager.ui.ck:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$1$1 this$3 -> a
    java.lang.String val$taskId -> b
    void run() -> run
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$10 -> com.taskmanager.ui.cl:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter this$1 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    java.lang.String val$Taskid -> c
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$11 -> com.taskmanager.ui.cm:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter this$1 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    java.lang.String val$targetDate -> c
    com.taskmanager.ui.AllTaskActivity$ViewHolder val$holder -> d
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$12 -> com.taskmanager.ui.cn:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter this$1 -> a
    com.taskmanager.ui.AllTaskActivity$ViewHolder val$holder -> b
    com.taskmanager.dto.TaskInfoEntity val$entity -> c
    java.lang.String val$AssignFromNum -> d
    java.lang.String val$Taskid -> e
    java.lang.String val$AssignToNum -> f
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$12) -> a
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$12$1 -> com.taskmanager.ui.co:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$12 this$2 -> a
    java.lang.String val$AssignFromNum -> b
    java.lang.String val$Taskid -> c
    com.taskmanager.ui.AllTaskActivity$ViewHolder val$holder -> d
    java.lang.String val$AssignToNum -> e
    android.content.ContentValues val$initialValues -> f
    void run() -> run
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$13 -> com.taskmanager.ui.cp:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter this$1 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    com.taskmanager.ui.AllTaskActivity$ViewHolder val$holder -> c
    java.lang.String val$Taskid -> d
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$13) -> a
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$13$1 -> com.taskmanager.ui.cq:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$13 this$2 -> a
    com.taskmanager.ui.AllTaskActivity$ViewHolder val$holder -> b
    java.lang.String val$Taskid -> c
    void run() -> run
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$2 -> com.taskmanager.ui.cr:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter this$1 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$3 -> com.taskmanager.ui.cs:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter this$1 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    com.taskmanager.ui.AllTaskActivity$ViewHolder val$holder -> c
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$4 -> com.taskmanager.ui.ct:
    java.lang.String STATUS -> a
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter this$1 -> b
    java.lang.String val$AssignFromNum -> c
    com.taskmanager.ui.AllTaskActivity$ViewHolder val$holder -> d
    com.taskmanager.dto.TaskInfoEntity val$entity -> e
    java.lang.String val$targetDate -> f
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$4) -> a
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$4$1 -> com.taskmanager.ui.cu:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$4 this$2 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    boolean val$isAssigner -> c
    java.lang.String val$msisdn -> d
    void run() -> run
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$5 -> com.taskmanager.ui.cv:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter this$1 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    com.taskmanager.ui.AllTaskActivity$ViewHolder val$holder -> c
    java.lang.String val$Taskid -> d
    java.lang.String val$AssignFromNum -> e
    java.lang.String val$AssignToNum -> f
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$5) -> a
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$5$1 -> com.taskmanager.ui.cw:
    android.app.ProgressDialog progressDialogReceived -> b
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$5 this$2 -> a
    java.lang.String val$Taskid -> c
    com.taskmanager.dto.TaskInfoEntity val$entity -> d
    java.lang.String val$AssignFromNum -> e
    java.lang.String val$AssignToNum -> f
    com.taskmanager.ui.AllTaskActivity$ViewHolder val$holder -> g
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$6 -> com.taskmanager.ui.cx:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter this$1 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    java.lang.String val$Taskid -> c
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$7 -> com.taskmanager.ui.cy:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter this$1 -> a
    com.taskmanager.ui.AllTaskActivity$ViewHolder val$holder -> b
    java.lang.String val$AssignFromNum -> c
    java.lang.String val$Taskid -> d
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$7) -> a
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$7$1 -> com.taskmanager.ui.cz:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$7 this$2 -> a
    java.lang.String val$AssignFromNum -> b
    java.lang.String val$Taskid -> c
    void run() -> run
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$8 -> com.taskmanager.ui.da:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter this$1 -> a
    java.lang.String val$AssignFromNum -> b
    java.lang.String val$Taskid -> c
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter access$0(com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$8) -> a
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$8$1 -> com.taskmanager.ui.db:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$8 this$2 -> a
    java.lang.String val$AssignFromNum -> b
    java.lang.String val$Taskid -> c
    void run() -> run
com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter$9 -> com.taskmanager.ui.dc:
    com.taskmanager.ui.AllTaskActivity$DisplayTaskListAdapter this$1 -> a
    com.taskmanager.dto.TaskInfoEntity val$entity -> b
    com.taskmanager.ui.AllTaskActivity$ViewHolder val$holder -> c
    java.lang.String val$AssignToNum -> d
    java.lang.String val$AssignTo -> e
    java.lang.String val$Taskid -> f
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.AllTaskActivity$LoadJunkList -> com.taskmanager.ui.dd:
    java.lang.String status -> b
    android.app.ProgressDialog dialog -> c
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.Map doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.Map) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$PullDownAsyntask -> com.taskmanager.ui.de:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onPostExecute(java.util.Map) -> a
    java.util.Map doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$PullDownAsyntaskClose -> com.taskmanager.ui.df:
    android.app.ProgressDialog dialog -> b
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onPostExecute(java.util.Map) -> a
    java.util.Map doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$PullDownLoadJunkList -> com.taskmanager.ui.dg:
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.util.Map doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.util.Map) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.AllTaskActivity$ViewHolder -> com.taskmanager.ui.dh:
    android.view.LayoutInflater inflater -> a
    android.view.View rowView -> b
    boolean isUserRegistered -> c
    android.widget.LinearLayout main -> d
    android.widget.LinearLayout taskstatusarrowLinear -> e
    android.widget.LinearLayout taskDescBtnsLinear -> f
    android.widget.LinearLayout completeCheckBox -> g
    android.widget.CheckBox completeCheckBoxImg -> h
    android.widget.ImageView arrow -> i
    android.widget.LinearLayout tasksummarylinear -> j
    android.widget.TextView taskSummaryTxtView -> k
    android.widget.LinearLayout taskIcons -> l
    android.widget.LinearLayout favouriteLinear -> m
    android.widget.CheckBox favouriteicon -> n
    android.widget.LinearLayout reopenLinear -> o
    android.widget.LinearLayout fireIconLinear -> p
    android.widget.CheckBox fireIcon -> q
    android.widget.LinearLayout closeLinear -> r
    android.widget.LinearLayout linearOpenClose -> s
    android.widget.LinearLayout taskInfoLinear -> t
    android.widget.ImageView taskSyncStatus -> u
    android.widget.TextView assignFromTextView -> v
    android.widget.LinearLayout msgSyncStatus -> w
    android.widget.TextView msgCount -> x
    android.widget.ImageView taskStatusArrow -> y
    android.widget.TextView startFromTextView -> z
    android.widget.ImageView dividerLine -> A
    android.widget.LinearLayout iconList -> B
    android.widget.LinearLayout editBtn -> C
    android.widget.LinearLayout deadlineBtn -> D
    android.widget.LinearLayout assigneeBtnLinear -> E
    android.widget.LinearLayout taskCompleteLinear -> F
    android.widget.ImageView editIcon -> G
    android.widget.ImageView calenderIcon -> H
    android.widget.ImageView userIcon -> I
    android.widget.ImageView alarmIcon -> J
    android.widget.TextView updateDate -> K
    android.widget.TextView txtEdit -> L
    android.widget.TextView txtCalender -> M
    android.widget.TextView txtAssign -> N
    android.widget.TextView txtAlarm -> O
    android.widget.LinearLayout taskinfolinear -> P
    android.widget.LinearLayout iconlistlinear -> Q
    com.taskmanager.ui.AllTaskActivity this$0 -> R
com.taskmanager.ui.AllTaskActivity$createContactTaskList -> com.taskmanager.ui.di:
    android.app.ProgressDialog dialog -> b
    com.taskmanager.ui.AllTaskActivity this$0 -> a
    void onPostExecute(java.util.Map) -> a
    void onPreExecute() -> onPreExecute
    java.util.Map doInBackground(com.taskmanager.dto.ContactWiseDto[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.CalenderActivity -> com.taskmanager.ui.CalenderActivity:
    android.content.Context context -> a
    java.util.Calendar calendarObj -> b
    android.widget.TextView currentMonth -> c
    android.widget.TextView currentYear -> d
    android.widget.ImageView prevMonth -> e
    android.widget.ImageView nextMonth -> f
    android.widget.GridView calendarView -> g
    com.taskmanager.ui.CalenderActivity$GridCellAdapter adapter -> h
    int month -> i
    int year -> j
    int date -> k
    int presentMonth -> l
    int presentYear -> m
    int presentDate -> n
    android.text.format.DateFormat dateFormatter -> o
    int hour -> p
    int min -> q
    android.widget.ImageView hourUp -> r
    android.widget.ImageView hourDown -> s
    android.widget.TextView hourText -> t
    android.widget.ImageView minUp -> u
    android.widget.ImageView minDown -> v
    android.widget.TextView minText -> w
    android.view.View prevSelection -> x
    java.lang.String selectedDate -> y
    android.widget.Spinner reminderSpinner -> z
    android.widget.RelativeLayout reminderMain -> A
    long receivedTargetTimeStamp -> B
    long changedTargetTimeStamp -> C
    int reminderValueSelected -> D
    java.lang.String reminderLabelValue -> E
    java.lang.String[] reminderValues -> F
    android.widget.ArrayAdapter reminderArrayAdapter -> G
    android.widget.TextView reminderType -> H
    java.lang.String action -> I
    java.lang.String targateDate -> J
    java.lang.String reminderTime -> K
    long receivedReminderTimeStamp -> L
    long changedReminderTimeStamp -> M
    java.lang.String[] targateValues -> N
    java.lang.String[] timeValues -> O
    java.lang.String taskId -> P
    java.lang.String taskDesc -> Q
    java.lang.String alarmTime -> R
    android.widget.ImageView reminderIcon -> S
    java.lang.String reminderVal -> T
    java.lang.String targetDateVal -> U
    android.widget.LinearLayout linearClose -> V
    android.widget.LinearLayout linearOk -> W
    java.lang.String alarm_date_time -> X
    java.lang.String isAlarmSet -> Y
    int alarm_selected_date -> Z
    int alarm_selected_month -> aa
    int alarm_selected_year -> ab
    java.lang.String contact_name_cal -> ac
    java.lang.String contact_description_cal -> ad
    void onCreate(android.os.Bundle) -> onCreate
    void setGridCellAdapterToDate(int,int) -> a
    void onClick(android.view.View) -> onClick
    void onDestroy() -> onDestroy
    void changeReminder(java.lang.String) -> a
    void changeTarget(java.lang.String) -> b
    void onUserLeaveHint() -> onUserLeaveHint
    void setAlarm(java.lang.String,java.lang.String) -> a
    void setAlarmManager(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void device_calender(java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int) -> a
    java.lang.String access$0(com.taskmanager.ui.CalenderActivity) -> a
    java.lang.String access$1(com.taskmanager.ui.CalenderActivity) -> b
    int access$2(com.taskmanager.ui.CalenderActivity) -> c
    int access$3(com.taskmanager.ui.CalenderActivity) -> d
    int access$4(com.taskmanager.ui.CalenderActivity) -> e
    int access$5(com.taskmanager.ui.CalenderActivity) -> f
    int access$6(com.taskmanager.ui.CalenderActivity) -> g
    java.lang.String access$7(com.taskmanager.ui.CalenderActivity) -> h
    int access$8(com.taskmanager.ui.CalenderActivity) -> i
    android.view.View access$9(com.taskmanager.ui.CalenderActivity) -> j
    void access$10(com.taskmanager.ui.CalenderActivity,android.view.View) -> a
    void access$11(com.taskmanager.ui.CalenderActivity,java.lang.String) -> a
    int access$12(com.taskmanager.ui.CalenderActivity) -> k
    int access$13(com.taskmanager.ui.CalenderActivity) -> l
    void access$14(com.taskmanager.ui.CalenderActivity,java.lang.String) -> b
    int access$15(com.taskmanager.ui.CalenderActivity) -> m
    java.lang.String access$16(com.taskmanager.ui.CalenderActivity) -> n
    java.lang.String access$17(com.taskmanager.ui.CalenderActivity) -> o
    java.lang.String access$18(com.taskmanager.ui.CalenderActivity) -> p
    void access$19(com.taskmanager.ui.CalenderActivity,long) -> a
    void access$20(com.taskmanager.ui.CalenderActivity,long) -> b
    long access$21(com.taskmanager.ui.CalenderActivity) -> q
    void access$22(com.taskmanager.ui.CalenderActivity,java.lang.String) -> c
    long access$23(com.taskmanager.ui.CalenderActivity) -> r
    long access$24(com.taskmanager.ui.CalenderActivity) -> s
    void access$25(com.taskmanager.ui.CalenderActivity,java.lang.String) -> d
    long access$26(com.taskmanager.ui.CalenderActivity) -> t
    void access$27(com.taskmanager.ui.CalenderActivity,java.lang.String) -> e
    android.content.Context access$28(com.taskmanager.ui.CalenderActivity) -> u
    java.lang.String access$29(com.taskmanager.ui.CalenderActivity) -> v
    void access$30(com.taskmanager.ui.CalenderActivity,java.lang.String,java.lang.String) -> a
    java.lang.String access$31(com.taskmanager.ui.CalenderActivity) -> w
    java.lang.String access$32(com.taskmanager.ui.CalenderActivity) -> x
    java.lang.String access$33(com.taskmanager.ui.CalenderActivity) -> y
    void access$34(com.taskmanager.ui.CalenderActivity,int) -> a
    android.widget.TextView access$35(com.taskmanager.ui.CalenderActivity) -> z
    void access$36(com.taskmanager.ui.CalenderActivity,int) -> b
    android.widget.TextView access$37(com.taskmanager.ui.CalenderActivity) -> A
    android.widget.Spinner access$38(com.taskmanager.ui.CalenderActivity) -> B
    void access$39(com.taskmanager.ui.CalenderActivity,int) -> c
    void access$40(com.taskmanager.ui.CalenderActivity,java.lang.String) -> f
    android.widget.TextView access$41(com.taskmanager.ui.CalenderActivity) -> C
com.taskmanager.ui.CalenderActivity$1 -> com.taskmanager.ui.dj:
    com.taskmanager.ui.CalenderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CalenderActivity$10 -> com.taskmanager.ui.dk:
    com.taskmanager.ui.CalenderActivity this$0 -> a
    java.lang.String val$changedReminder -> b
    void run() -> run
com.taskmanager.ui.CalenderActivity$2 -> com.taskmanager.ui.dl:
    com.taskmanager.ui.CalenderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.CalenderActivity access$0(com.taskmanager.ui.CalenderActivity$2) -> a
com.taskmanager.ui.CalenderActivity$2$1 -> com.taskmanager.ui.dm:
    com.taskmanager.ui.CalenderActivity$2 this$1 -> a
    void run() -> run
com.taskmanager.ui.CalenderActivity$3 -> com.taskmanager.ui.dn:
    com.taskmanager.ui.CalenderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CalenderActivity$4 -> com.taskmanager.ui.do:
    com.taskmanager.ui.CalenderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CalenderActivity$5 -> com.taskmanager.ui.dp:
    com.taskmanager.ui.CalenderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CalenderActivity$6 -> com.taskmanager.ui.dq:
    com.taskmanager.ui.CalenderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CalenderActivity$7 -> com.taskmanager.ui.dr:
    com.taskmanager.ui.CalenderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CalenderActivity$8 -> com.taskmanager.ui.ds:
    com.taskmanager.ui.CalenderActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CalenderActivity$9 -> com.taskmanager.ui.dt:
    com.taskmanager.ui.CalenderActivity this$0 -> a
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
com.taskmanager.ui.CalenderActivity$GridCellAdapter -> com.taskmanager.ui.du:
    android.content.Context _context -> b
    java.util.List list -> c
    java.lang.String[] weekdays -> d
    java.lang.String[] months -> e
    int[] daysOfMonth -> f
    int month -> g
    int year -> h
    int daysInMonth -> i
    int currentDayOfMonth -> j
    int currentWeekDay -> k
    android.widget.TextView gridcell -> l
    android.widget.TextView num_events_per_day -> m
    java.util.HashMap eventsPerMonthMap -> n
    java.text.SimpleDateFormat dateFormatter -> o
    com.taskmanager.ui.CalenderActivity this$0 -> a
    java.lang.String getMonthAsString(int) -> c
    int getNumberOfDaysOfMonth(int) -> d
    java.lang.String getItem(int) -> a
    int getCount() -> getCount
    void printMonth(int,int) -> a
    java.util.HashMap findNumberOfEventsPerMonth(int,int) -> b
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onClick(android.view.View) -> onClick
    int getCurrentDayOfMonth() -> a
    void setCurrentDayOfMonth(int) -> e
    void setCurrentWeekDay(int) -> b
    java.lang.Object getItem(int) -> getItem
com.taskmanager.ui.CommonUtilsUi -> com.taskmanager.ui.dv:
    java.util.Calendar finalCalendar -> a
    java.lang.String finalDate -> b
    int finalh -> c
    int finalM -> d
    void getCustomeDialog(android.content.Context,java.lang.String) -> a
    android.app.Dialog getCustomeConfirmDialog(android.content.Context,java.lang.String,com.taskmanager.background.DialogCallback) -> a
    void getCustomeDialog(android.content.Context,java.lang.String,com.taskmanager.background.DialogCallback) -> b
    void setAlarmManager(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
com.taskmanager.ui.CommonUtilsUi$1 -> com.taskmanager.ui.dw:
    android.app.Dialog val$dialog -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CommonUtilsUi$4 -> com.taskmanager.ui.dx:
    android.app.Dialog val$dialog -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CommonUtilsUi$5 -> com.taskmanager.ui.dy:
    com.taskmanager.background.DialogCallback val$callback -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CommonUtilsUi$6 -> com.taskmanager.ui.dz:
    com.taskmanager.background.DialogCallback val$callback -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CreateTaskActivity -> com.taskmanager.ui.CreateTaskActivity:
    android.content.Context context -> n
    java.lang.String[] reminderValues -> o
    android.widget.ArrayAdapter reminderArrayAdapter -> p
    com.taskmanager.autocom.CustomAutoCompleteView addTask -> a
    android.widget.Button contatcs_add -> q
    android.widget.LinearLayout assigneeName -> r
    android.widget.Spinner reminderSpinner -> s
    android.widget.ToggleButton deadlineCheck -> t
    android.widget.TextView mDeadlineDate -> u
    android.widget.TextView mDeadlineTime -> v
    android.widget.ImageView reminderIcon -> w
    android.widget.RadioGroup priorityGrp -> x
    android.widget.RadioButton lowPriority -> y
    android.widget.RadioButton mediumPriority -> z
    android.widget.RadioButton highPriority -> A
    android.widget.RadioButton firePriority -> B
    android.widget.TextView alarTxtView -> C
    android.widget.ImageView AddTaskBtnLinear -> D
    java.lang.String deadlineDateTxt -> b
    java.lang.String reminderDateTime -> c
    java.lang.String deadlineTimeTxt -> d
    java.util.ArrayList assigneeNames -> E
    java.util.ArrayList assigneeNumbers -> F
    int spaceInRow -> G
    android.widget.LinearLayout row -> H
    java.lang.String action -> I
    java.lang.String taskSummaryReceived -> J
    java.lang.String priorityReceived -> K
    java.lang.String taskId -> L
    java.lang.String targetDate -> e
    java.lang.String reminderTime -> f
    android.widget.ImageView cancelBtn -> M
    android.widget.RelativeLayout relativeSelectAssignee -> N
    java.lang.String updatedDesc -> g
    android.widget.TextView textViewAssigner -> O
    android.widget.CheckBox checkBoxSendSms -> P
    android.widget.ImageView addtaskediticon -> Q
    android.widget.RelativeLayout reativeAssigner -> R
    android.widget.LinearLayout linearPriority -> S
    android.widget.LinearLayout linearDate -> T
    android.widget.LinearLayout linearTop -> U
    android.widget.LinearLayout linearTopSecnd -> V
    android.widget.RelativeLayout relativeEdit -> W
    android.widget.LinearLayout linearHeader -> X
    com.taskmanager.dto.TaskInfoEntity entity -> Y
    int selectCount -> Z
    android.widget.TextView selftoDoMsg -> aa
    android.widget.ArrayAdapter myAdapter -> h
    java.lang.String[] autoCompletiTem -> i
    android.view.View$OnClickListener mClickListener -> ab
    android.widget.CompoundButton$OnCheckedChangeListener mCheckedChangeListener -> ac
    java.util.Calendar finalCalendar -> j
    java.lang.String finalDate -> k
    int finalh -> l
    int finalM -> m
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onResume() -> onResume
    void createTaskView() -> a
    com.taskmanager.bean.ResponseDto addTask() -> b
    com.taskmanager.bean.ResponseDto saveTask(com.taskmanager.bean.taskListDTO) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void createAssigneeListView() -> c
    void onPause() -> onPause
    void displayConfirmationDialog(java.lang.String,long) -> a
    java.lang.String access$0(com.taskmanager.ui.CreateTaskActivity) -> a
    java.lang.String access$1(com.taskmanager.ui.CreateTaskActivity) -> b
    android.widget.ImageView access$2(com.taskmanager.ui.CreateTaskActivity) -> c
    android.content.Context access$3(com.taskmanager.ui.CreateTaskActivity) -> d
    android.widget.ImageView access$4(com.taskmanager.ui.CreateTaskActivity) -> e
    android.widget.TextView access$5(com.taskmanager.ui.CreateTaskActivity) -> f
    android.view.View$OnClickListener access$6(com.taskmanager.ui.CreateTaskActivity) -> g
    android.widget.TextView access$7(com.taskmanager.ui.CreateTaskActivity) -> h
    android.widget.Spinner access$8(com.taskmanager.ui.CreateTaskActivity) -> i
    com.taskmanager.bean.ResponseDto access$9(com.taskmanager.ui.CreateTaskActivity) -> j
    int access$10(com.taskmanager.ui.CreateTaskActivity) -> k
    void access$11(com.taskmanager.ui.CreateTaskActivity,int) -> a
    android.widget.ToggleButton access$12(com.taskmanager.ui.CreateTaskActivity) -> l
    java.util.ArrayList access$13(com.taskmanager.ui.CreateTaskActivity) -> m
    java.util.ArrayList access$14(com.taskmanager.ui.CreateTaskActivity) -> n
    void access$15(com.taskmanager.ui.CreateTaskActivity,java.lang.String,long) -> a
    void access$16(com.taskmanager.ui.CreateTaskActivity) -> o
com.taskmanager.ui.CreateTaskActivity$1 -> com.taskmanager.ui.ea:
    com.taskmanager.ui.CreateTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CreateTaskActivity$10 -> com.taskmanager.ui.eb:
    com.taskmanager.ui.CreateTaskActivity this$0 -> a
    android.widget.TextView val$newAssignee -> b
    boolean onLongClick(android.view.View) -> onLongClick
com.taskmanager.ui.CreateTaskActivity$11 -> com.taskmanager.ui.ec:
    com.taskmanager.ui.CreateTaskActivity this$0 -> a
    long val$tag -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.taskmanager.ui.CreateTaskActivity$12 -> com.taskmanager.ui.ed:
    com.taskmanager.ui.CreateTaskActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.taskmanager.ui.CreateTaskActivity$2 -> com.taskmanager.ui.ee:
    com.taskmanager.ui.CreateTaskActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.taskmanager.ui.CreateTaskActivity$3 -> com.taskmanager.ui.ef:
    com.taskmanager.ui.CreateTaskActivity this$0 -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.taskmanager.ui.CreateTaskActivity$4 -> com.taskmanager.ui.eg:
    com.taskmanager.ui.CreateTaskActivity this$0 -> a
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
com.taskmanager.ui.CreateTaskActivity$5 -> com.taskmanager.ui.eh:
    com.taskmanager.ui.CreateTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CreateTaskActivity$6 -> com.taskmanager.ui.ei:
    com.taskmanager.ui.CreateTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CreateTaskActivity$7 -> com.taskmanager.ui.ej:
    com.taskmanager.ui.CreateTaskActivity this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.taskmanager.ui.CreateTaskActivity$8 -> com.taskmanager.ui.ek:
    com.taskmanager.ui.CreateTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CreateTaskActivity$9 -> com.taskmanager.ui.el:
    com.taskmanager.ui.CreateTaskActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.taskmanager.ui.CreateTaskActivity$AsyncCreateTask -> com.taskmanager.ui.em:
    android.app.ProgressDialog pDialog -> b
    com.taskmanager.ui.CreateTaskActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    com.taskmanager.bean.ResponseDto doInBackground(java.lang.Void[]) -> a
    void onPostExecute(com.taskmanager.bean.ResponseDto) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.taskmanager.ui.CreateTaskActivity access$2(com.taskmanager.ui.CreateTaskActivity$AsyncCreateTask) -> a
com.taskmanager.ui.CreateTaskActivity$AsyncCreateTask$1 -> com.taskmanager.ui.en:
    com.taskmanager.ui.CreateTaskActivity$AsyncCreateTask this$1 -> a
    java.lang.Object execuet(android.app.Dialog) -> a
com.taskmanager.ui.CustomeContactActivity -> com.taskmanager.ui.CustomeContactActivity:
    java.util.List contactList -> a
    java.util.List searchResults -> b
    java.util.List name1 -> c
    java.util.List phno1 -> d
    android.widget.BaseAdapter ma -> e
    android.widget.ImageView done -> f
    android.widget.ImageView cancel -> g
    android.widget.ImageView search_icon -> h
    android.widget.ImageView cancel_search -> i
    android.widget.EditText searchBox -> j
    java.util.concurrent.ConcurrentLinkedQueue selectedNumber -> l
    java.util.HashMap map -> k
    void onCreate(android.os.Bundle) -> onCreate
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void getAllContacts(android.content.ContentResolver) -> a
com.taskmanager.ui.CustomeContactActivity$1 -> com.taskmanager.ui.eo:
    com.taskmanager.ui.CustomeContactActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CustomeContactActivity$2 -> com.taskmanager.ui.ep:
    com.taskmanager.ui.CustomeContactActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CustomeContactActivity$3 -> com.taskmanager.ui.eq:
    com.taskmanager.ui.CustomeContactActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CustomeContactActivity$4 -> com.taskmanager.ui.er:
    com.taskmanager.ui.CustomeContactActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.taskmanager.ui.CustomeContactActivity$MyAdapterRadio -> com.taskmanager.ui.es:
    android.util.SparseBooleanArray mCheckStates -> d
    android.view.LayoutInflater mInflater -> a
    java.util.List contacts -> b
    com.taskmanager.ui.CustomeContactActivity this$0 -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.taskmanager.ui.CustomeContactActivity access$0(com.taskmanager.ui.CustomeContactActivity$MyAdapterRadio) -> a
com.taskmanager.ui.CustomeContactActivity$MyAdapterRadio$1 -> com.taskmanager.ui.et:
    com.taskmanager.ui.CustomeContactActivity$MyAdapterRadio this$1 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CustomeContactMultiActivity -> com.taskmanager.ui.CustomeContactMultiActivity:
    java.util.List contactList -> a
    java.util.List searchResults -> b
    java.util.List name1 -> c
    java.util.List phno1 -> d
    com.taskmanager.ui.CustomeContactMultiActivity$MyAdapter ma -> e
    android.widget.ImageView done -> f
    android.widget.ImageView cancel -> g
    android.widget.ImageView search_icon -> h
    android.widget.ImageView cancel_search -> i
    android.widget.EditText searchBox -> j
    java.util.concurrent.CopyOnWriteArraySet selectedNumber -> l
    java.util.HashMap map -> k
    void onCreate(android.os.Bundle) -> onCreate
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void getAllContacts(android.content.ContentResolver) -> a
    java.util.concurrent.CopyOnWriteArraySet access$0(com.taskmanager.ui.CustomeContactMultiActivity) -> a
com.taskmanager.ui.CustomeContactMultiActivity$1 -> com.taskmanager.ui.eu:
    com.taskmanager.ui.CustomeContactMultiActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CustomeContactMultiActivity$2 -> com.taskmanager.ui.ev:
    com.taskmanager.ui.CustomeContactMultiActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CustomeContactMultiActivity$3 -> com.taskmanager.ui.ew:
    com.taskmanager.ui.CustomeContactMultiActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CustomeContactMultiActivity$4 -> com.taskmanager.ui.ex:
    com.taskmanager.ui.CustomeContactMultiActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.taskmanager.ui.CustomeContactMultiActivity$5 -> com.taskmanager.ui.ey:
    com.taskmanager.ui.CustomeContactMultiActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CustomeContactMultiActivity$MyAdapter -> com.taskmanager.ui.ez:
    android.util.SparseBooleanArray mCheckStates -> e
    android.view.LayoutInflater mInflater -> a
    java.util.List contacts -> b
    android.widget.CheckBox cb -> c
    com.taskmanager.ui.CustomeContactMultiActivity this$0 -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.util.SparseBooleanArray access$0(com.taskmanager.ui.CustomeContactMultiActivity$MyAdapter) -> a
    com.taskmanager.ui.CustomeContactMultiActivity access$1(com.taskmanager.ui.CustomeContactMultiActivity$MyAdapter) -> b
com.taskmanager.ui.CustomeContactMultiActivity$MyAdapter$1 -> com.taskmanager.ui.fa:
    com.taskmanager.ui.CustomeContactMultiActivity$MyAdapter this$1 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.CustomeContactMultiActivity$MyAdapter$2 -> com.taskmanager.ui.fb:
    com.taskmanager.ui.CustomeContactMultiActivity$MyAdapter this$1 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.taskmanager.ui.EditTaskActivity -> com.taskmanager.ui.EditTaskActivity:
    android.content.Context context -> h
    android.widget.EditText addTask -> i
    android.widget.Button AddTaskBtn -> j
    android.widget.LinearLayout AddTaskBtnLinear -> k
    java.lang.String deadlineDateTxt -> a
    java.lang.String reminderDateTime -> b
    java.lang.String deadlineTimeTxt -> c
    java.util.ArrayList assigneeNames -> l
    java.util.ArrayList assigneeNumbers -> m
    int spaceInRow -> n
    java.lang.String action -> o
    java.lang.String taskSummaryReceived -> p
    java.lang.String priorityReceived -> q
    java.lang.String taskId -> r
    java.lang.String targetDate -> d
    java.lang.String reminderTime -> e
    java.lang.String group_id -> f
    java.lang.String taskAssignee -> s
    android.widget.LinearLayout cancelBtn -> t
    android.widget.ImageButton imgOk -> u
    android.widget.ImageButton imgCancel -> v
    java.lang.String updatedDesc -> g
    android.widget.ImageView addtaskediticon -> w
    android.view.View$OnClickListener mClickListener -> x
    android.widget.CompoundButton$OnCheckedChangeListener mCheckedChangeListener -> y
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onResume() -> onResume
    void editTaskView(java.lang.String) -> a
    void createTaskView() -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void createAssigneeListView() -> b
    void onPause() -> onPause
    java.lang.String access$0(com.taskmanager.ui.EditTaskActivity) -> a
    java.lang.String access$1(com.taskmanager.ui.EditTaskActivity) -> b
    android.widget.EditText access$2(com.taskmanager.ui.EditTaskActivity) -> c
    android.widget.LinearLayout access$3(com.taskmanager.ui.EditTaskActivity) -> d
    android.content.Context access$4(com.taskmanager.ui.EditTaskActivity) -> e
    android.widget.ImageView access$5(com.taskmanager.ui.EditTaskActivity) -> f
    java.lang.String access$6(com.taskmanager.ui.EditTaskActivity) -> g
    java.lang.String access$7(com.taskmanager.ui.EditTaskActivity) -> h
com.taskmanager.ui.EditTaskActivity$1 -> com.taskmanager.ui.fc:
    com.taskmanager.ui.EditTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.EditTaskActivity$2 -> com.taskmanager.ui.fd:
    com.taskmanager.ui.EditTaskActivity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.taskmanager.ui.EditTaskActivity$3 -> com.taskmanager.ui.fe:
    com.taskmanager.ui.EditTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.EditTaskActivity$4 -> com.taskmanager.ui.ff:
    com.taskmanager.ui.EditTaskActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.taskmanager.ui.EditTaskActivity$5 -> com.taskmanager.ui.fg:
    com.taskmanager.ui.EditTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.EditTaskActivity$6 -> com.taskmanager.ui.fh:
    com.taskmanager.ui.EditTaskActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.EditTaskActivity$7 -> com.taskmanager.ui.fi:
    com.taskmanager.ui.EditTaskActivity this$0 -> a
    java.lang.String val$taskId -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.EditTaskActivity$8 -> com.taskmanager.ui.fj:
    com.taskmanager.ui.EditTaskActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.taskmanager.ui.EditTaskActivity$AsyncUpdateTask -> com.taskmanager.ui.fk:
    android.app.ProgressDialog pDialog -> b
    com.taskmanager.ui.EditTaskActivity this$0 -> a
    java.lang.Void doInBackground(com.taskmanager.bean.UpdateTask[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPreExecute() -> onPreExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.FaqActivity -> com.taskmanager.ui.FaqActivity:
    android.webkit.WebView webView -> a
    void onCreate(android.os.Bundle) -> onCreate
    void loadFromAssets() -> a
com.taskmanager.ui.HowToUseActivity -> com.taskmanager.ui.HowToUseActivity:
    android.webkit.WebView webView -> a
    void onCreate(android.os.Bundle) -> onCreate
    void loadFromAssets() -> a
com.taskmanager.ui.NewCreateTaskActivity -> com.taskmanager.ui.NewCreateTaskActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.taskmanager.ui.PartailAlertActivitity -> com.taskmanager.ui.PartailAlertActivitity:
    void onCreate(android.os.Bundle) -> onCreate
com.taskmanager.ui.RegistrationActivity -> com.taskmanager.ui.RegistrationActivity:
    android.content.Context context -> f
    android.app.ProgressDialog progressDialog -> g
    boolean contactRetreived -> h
    java.lang.String regStatus -> i
    java.lang.String responseMsg -> j
    java.lang.String prevNo -> k
    java.lang.String validationStatus -> l
    android.widget.EditText mobileNo -> m
    android.widget.EditText firstName -> n
    android.widget.Spinner hiddenSpinner -> o
    android.widget.RelativeLayout spinnerVirtual -> p
    android.widget.TextView country -> q
    android.widget.TextView countryCallingCode -> r
    java.lang.String first -> s
    android.widget.Button done -> t
    int registerationTry -> u
    com.taskmanager.bean.CheckRegistrationDTO checkRegistartioDto -> v
    com.taskmanager.bean.registrationDTO responseDTO1 -> w
    boolean flagCheckIsEdit -> a
    android.widget.TextView txtTerm -> x
    java.lang.String txtWhatsAppNo -> y
    java.lang.String regId -> b
    android.os.Handler progressHandler -> c
    android.view.View$OnFocusChangeListener focusListener -> d
    android.view.View$OnClickListener clickListener -> e
    void onCreate(android.os.Bundle) -> onCreate
    void checkRegistrationStatus() -> c
    void onResume() -> onResume
    void retrieveContactRecord(java.lang.String) -> b
    void displayValidationDialog(java.lang.String) -> c
    boolean checkPhoneNo(java.lang.String) -> a
    java.lang.String registrationProcess(com.taskmanager.bean.LoginDTO) -> a
    void sendSMS() -> a
    void registerDeviceIdOnServer(android.content.Context) -> a
    void Get_ValidateOTP(android.os.Handler) -> a
    boolean ValidationOTP() -> b
    android.app.ProgressDialog access$0(com.taskmanager.ui.RegistrationActivity) -> a
    android.content.Context access$1(com.taskmanager.ui.RegistrationActivity) -> b
    android.widget.EditText access$2(com.taskmanager.ui.RegistrationActivity) -> c
    void access$3(com.taskmanager.ui.RegistrationActivity,android.content.Context) -> a
    void access$4(com.taskmanager.ui.RegistrationActivity) -> d
    com.taskmanager.bean.registrationDTO access$5(com.taskmanager.ui.RegistrationActivity) -> e
    boolean access$6(com.taskmanager.ui.RegistrationActivity) -> f
    void access$7(com.taskmanager.ui.RegistrationActivity,java.lang.String) -> a
    java.lang.String access$8(com.taskmanager.ui.RegistrationActivity) -> g
    void access$9(com.taskmanager.ui.RegistrationActivity,java.lang.String) -> b
    android.widget.EditText access$10(com.taskmanager.ui.RegistrationActivity) -> h
    void access$11(com.taskmanager.ui.RegistrationActivity,boolean) -> a
    void access$12(com.taskmanager.ui.RegistrationActivity,android.app.ProgressDialog) -> a
    android.widget.TextView access$13(com.taskmanager.ui.RegistrationActivity) -> i
    android.widget.TextView access$14(com.taskmanager.ui.RegistrationActivity) -> j
    void access$15(com.taskmanager.ui.RegistrationActivity,java.lang.String) -> c
    void access$16(com.taskmanager.ui.RegistrationActivity,com.taskmanager.bean.CheckRegistrationDTO) -> a
    com.taskmanager.bean.CheckRegistrationDTO access$17(com.taskmanager.ui.RegistrationActivity) -> k
    void access$18(com.taskmanager.ui.RegistrationActivity,android.os.Handler) -> a
    android.widget.Spinner access$19(com.taskmanager.ui.RegistrationActivity) -> l
    void access$20(com.taskmanager.ui.RegistrationActivity,com.taskmanager.bean.registrationDTO) -> a
    void access$21(com.taskmanager.ui.RegistrationActivity,java.lang.String) -> d
    java.lang.String access$22(com.taskmanager.ui.RegistrationActivity) -> m
com.taskmanager.ui.RegistrationActivity$1 -> com.taskmanager.ui.fl:
    com.taskmanager.ui.RegistrationActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.taskmanager.ui.RegistrationActivity$10 -> com.taskmanager.ui.fm:
    com.taskmanager.ui.RegistrationActivity this$0 -> a
    android.content.Context val$context -> b
    void run() -> run
com.taskmanager.ui.RegistrationActivity$11 -> com.taskmanager.ui.fn:
    com.taskmanager.ui.RegistrationActivity this$0 -> a
    void run() -> run
com.taskmanager.ui.RegistrationActivity$2 -> com.taskmanager.ui.fo:
    com.taskmanager.ui.RegistrationActivity this$0 -> a
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.taskmanager.ui.RegistrationActivity$3 -> com.taskmanager.ui.fp:
    com.taskmanager.ui.RegistrationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.taskmanager.ui.RegistrationActivity access$0(com.taskmanager.ui.RegistrationActivity$3) -> a
com.taskmanager.ui.RegistrationActivity$3$1 -> com.taskmanager.ui.fq:
    com.taskmanager.ui.RegistrationActivity$3 this$1 -> a
    java.lang.Object execuet(android.app.Dialog) -> a
com.taskmanager.ui.RegistrationActivity$3$2 -> com.taskmanager.ui.fr:
    com.taskmanager.ui.RegistrationActivity$3 this$1 -> a
    java.lang.Object execuet(android.app.Dialog) -> a
com.taskmanager.ui.RegistrationActivity$3$3 -> com.taskmanager.ui.fs:
    com.taskmanager.ui.RegistrationActivity$3 this$1 -> a
    java.lang.Object execuet(android.app.Dialog) -> a
com.taskmanager.ui.RegistrationActivity$3$4 -> com.taskmanager.ui.ft:
    com.taskmanager.ui.RegistrationActivity$3 this$1 -> a
    java.lang.Object execuet(android.app.Dialog) -> a
com.taskmanager.ui.RegistrationActivity$4 -> com.taskmanager.ui.fu:
    com.taskmanager.ui.RegistrationActivity this$0 -> a
    void run() -> run
    com.taskmanager.ui.RegistrationActivity access$0(com.taskmanager.ui.RegistrationActivity$4) -> a
com.taskmanager.ui.RegistrationActivity$4$1 -> com.taskmanager.ui.fv:
    com.taskmanager.ui.RegistrationActivity$4 this$1 -> a
    void run() -> run
com.taskmanager.ui.RegistrationActivity$5 -> com.taskmanager.ui.fw:
    com.taskmanager.ui.RegistrationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.RegistrationActivity$6 -> com.taskmanager.ui.fx:
    com.taskmanager.ui.RegistrationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.RegistrationActivity$7 -> com.taskmanager.ui.fy:
    com.taskmanager.ui.RegistrationActivity this$0 -> a
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.taskmanager.ui.RegistrationActivity$8 -> com.taskmanager.ui.fz:
    com.taskmanager.ui.RegistrationActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.taskmanager.ui.RegistrationActivity$9 -> com.taskmanager.ui.ga:
    com.taskmanager.ui.RegistrationActivity this$0 -> a
    com.taskmanager.bean.LoginDTO val$lgnDTO -> b
    void run() -> run
com.taskmanager.ui.SplashActivity -> com.taskmanager.ui.SplashActivity:
    android.content.Context context -> b
    android.os.Handler progressHandler -> c
    java.lang.String regId -> d
    java.lang.StringBuilder numbers -> a
    java.lang.Runnable mTargetRunnable -> e
    void onCreate(android.os.Bundle) -> onCreate
    void updateContactList(android.content.ContentResolver) -> a
    void getcontatcslist() -> a
    android.content.Context access$0(com.taskmanager.ui.SplashActivity) -> a
    java.lang.String access$1(com.taskmanager.ui.SplashActivity) -> b
    void access$2(com.taskmanager.ui.SplashActivity,java.lang.String) -> a
com.taskmanager.ui.SplashActivity$1 -> com.taskmanager.ui.gb:
    com.taskmanager.ui.SplashActivity this$0 -> a
    void run() -> run
    com.taskmanager.ui.SplashActivity access$0(com.taskmanager.ui.SplashActivity$1) -> a
com.taskmanager.ui.SplashActivity$1$1 -> com.taskmanager.ui.gc:
    java.lang.String status -> a
    com.taskmanager.ui.SplashActivity$1 this$1 -> b
    java.lang.String val$mobileNumber -> c
    java.lang.String doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.taskmanager.ui.SplashActivity$2 -> com.taskmanager.ui.gd:
    com.taskmanager.ui.SplashActivity this$0 -> a
    void run() -> run
com.taskmanager.ui.SplashActivity$3 -> com.taskmanager.ui.ge:
    com.taskmanager.ui.SplashActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.taskmanager.ui.SplashActivity$4 -> com.taskmanager.ui.gf:
    com.taskmanager.ui.SplashActivity this$0 -> a
    void run() -> run
com.taskmanager.ui.SplashActivity$5 -> com.taskmanager.ui.gg:
    com.taskmanager.ui.SplashActivity this$0 -> a
    com.taskmanager.database.DBAdapter val$adapter -> b
    void run() -> run
com.taskmanager.ui.TermAndConditionActivity -> com.taskmanager.ui.TermAndConditionActivity:
    android.webkit.WebView webViewTerm -> a
    android.app.ProgressDialog progressBar -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onBackPressed() -> onBackPressed
    android.app.ProgressDialog access$0(com.taskmanager.ui.TermAndConditionActivity) -> a
com.taskmanager.ui.TermAndConditionActivity$1 -> com.taskmanager.ui.gh:
    com.taskmanager.ui.TermAndConditionActivity this$0 -> a
    android.app.AlertDialog val$alertDialog -> b
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.taskmanager.ui.TermAndConditionActivity$1$1 -> com.taskmanager.ui.gi:
    com.taskmanager.ui.TermAndConditionActivity$1 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.taskmanager.ui.reminderActivity -> com.taskmanager.ui.reminderActivity:
    android.content.Context ctx -> b
    java.lang.String taskId -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void displayDialog(android.content.Context,java.lang.String) -> a
    void addReminder(int,java.lang.String) -> a
    void access$0(com.taskmanager.ui.reminderActivity,int,java.lang.String) -> a
com.taskmanager.ui.reminderActivity$1 -> com.taskmanager.ui.gj:
    com.taskmanager.ui.reminderActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.reminderActivity$2 -> com.taskmanager.ui.gk:
    com.taskmanager.ui.reminderActivity this$0 -> a
    android.content.Context val$ctx -> b
    android.app.Dialog val$dialog -> c
    void onClick(android.view.View) -> onClick
com.taskmanager.ui.reminderActivity$3 -> com.taskmanager.ui.gl:
    com.taskmanager.ui.reminderActivity this$0 -> a
    android.app.Dialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.taskmanager.util.ApplicationConstant -> com.taskmanager.f.a:
    java.lang.String PREMIUM -> a
    java.lang.String BUILD_VERSION -> b
    java.lang.String TERMS_URL -> c
    java.lang.String XToken -> d
    java.lang.String MobileNo -> e
    java.lang.String ApplicantName -> f
    java.lang.String LAST_UPDATED_DATE -> g
    java.lang.String OTP -> h
    int SYNC_SLEEPTIME -> i
    boolean STOP_SERVICE_FLAG -> j
    boolean SYNC_FLAG -> k
    boolean Is_First -> l
    java.lang.String SYNC_SERVICE_STATUS -> m
    java.lang.String REG_STATUS -> n
    boolean STOP_SYNC_THREAD -> o
    java.lang.String BASE_URL -> p
    java.lang.String SUPPORT_URL -> q
    int createTask_Flag_run_handle -> r
    int message_Task_Flag_run_handle -> s
    boolean flag_Ui_Refresh -> t
    java.lang.String checkRegistrationStatus -> u
    java.lang.String xtoken -> v
    java.lang.String regMobNo -> w
    java.lang.String REG_NAME -> x
    java.lang.String regId -> y
    java.lang.String url_term -> z
    java.lang.String Sync_Message_Task_URL -> A
    java.lang.String Registration_URL -> B
    java.lang.String Recieve_OTP_URL -> C
    java.lang.String Validate_OTP_URL -> D
    java.lang.String Request_OTP_URL -> E
    java.lang.String Resend_OTP_URL -> F
    java.lang.String Create_Task_URL -> G
    java.lang.String Sync_Task_List_URL -> H
    java.lang.String Sync_URL -> I
    java.lang.String Sync_Self_Task_List_URL -> J
    java.lang.String Sync_Assigned_Task_List_URL -> K
    java.lang.String Sync_Received_Task_List_URL -> L
    java.lang.String Update_Task_URL -> M
    java.lang.String Update_Target_Date -> N
    java.lang.String Set_Reminder_Task_URL -> O
    java.lang.String Set_Favouraite_Task_URL -> P
    java.lang.String Set_Priority_Task_URL -> Q
    java.lang.String Set_Status_Task_URL -> R
    java.lang.String Message_List_URL -> S
    java.lang.String Create_Message_URL -> T
    java.lang.String Mark_Msg_Read_URL1 -> U
    java.lang.String Mark_Msg_Read_URL2 -> V
    java.lang.String changeAssignee -> W
    java.lang.String checkRegistarationStatus -> X
    java.lang.String pushNotification_URL -> Y
    java.lang.String markMessageAsRead -> Z
    java.lang.String markTaskAsRead -> aa
    java.lang.String dialogTitle -> ab
    java.lang.String dialogMsg -> ac
com.taskmanager.util.ApplicationUtil -> com.taskmanager.f.b:
    java.util.WeakHashMap contactMap -> b
    com.taskmanager.util.ApplicationUtil instance -> c
    com.taskmanager.webservice.BGConnector syncService -> d
    java.lang.String DB_PATH -> a
    com.taskmanager.util.ApplicationUtil getInstance() -> a
    com.taskmanager.webservice.BGConnector getSyncServer(android.content.Context) -> a
    boolean checkInternetConn(android.content.Context) -> b
    java.util.ArrayList uploadListFromDB(java.lang.String,java.lang.String[],java.lang.String,android.content.Context) -> a
    java.util.Map getTaskList(java.lang.String,android.content.Context) -> a
    java.util.Map getTaskListClose(java.lang.String,android.content.Context) -> b
    java.util.List selectListFromQueryNew(java.lang.String,android.content.Context) -> c
    java.util.Map selectContactListFromQueryNew(java.lang.String,android.content.Context) -> d
    java.util.ArrayList executeQuery(java.lang.String,android.content.Context) -> e
    long saveDataInDB(java.lang.String,java.lang.String,android.content.ContentValues,android.content.Context) -> a
    void deleteRowInTable(java.lang.String,java.lang.String,android.content.Context) -> a
    long getCurrentUnixTime() -> b
    java.lang.String changeToDayMonthYear(long) -> a
    java.lang.String changeDateTime2(long) -> b
    java.lang.String changeDateTime4(long) -> c
    java.lang.String changeToDayMonthYear2(long) -> d
    java.lang.String changeToDayMonthYear4(long) -> e
    long getUpdatedTimestampFromDate(java.lang.String) -> a
    long getTimeStamp(java.lang.String) -> b
    long getUpdatedTimestampFromDate3(java.lang.String) -> c
    long getUpdatedTimestampFromDate2(java.lang.String) -> d
    int updateDataInDB(java.lang.String,android.content.ContentValues,android.content.Context,java.lang.String,java.lang.String[]) -> a
    java.lang.String isContactRecorded(java.lang.String,android.content.Context) -> f
    void createNotification(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String getCurrentDateOfSystem() -> c
    java.lang.String getValidNumber(java.lang.String) -> e
    java.lang.String getCurrentDate() -> d
    java.util.Date parseDate(java.lang.String) -> f
    java.util.Date getDateInGMT(java.lang.String) -> g
    java.util.Date getLocalDateInGMT(java.util.Date) -> a
    java.lang.String getDisplayDate(java.lang.String) -> h
    void savePreference(java.lang.String,java.lang.String,android.content.Context) -> b
    java.lang.String getPreference(java.lang.String,android.content.Context) -> g
    java.lang.String getGMTDate() -> e
    long getGMTLong() -> f
    long getGMTLong(java.lang.String) -> i
    void sendSMS(java.lang.String,java.lang.String) -> a
    java.lang.String getContactNameFromPhoneNo(android.content.Context,java.lang.String) -> a
    void registerOnDevice(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean comparetwoDate(java.lang.String,java.lang.String) -> b
    java.util.Date CheckDateFormat(java.lang.String) -> j
com.taskmanager.util.CommonUtil -> com.taskmanager.f.c:
    java.lang.String regNumber -> a
    java.lang.String removeSpecialChar(java.lang.String) -> a
    java.lang.String getRegNum(android.content.Context) -> a
    void displayMessage(android.content.Context,java.lang.String) -> a
    java.lang.String getValidMsisdn(java.lang.String) -> b
    com.taskmanager.domain.Task getTaList(java.lang.String,android.content.Context) -> a
    java.lang.String getTransactionId(android.content.Context) -> b
    java.lang.String getFiestWord(java.lang.String) -> c
com.taskmanager.webservice.BGConnector -> com.taskmanager.g.a:
    com.taskmanager.bean.registrationDTO getRegistration(com.taskmanager.bean.LoginDTO) -> a
    com.taskmanager.bean.OTPValidateDTO getOTPValidate() -> a
    java.lang.String requestOTPmethod() -> b
    java.lang.String resendOTP(java.lang.String,java.lang.String) -> a
    com.taskmanager.bean.CreateTaskDTO createTask(com.taskmanager.bean.taskListDTO) -> a
    java.lang.String updateFav(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String updatePriority(java.lang.String,java.lang.String,java.lang.String) -> b
    java.lang.String updateStatus(java.lang.String,java.lang.String,boolean,java.lang.String) -> a
    java.lang.String updateReminder(java.lang.String,java.lang.String,java.lang.String) -> c
    java.lang.String updateTask(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String updateAssignee(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String updateTarget(java.lang.String,java.lang.String,java.lang.String) -> d
    com.taskmanager.bean.CheckRegistrationDTO checkRegistrationStatus(java.lang.String) -> a
    com.taskmanager.bean.ResponseDto createMessageNew(com.taskmanager.bean.MessageListDTO) -> a
    com.taskmanager.domain.Task getTask(java.lang.String,java.lang.String,android.content.Context,java.lang.String) -> a
    com.taskmanager.domain.Task sync(java.lang.String,java.lang.String,android.content.Context,java.lang.String) -> b
    void registerDevice(java.lang.String,java.lang.String,java.lang.String) -> e
    boolean updateTaskContent(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    boolean markTaskAsRead(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> c
    boolean markMessageAsRead(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> d
    boolean deleteTask(java.lang.String,java.lang.String,android.content.Context,java.lang.String) -> c
com.taskmanager.webservice.BGConnectorImpl -> com.taskmanager.g.b:
    android.content.Context context -> a
    com.taskmanager.bean.registrationDTO getRegistration(com.taskmanager.bean.LoginDTO) -> a
    com.taskmanager.bean.registrationDTO registrationWebservice(java.lang.String) -> b
    com.taskmanager.bean.OTPValidateDTO getOTPValidate() -> a
    com.taskmanager.bean.OTPValidateDTO validateOTPWebservice(java.lang.String) -> c
    java.lang.String requestOTPmethod() -> b
    java.lang.String requestOTPWebservice(java.lang.String) -> d
    java.lang.String resendOTP(java.lang.String,java.lang.String) -> a
    java.lang.String resendOTPWebservice(org.apache.commons.httpclient.NameValuePair[]) -> a
    com.taskmanager.bean.CreateTaskDTO createTask(com.taskmanager.bean.taskListDTO) -> a
    com.taskmanager.bean.CreateTaskDTO createTaskWebservice(java.lang.String) -> e
    java.lang.String updateFav(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String updateFavWebservice(java.lang.String,java.lang.String) -> b
    java.lang.String updatePriority(java.lang.String,java.lang.String,java.lang.String) -> b
    java.lang.String updatepriorityWebservice(java.lang.String,java.lang.String) -> c
    java.lang.String updateStatus(java.lang.String,java.lang.String,boolean,java.lang.String) -> a
    java.lang.String updateStatusWebservice(java.lang.String,java.lang.String) -> d
    java.lang.String updateReminder(java.lang.String,java.lang.String,java.lang.String) -> c
    java.lang.String updateReminderWebservice(java.lang.String,java.lang.String) -> e
    com.taskmanager.bean.ResponseDto createMessageNew(com.taskmanager.bean.MessageListDTO) -> a
    com.taskmanager.bean.ResponseDto updateMessageWebserviceNew(java.lang.String,java.lang.String) -> f
    java.lang.String updateTask(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String updateTaskWebservice(java.lang.String,java.lang.String) -> g
    java.lang.String updateAssignee(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String updateAssigneeWebservice(java.lang.String,java.lang.String) -> h
    java.lang.String updateTarget(java.lang.String,java.lang.String,java.lang.String) -> d
    java.lang.String updateTargetWebservice(java.lang.String,java.lang.String) -> i
    com.taskmanager.bean.CheckRegistrationDTO checkRegistrationStatus(java.lang.String) -> a
    com.taskmanager.bean.CheckRegistrationDTO checkRegistrationStatusWebservice(java.lang.String) -> f
    com.taskmanager.domain.Task getTask(java.lang.String,java.lang.String,android.content.Context,java.lang.String) -> a
    void registerDevice(java.lang.String,java.lang.String,java.lang.String) -> e
    boolean markMessageAsRead(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> d
    boolean markTaskAsRead(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> c
    boolean updateTaskContent(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    com.taskmanager.domain.Task sync(java.lang.String,java.lang.String,android.content.Context,java.lang.String) -> b
    boolean deleteTask(java.lang.String,java.lang.String,android.content.Context,java.lang.String) -> c
com.taskmanager.webservice.json.JSON -> com.taskmanager.g.a.a:
    java.lang.String format() -> a
com.taskmanager.webservice.json.JSONException -> com.taskmanager.g.a.b:
com.taskmanager.webservice.json.JSONFactory -> com.taskmanager.g.a.c:
    com.taskmanager.webservice.json.JSONFactory instance -> a
    android.content.Context context -> b
    com.taskmanager.webservice.json.JSONFactory getInstance(android.content.Context) -> a
    com.taskmanager.bean.registrationDTO parseRegistrationResponse(java.lang.String) -> a
    com.taskmanager.bean.OTPValidateDTO parseValidateOTPResponse(java.lang.String) -> b
    java.lang.String parseResendOTPResponse(java.lang.String) -> c
    com.taskmanager.bean.CreateTaskDTO parseCreateTaskResponse(java.lang.String) -> d
    java.lang.String parseUpdateFavResponse(java.lang.String) -> e
    java.lang.String parsePriorityFavResponse(java.lang.String) -> f
    java.lang.String parsestatusResponse(java.lang.String) -> g
    java.lang.String parseReminderResponse(java.lang.String) -> h
    java.lang.String parseTaskUpdateResponse(java.lang.String) -> i
    com.taskmanager.bean.CheckRegistrationDTO parseCheckRegistrationResponce(java.lang.String) -> j
com.taskmanager.webservice.json.JSONPopulator -> com.taskmanager.g.a.d:
    java.lang.String dateFormat -> a
    void populateObject(java.lang.Object,java.util.Map) -> a
    java.lang.Object convert(java.lang.Class,java.lang.reflect.Type,java.lang.Object,java.lang.reflect.Method) -> a
    boolean isJSONPrimitive(java.lang.Class) -> a
    java.lang.Object convertToArray(java.lang.Class,java.lang.reflect.Type,java.lang.Object,java.lang.reflect.Method) -> b
    java.lang.Object convertToCollection(java.lang.Class,java.lang.reflect.Type,java.lang.Object,java.lang.reflect.Method) -> c
    java.lang.Object convertToMap(java.lang.Class,java.lang.reflect.Type,java.lang.Object,java.lang.reflect.Method) -> d
    java.lang.Object convertPrimitive(java.lang.Class,java.lang.Object,java.lang.reflect.Method) -> a
com.taskmanager.webservice.json.JSONReader -> com.taskmanager.g.a.e:
    java.lang.Object OBJECT_END -> a
    java.lang.Object ARRAY_END -> b
    java.lang.Object COLON -> c
    java.lang.Object COMMA -> d
    java.util.Map escapes -> e
    java.text.CharacterIterator it -> f
    char c -> g
    java.lang.Object token -> h
    java.lang.StringBuilder buf -> i
    char next() -> a
    void skipWhiteSpace() -> b
    java.lang.Object read(java.lang.String) -> a
    java.lang.Object read() -> c
    java.util.Map object() -> d
    com.taskmanager.webservice.json.JSONException buildInvalidInputException() -> e
    java.util.List array() -> f
    java.lang.Object number() -> g
    java.lang.Object string(char) -> a
    void add(char) -> b
    void add() -> h
    void addDigits() -> i
    char unicode() -> j
com.taskmanager.webservice.json.JSONUtil -> com.taskmanager.g.a.f:
    java.lang.Object deserialize(java.lang.String) -> a
    java.lang.Object getJavaObject(java.lang.String,java.lang.Class) -> a
com.taskmanager.wheel.widget.DateTimeWheel -> com.taskmanager.wheel.widget.DateTimeWheel:
    java.util.Calendar calendar -> a
    com.taskmanager.wheel.widget.DateTimeWheel$OnTimeChangedListener timeChangedListener -> b
    void fireTimeChanged(long) -> a
    java.util.Calendar access$0(com.taskmanager.wheel.widget.DateTimeWheel) -> a
    void access$1(com.taskmanager.wheel.widget.DateTimeWheel,long) -> a
com.taskmanager.wheel.widget.DateTimeWheel$1 -> com.taskmanager.wheel.widget.a:
    com.taskmanager.wheel.widget.DateTimeWheel this$0 -> a
    void onChanged(com.taskmanager.wheel.widget.WheelView,int,int) -> a
com.taskmanager.wheel.widget.DateTimeWheel$OnTimeChangedListener -> com.taskmanager.wheel.widget.b:
    void onTimeChanged(long) -> a
com.taskmanager.wheel.widget.ItemsRange -> com.taskmanager.wheel.widget.c:
    int first -> a
    int count -> b
    int getFirst() -> a
    int getLast() -> b
    int getCount() -> c
    boolean contains(int) -> a
com.taskmanager.wheel.widget.OnWheelChangedListener -> com.taskmanager.wheel.widget.d:
    void onChanged(com.taskmanager.wheel.widget.WheelView,int,int) -> a
com.taskmanager.wheel.widget.OnWheelClickedListener -> com.taskmanager.wheel.widget.e:
    void onItemClicked(com.taskmanager.wheel.widget.WheelView,int) -> a
com.taskmanager.wheel.widget.OnWheelScrollListener -> com.taskmanager.wheel.widget.f:
    void onScrollingStarted(com.taskmanager.wheel.widget.WheelView) -> a
    void onScrollingFinished(com.taskmanager.wheel.widget.WheelView) -> b
com.taskmanager.wheel.widget.WheelRecycle -> com.taskmanager.wheel.widget.g:
    java.util.List items -> a
    java.util.List emptyItems -> b
    com.taskmanager.wheel.widget.WheelView wheel -> c
    int recycleItems(android.widget.LinearLayout,int,com.taskmanager.wheel.widget.ItemsRange) -> a
    android.view.View getItem() -> a
    android.view.View getEmptyItem() -> b
    void clearAll() -> c
    java.util.List addView(android.view.View,java.util.List) -> a
    void recycleView(android.view.View,int) -> a
    android.view.View getCachedView(java.util.List) -> a
com.taskmanager.wheel.widget.WheelScroller -> com.taskmanager.wheel.widget.h:
    com.taskmanager.wheel.widget.WheelScroller$ScrollingListener listener -> a
    android.content.Context context -> b
    android.view.GestureDetector gestureDetector -> c
    android.widget.Scroller scroller -> d
    int lastScrollY -> e
    float lastTouchedY -> f
    boolean isScrollingPerformed -> g
    android.view.GestureDetector$SimpleOnGestureListener gestureListener -> h
    int MESSAGE_SCROLL -> i
    int MESSAGE_JUSTIFY -> j
    android.os.Handler animationHandler -> k
    void scroll(int,int) -> a
    void stopScrolling() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setNextMessage(int) -> a
    void clearMessages() -> c
    void justify() -> d
    void startScrolling() -> e
    void finishScrolling() -> b
    void access$0(com.taskmanager.wheel.widget.WheelScroller,int) -> a
    android.widget.Scroller access$1(com.taskmanager.wheel.widget.WheelScroller) -> a
    int access$2(com.taskmanager.wheel.widget.WheelScroller) -> b
    void access$3(com.taskmanager.wheel.widget.WheelScroller,int) -> b
    com.taskmanager.wheel.widget.WheelScroller$ScrollingListener access$4(com.taskmanager.wheel.widget.WheelScroller) -> c
    android.os.Handler access$5(com.taskmanager.wheel.widget.WheelScroller) -> d
    void access$6(com.taskmanager.wheel.widget.WheelScroller) -> e
com.taskmanager.wheel.widget.WheelScroller$1 -> com.taskmanager.wheel.widget.i:
    com.taskmanager.wheel.widget.WheelScroller this$0 -> a
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.taskmanager.wheel.widget.WheelScroller$2 -> com.taskmanager.wheel.widget.j:
    com.taskmanager.wheel.widget.WheelScroller this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.taskmanager.wheel.widget.WheelScroller$ScrollingListener -> com.taskmanager.wheel.widget.k:
    void onScroll(int) -> a
    void onStarted() -> a
    void onFinished() -> b
    void onJustify() -> c
com.taskmanager.wheel.widget.WheelView -> com.taskmanager.wheel.widget.WheelView:
    java.lang.String itemVale -> c
    int[] SHADOWS_COLORS -> d
    int currentItem -> e
    int visibleItems -> f
    int itemHeight -> g
    android.graphics.drawable.Drawable centerDrawable -> h
    android.graphics.drawable.GradientDrawable topShadow -> i
    android.graphics.drawable.GradientDrawable bottomShadow -> j
    com.taskmanager.wheel.widget.WheelScroller scroller -> k
    boolean isScrollingPerformed -> l
    int scrollingOffset -> m
    boolean isCyclic -> a
    android.widget.LinearLayout itemsLayout -> n
    int firstItem -> o
    com.taskmanager.wheel.widget.adapters.WheelViewAdapter viewAdapter -> p
    com.taskmanager.wheel.widget.WheelRecycle recycle -> q
    java.util.List changingListeners -> r
    java.util.List scrollingListeners -> s
    java.util.List clickingListeners -> t
    com.taskmanager.wheel.widget.WheelScroller$ScrollingListener scrollingListener -> b
    android.database.DataSetObserver dataObserver -> u
    void initData(android.content.Context) -> a
    com.taskmanager.wheel.widget.adapters.WheelViewAdapter getViewAdapter() -> a
    void setViewAdapter(com.taskmanager.wheel.widget.adapters.WheelViewAdapter) -> a
    void addChangingListener(com.taskmanager.wheel.widget.OnWheelChangedListener) -> a
    void notifyChangingListeners(int,int) -> a
    void notifyScrollingListenersAboutStart() -> b
    void notifyScrollingListenersAboutEnd() -> c
    void notifyClickListenersAboutClick(int) -> a
    void setCurrentItem(int,boolean) -> a
    boolean isCyclic() -> d
    void setCyclic(boolean) -> a
    void invalidateWheel(boolean) -> b
    void initResourcesIfNecessary() -> e
    int getDesiredHeight(android.widget.LinearLayout) -> a
    int getItemHeight() -> f
    int calculateLayoutWidth(int,int) -> c
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,int) -> d
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawShadows(android.graphics.Canvas) -> a
    void drawItems(android.graphics.Canvas) -> b
    void drawCenterRect(android.graphics.Canvas) -> c
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void doScroll(int) -> b
    void scroll(int,int) -> b
    com.taskmanager.wheel.widget.ItemsRange getItemsRange() -> g
    boolean rebuildItems() -> h
    void updateView() -> i
    void createItemsLayout() -> j
    void buildViewForMeasuring() -> k
    boolean addViewItem(int,boolean) -> b
    boolean isValidItemIndex(int) -> c
    android.view.View getItemView(int) -> d
    void access$0(com.taskmanager.wheel.widget.WheelView,boolean) -> a
    void access$1(com.taskmanager.wheel.widget.WheelView,int) -> a
    int access$2(com.taskmanager.wheel.widget.WheelView) -> a
    void access$3(com.taskmanager.wheel.widget.WheelView,int) -> b
    com.taskmanager.wheel.widget.WheelScroller access$4(com.taskmanager.wheel.widget.WheelView) -> b
    boolean access$5(com.taskmanager.wheel.widget.WheelView) -> c
com.taskmanager.wheel.widget.WheelView$1 -> com.taskmanager.wheel.widget.l:
    com.taskmanager.wheel.widget.WheelView this$0 -> a
    void onStarted() -> a
    void onScroll(int) -> a
    void onFinished() -> b
    void onJustify() -> c
com.taskmanager.wheel.widget.WheelView$2 -> com.taskmanager.wheel.widget.m:
    com.taskmanager.wheel.widget.WheelView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.taskmanager.wheel.widget.adapters.AbstractWheelAdapter -> com.taskmanager.wheel.widget.a.a:
    java.util.List datasetObservers -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
com.taskmanager.wheel.widget.adapters.AbstractWheelTextAdapter -> com.taskmanager.wheel.widget.a.b:
    int textColor -> f
    int textSize -> g
    android.content.Context context -> a
    android.view.LayoutInflater inflater -> b
    int itemResourceId -> c
    int itemTextResourceId -> d
    int emptyItemResourceId -> e
    void setItemResource(int) -> a
    void setItemTextResource(int) -> b
    java.lang.CharSequence getItemText(int) -> c
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void configureTextView(android.widget.TextView) -> a
    android.widget.TextView getTextView(android.view.View,int) -> a
    android.view.View getView(int,android.view.ViewGroup) -> a
com.taskmanager.wheel.widget.adapters.DayArrayAdapter -> com.taskmanager.wheel.widget.a.c:
    java.util.ArrayList dateStringList -> f
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    int getItemsCount() -> a
    java.lang.CharSequence getItemText(int) -> c
com.taskmanager.wheel.widget.adapters.NumericWheelAdapter -> com.taskmanager.wheel.widget.a.d:
    int minValue -> f
    int maxValue -> g
    java.lang.String format -> h
    java.lang.CharSequence getItemText(int) -> c
    int getItemsCount() -> a
com.taskmanager.wheel.widget.adapters.WheelViewAdapter -> com.taskmanager.wheel.widget.a.e:
    int getItemsCount() -> a
    android.view.View getItem(int,android.view.View,android.view.ViewGroup) -> a
    android.view.View getEmptyItem(android.view.View,android.view.ViewGroup) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
com.taskmanager.widgets.NoteEditText -> com.taskmanager.widgets.NoteEditText:
    android.graphics.Paint mPaint -> a
    int enterPressed -> b
    int noOfLines -> c
    void onDraw(android.graphics.Canvas) -> onDraw
    int access$0(com.taskmanager.widgets.NoteEditText) -> a
    void access$1(com.taskmanager.widgets.NoteEditText,int) -> a
com.taskmanager.widgets.NoteEditText$1 -> com.taskmanager.widgets.a:
    com.taskmanager.widgets.NoteEditText this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
org.apache.commons.httpclient.AutoCloseInputStream -> org.apache.a.a.a:
    boolean streamOpen -> a
    boolean selfClosed -> b
    org.apache.commons.httpclient.ResponseConsumedWatcher watcher -> c
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int available() -> available
    void close() -> close
    void checkClose(int) -> a
    boolean isReadAllowed() -> a
    void notifyWatcher() -> b
org.apache.commons.httpclient.ChunkedInputStream -> org.apache.a.a.b:
    java.io.InputStream in -> b
    int chunkSize -> c
    int pos -> d
    boolean bof -> e
    boolean eof -> f
    boolean closed -> g
    org.apache.commons.httpclient.HttpMethod method -> h
    org.apache.commons.logging.Log LOG -> i
    java.lang.Class class$org$apache$commons$httpclient$ChunkedInputStream -> a
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    void readCRLF() -> a
    void nextChunk() -> b
    int getChunkSizeFromInputStream(java.io.InputStream) -> b
    void parseTrailerHeaders() -> c
    void close() -> close
    void exhaustInputStream(java.io.InputStream) -> a
    java.lang.Class class$(java.lang.String) -> a
org.apache.commons.httpclient.ChunkedOutputStream -> org.apache.a.a.c:
    byte[] CRLF -> a
    byte[] ENDCHUNK -> b
    byte[] ZERO -> c
    java.io.OutputStream stream -> d
    byte[] cache -> e
    int cachePosition -> f
    boolean wroteLastChunk -> g
    void flushCache() -> a
    void flushCacheWithAppend(byte[],int,int) -> a
    void writeClosingChunk() -> b
    void finish() -> c
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
org.apache.commons.httpclient.CircularRedirectException -> org.apache.a.a.d:
org.apache.commons.httpclient.ConnectMethod -> org.apache.a.a.e:
    org.apache.commons.httpclient.HostConfiguration targethost -> e
    org.apache.commons.logging.Log LOG -> f
    java.lang.Class class$org$apache$commons$httpclient$ConnectMethod -> a
    java.lang.String getName() -> a
    java.lang.String getPath() -> b
    org.apache.commons.httpclient.URI getURI() -> c
    void addCookieRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> a
    void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> b
    int execute(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> c
    void writeRequestLine(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> d
    boolean shouldCloseConnection(org.apache.commons.httpclient.HttpConnection) -> a
    java.lang.Class class$(java.lang.String) -> a
org.apache.commons.httpclient.ConnectTimeoutException -> org.apache.a.a.f:
org.apache.commons.httpclient.ConnectionPoolTimeoutException -> org.apache.a.a.g:
org.apache.commons.httpclient.ContentLengthInputStream -> org.apache.a.a.h:
    long contentLength -> a
    long pos -> b
    boolean closed -> c
    java.io.InputStream wrappedStream -> d
    void close() -> close
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    long skip(long) -> skip
    int available() -> available
org.apache.commons.httpclient.Cookie -> org.apache.a.a.i:
    java.lang.String cookieComment -> b
    java.lang.String cookieDomain -> c
    java.util.Date cookieExpiryDate -> d
    java.lang.String cookiePath -> e
    boolean isSecure -> f
    boolean hasPathAttribute -> g
    boolean hasDomainAttribute -> h
    int cookieVersion -> i
    org.apache.commons.logging.Log LOG -> j
    java.lang.Class class$org$apache$commons$httpclient$Cookie -> a
    void setComment(java.lang.String) -> a
    java.util.Date getExpiryDate() -> a
    void setExpiryDate(java.util.Date) -> a
    boolean isPersistent() -> b
    java.lang.String getDomain() -> c
    void setDomain(java.lang.String) -> b
    java.lang.String getPath() -> d
    void setPath(java.lang.String) -> c
    boolean getSecure() -> e
    void setSecure(boolean) -> a
    int getVersion() -> f
    void setVersion(int) -> a
    boolean isExpired() -> g
    void setPathAttributeSpecified(boolean) -> b
    boolean isPathAttributeSpecified() -> h
    void setDomainAttributeSpecified(boolean) -> c
    boolean isDomainAttributeSpecified() -> i
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toExternalForm() -> j
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.lang.String toString() -> toString
    java.lang.Class class$(java.lang.String) -> d
org.apache.commons.httpclient.Credentials -> org.apache.a.a.j:
org.apache.commons.httpclient.DefaultHttpMethodRetryHandler -> org.apache.a.a.k:
    java.lang.Class SSL_HANDSHAKE_EXCEPTION -> a
    int retryCount -> b
    boolean requestSentRetryEnabled -> c
    boolean retryMethod(org.apache.commons.httpclient.HttpMethod,java.io.IOException,int) -> a
org.apache.commons.httpclient.Header -> org.apache.a.a.l:
    boolean isAutogenerated -> a
    java.lang.String toExternalForm() -> a
    java.lang.String toString() -> toString
    org.apache.commons.httpclient.HeaderElement[] getElements() -> b
    boolean isAutogenerated() -> c
org.apache.commons.httpclient.HeaderElement -> org.apache.a.a.m:
    org.apache.commons.logging.Log LOG -> b
    org.apache.commons.httpclient.NameValuePair[] parameters -> c
    java.lang.Class class$org$apache$commons$httpclient$HeaderElement -> a
    org.apache.commons.httpclient.NameValuePair[] getParameters() -> a
    org.apache.commons.httpclient.HeaderElement[] parseElements(char[]) -> a
    org.apache.commons.httpclient.HeaderElement[] parseElements(java.lang.String) -> a
    org.apache.commons.httpclient.NameValuePair getParameterByName(java.lang.String) -> b
    java.lang.Class class$(java.lang.String) -> c
org.apache.commons.httpclient.HeaderGroup -> org.apache.a.a.n:
    java.util.List headers -> a
    void clear() -> a
    void addHeader(org.apache.commons.httpclient.Header) -> a
    void removeHeader(org.apache.commons.httpclient.Header) -> b
    void setHeaders(org.apache.commons.httpclient.Header[]) -> a
    org.apache.commons.httpclient.Header getCondensedHeader(java.lang.String) -> a
    org.apache.commons.httpclient.Header[] getHeaders(java.lang.String) -> b
    org.apache.commons.httpclient.Header getFirstHeader(java.lang.String) -> c
    org.apache.commons.httpclient.Header[] getAllHeaders() -> b
org.apache.commons.httpclient.HostConfiguration -> org.apache.a.a.o:
    org.apache.commons.httpclient.HostConfiguration ANY_HOST_CONFIGURATION -> a
    org.apache.commons.httpclient.HttpHost host -> b
    org.apache.commons.httpclient.ProxyHost proxyHost -> c
    java.net.InetAddress localAddress -> d
    org.apache.commons.httpclient.params.HostParams params -> e
    void init(org.apache.commons.httpclient.HostConfiguration) -> a
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
    boolean hostEquals(org.apache.commons.httpclient.HttpConnection) -> a
    boolean proxyEquals(org.apache.commons.httpclient.HttpConnection) -> b
    void setHost(java.lang.String,int,java.lang.String) -> a
    void setHost(org.apache.commons.httpclient.URI) -> a
    java.lang.String getHost() -> a
    int getPort() -> b
    org.apache.commons.httpclient.protocol.Protocol getProtocol() -> c
    java.lang.String getProxyHost() -> d
    int getProxyPort() -> e
    java.net.InetAddress getLocalAddress() -> f
    org.apache.commons.httpclient.params.HostParams getParams() -> g
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.httpclient.HttpClient -> org.apache.a.a.p:
    org.apache.commons.logging.Log LOG -> b
    org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager -> c
    org.apache.commons.httpclient.HttpState state -> d
    org.apache.commons.httpclient.params.HttpClientParams params -> e
    org.apache.commons.httpclient.HostConfiguration hostConfiguration -> f
    java.lang.Class class$org$apache$commons$httpclient$HttpClient -> a
    org.apache.commons.httpclient.HttpState getState() -> a
    int executeMethod(org.apache.commons.httpclient.HttpMethod) -> a
    int executeMethod(org.apache.commons.httpclient.HostConfiguration,org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpState) -> a
    org.apache.commons.httpclient.HostConfiguration getHostConfiguration() -> b
    org.apache.commons.httpclient.HttpConnectionManager getHttpConnectionManager() -> c
    java.lang.Class class$(java.lang.String) -> a
org.apache.commons.httpclient.HttpClientError -> org.apache.a.a.q:
org.apache.commons.httpclient.HttpConnection -> org.apache.a.a.r:
    byte[] CRLF -> c
    org.apache.commons.logging.Log LOG -> d
    java.lang.String hostName -> e
    int portNumber -> f
    java.lang.String proxyHostName -> g
    int proxyPortNumber -> h
    java.net.Socket socket -> i
    java.io.InputStream inputStream -> j
    java.io.OutputStream outputStream -> k
    java.io.InputStream lastResponseInputStream -> l
    boolean isOpen -> a
    org.apache.commons.httpclient.protocol.Protocol protocolInUse -> m
    org.apache.commons.httpclient.params.HttpConnectionParams params -> n
    boolean locked -> o
    boolean usingSecureSocket -> p
    boolean tunnelEstablished -> q
    org.apache.commons.httpclient.HttpConnectionManager httpConnectionManager -> r
    java.net.InetAddress localAddress -> s
    java.lang.Class class$org$apache$commons$httpclient$HttpConnection -> b
    java.lang.String getHost() -> a
    void setHost(java.lang.String) -> a
    int getPort() -> b
    void setPort(int) -> a
    java.lang.String getProxyHost() -> c
    void setProxyHost(java.lang.String) -> b
    int getProxyPort() -> d
    void setProxyPort(int) -> b
    boolean isSecure() -> e
    org.apache.commons.httpclient.protocol.Protocol getProtocol() -> f
    void setProtocol(org.apache.commons.httpclient.protocol.Protocol) -> a
    java.net.InetAddress getLocalAddress() -> g
    void setLocalAddress(java.net.InetAddress) -> a
    boolean isOpen() -> h
    boolean closeIfStale() -> i
    boolean isStale() -> j
    boolean isProxied() -> k
    void setLastResponseInputStream(java.io.InputStream) -> a
    java.io.InputStream getLastResponseInputStream() -> l
    org.apache.commons.httpclient.params.HttpConnectionParams getParams() -> m
    void setSocketTimeout(int) -> c
    void open() -> n
    void tunnelCreated() -> o
    boolean isTransparent() -> p
    void flushRequestOutputStream() -> q
    java.io.OutputStream getRequestOutputStream() -> r
    java.io.InputStream getResponseInputStream() -> s
    boolean isResponseAvailable() -> t
    boolean isResponseAvailable(int) -> d
    void write(byte[]) -> a
    void write(byte[],int,int) -> a
    void writeLine(byte[]) -> b
    void writeLine() -> u
    void print(java.lang.String,java.lang.String) -> a
    void printLine(java.lang.String,java.lang.String) -> b
    java.lang.String readLine(java.lang.String) -> c
    void close() -> v
    void setHttpConnectionManager(org.apache.commons.httpclient.HttpConnectionManager) -> a
    void releaseConnection() -> w
    void setLocked(boolean) -> a
    void closeSocketAndStreams() -> x
    void assertNotOpen() -> y
    void assertOpen() -> z
    java.lang.Class class$(java.lang.String) -> d
org.apache.commons.httpclient.HttpConnectionManager -> org.apache.a.a.s:
    org.apache.commons.httpclient.HttpConnection getConnectionWithTimeout(org.apache.commons.httpclient.HostConfiguration,long) -> a
    void releaseConnection(org.apache.commons.httpclient.HttpConnection) -> a
    org.apache.commons.httpclient.params.HttpConnectionManagerParams getParams() -> a
org.apache.commons.httpclient.HttpException -> org.apache.a.a.t:
    int reasonCode -> b
    java.lang.Throwable cause -> c
    java.lang.Class class$java$lang$Throwable -> a
    java.lang.Throwable getCause() -> getCause
    void printStackTrace() -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    java.lang.Class class$(java.lang.String) -> a
org.apache.commons.httpclient.HttpHost -> org.apache.a.a.u:
    java.lang.String hostname -> a
    int port -> b
    org.apache.commons.httpclient.protocol.Protocol protocol -> c
    void init(org.apache.commons.httpclient.HttpHost) -> a
    java.lang.Object clone() -> clone
    java.lang.String getHostName() -> a
    int getPort() -> b
    org.apache.commons.httpclient.protocol.Protocol getProtocol() -> c
    java.lang.String toURI() -> d
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.httpclient.HttpMethod -> org.apache.a.a.v:
    java.lang.String getName() -> a
    java.lang.String getPath() -> b
    org.apache.commons.httpclient.URI getURI() -> c
    void setURI(org.apache.commons.httpclient.URI) -> a
    void addRequestHeader(org.apache.commons.httpclient.Header) -> a
    void removeRequestHeader(org.apache.commons.httpclient.Header) -> b
    boolean getFollowRedirects() -> d
    java.lang.String getQueryString() -> e
    org.apache.commons.httpclient.Header[] getRequestHeaders(java.lang.String) -> b
    int getStatusCode() -> f
    org.apache.commons.httpclient.Header getResponseHeader(java.lang.String) -> c
    org.apache.commons.httpclient.Header[] getResponseHeaders(java.lang.String) -> d
    java.io.InputStream getResponseBodyAsStream() -> g
    int execute(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> c
    void addResponseFooter(org.apache.commons.httpclient.Header) -> c
    boolean getDoAuthentication() -> h
    org.apache.commons.httpclient.params.HttpMethodParams getParams() -> i
    org.apache.commons.httpclient.auth.AuthState getHostAuthState() -> j
    org.apache.commons.httpclient.auth.AuthState getProxyAuthState() -> k
    boolean isRequestSent() -> l
org.apache.commons.httpclient.HttpMethodBase -> org.apache.a.a.w:
    org.apache.commons.logging.Log LOG -> a
    org.apache.commons.httpclient.HeaderGroup requestHeaders -> e
    org.apache.commons.httpclient.StatusLine statusLine -> b
    org.apache.commons.httpclient.HeaderGroup responseHeaders -> f
    org.apache.commons.httpclient.HeaderGroup responseTrailerHeaders -> g
    java.lang.String path -> h
    java.lang.String queryString -> i
    java.io.InputStream responseStream -> j
    org.apache.commons.httpclient.HttpConnection responseConnection -> k
    byte[] responseBody -> l
    boolean followRedirects -> m
    boolean doAuthentication -> n
    org.apache.commons.httpclient.params.HttpMethodParams params -> o
    org.apache.commons.httpclient.auth.AuthState hostAuthState -> p
    org.apache.commons.httpclient.auth.AuthState proxyAuthState -> q
    boolean used -> r
    int recoverableExceptionCount -> s
    org.apache.commons.httpclient.HttpHost httphost -> t
    org.apache.commons.httpclient.MethodRetryHandler methodRetryHandler -> u
    boolean connectionCloseForced -> v
    org.apache.commons.httpclient.HttpVersion effectiveVersion -> c
    boolean aborted -> w
    boolean requestSent -> x
    org.apache.commons.httpclient.cookie.CookieSpec cookiespec -> y
    java.lang.Class class$org$apache$commons$httpclient$HttpMethodBase -> d
    java.lang.String getName() -> a
    org.apache.commons.httpclient.URI getURI() -> c
    void setURI(org.apache.commons.httpclient.URI) -> a
    void setFollowRedirects(boolean) -> a
    boolean getFollowRedirects() -> d
    boolean getDoAuthentication() -> h
    void setPath(java.lang.String) -> e
    void addRequestHeader(org.apache.commons.httpclient.Header) -> a
    void addResponseFooter(org.apache.commons.httpclient.Header) -> c
    java.lang.String getPath() -> b
    void setQueryString(java.lang.String) -> f
    java.lang.String getQueryString() -> e
    void setRequestHeader(java.lang.String,java.lang.String) -> a
    void setRequestHeader(org.apache.commons.httpclient.Header) -> d
    org.apache.commons.httpclient.Header getRequestHeader(java.lang.String) -> g
    org.apache.commons.httpclient.Header[] getRequestHeaders() -> m
    org.apache.commons.httpclient.Header[] getRequestHeaders(java.lang.String) -> b
    org.apache.commons.httpclient.HeaderGroup getRequestHeaderGroup() -> n
    org.apache.commons.httpclient.HeaderGroup getResponseTrailerHeaderGroup() -> o
    org.apache.commons.httpclient.HeaderGroup getResponseHeaderGroup() -> p
    org.apache.commons.httpclient.Header[] getResponseHeaders(java.lang.String) -> d
    int getStatusCode() -> f
    org.apache.commons.httpclient.StatusLine getStatusLine() -> q
    boolean responseAvailable() -> C
    org.apache.commons.httpclient.Header getResponseHeader(java.lang.String) -> c
    long getResponseContentLength() -> r
    byte[] getResponseBody() -> s
    java.io.InputStream getResponseBodyAsStream() -> g
    java.lang.String getResponseBodyAsString() -> t
    void setResponseStream(java.io.InputStream) -> a
    void addRequestHeader(java.lang.String,java.lang.String) -> b
    boolean isConnectionCloseForced() -> u
    void setConnectionCloseForced(boolean) -> b
    boolean shouldCloseConnection(org.apache.commons.httpclient.HttpConnection) -> a
    void checkExecuteConditions(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> r
    int execute(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> c
    void removeRequestHeader(java.lang.String) -> h
    void removeRequestHeader(org.apache.commons.httpclient.Header) -> b
    boolean validate() -> v
    org.apache.commons.httpclient.cookie.CookieSpec getCookieSpec(org.apache.commons.httpclient.HttpState) -> a
    void addCookieRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> a
    void addHostRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> e
    void addProxyConnectionHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> f
    void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> b
    void addUserAgentRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> g
    java.lang.String generateRequestLine(org.apache.commons.httpclient.HttpConnection,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void processResponseBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> h
    void processResponseHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> i
    void processCookieHeaders(org.apache.commons.httpclient.cookie.CookieSpec,org.apache.commons.httpclient.Header[],org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> a
    void processStatusLine(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> j
    void readResponse(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> k
    void readResponseBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> l
    java.io.InputStream readResponseBody(org.apache.commons.httpclient.HttpConnection) -> b
    void readResponseHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> m
    void readStatusLine(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> n
    void writeRequest(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> o
    boolean writeRequestBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> p
    void writeRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> q
    void writeRequestLine(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> d
    java.lang.String getRequestLine(org.apache.commons.httpclient.HttpConnection) -> c
    org.apache.commons.httpclient.params.HttpMethodParams getParams() -> i
    org.apache.commons.httpclient.HttpVersion getEffectiveVersion() -> w
    boolean canResponseHaveBody(int) -> a
    java.lang.String getContentCharSet(org.apache.commons.httpclient.Header) -> e
    java.lang.String getRequestCharSet() -> x
    java.lang.String getResponseCharSet() -> y
    void responseBodyConsumed() -> z
    void ensureConnectionRelease() -> D
    org.apache.commons.httpclient.MethodRetryHandler getMethodRetryHandler() -> A
    void fakeResponse(org.apache.commons.httpclient.StatusLine,org.apache.commons.httpclient.HeaderGroup,java.io.InputStream) -> a
    org.apache.commons.httpclient.auth.AuthState getHostAuthState() -> j
    org.apache.commons.httpclient.auth.AuthState getProxyAuthState() -> k
    boolean isAborted() -> B
    boolean isRequestSent() -> l
    java.lang.Class class$(java.lang.String) -> i
org.apache.commons.httpclient.HttpMethodBase$1 -> org.apache.a.a.x:
    org.apache.commons.httpclient.HttpMethodBase this$0 -> a
    void responseConsumed() -> a
org.apache.commons.httpclient.HttpMethodDirector -> org.apache.a.a.y:
    org.apache.commons.logging.Log LOG -> b
    org.apache.commons.httpclient.ConnectMethod connectMethod -> c
    org.apache.commons.httpclient.HttpState state -> d
    org.apache.commons.httpclient.HostConfiguration hostConfiguration -> e
    org.apache.commons.httpclient.HttpConnectionManager connectionManager -> f
    org.apache.commons.httpclient.params.HttpClientParams params -> g
    org.apache.commons.httpclient.HttpConnection conn -> h
    boolean releaseConnection -> i
    org.apache.commons.httpclient.auth.AuthChallengeProcessor authProcessor -> j
    java.util.Set redirectLocations -> k
    java.lang.Class class$org$apache$commons$httpclient$HttpMethodDirector -> a
    void executeMethod(org.apache.commons.httpclient.HttpMethod) -> a
    void authenticate(org.apache.commons.httpclient.HttpMethod) -> b
    boolean cleanAuthHeaders(org.apache.commons.httpclient.HttpMethod,java.lang.String) -> a
    void authenticateHost(org.apache.commons.httpclient.HttpMethod) -> c
    void authenticateProxy(org.apache.commons.httpclient.HttpMethod) -> d
    void applyConnectionParams(org.apache.commons.httpclient.HttpMethod) -> e
    void executeWithRetry(org.apache.commons.httpclient.HttpMethod) -> f
    boolean executeConnect() -> a
    void fakeResponse(org.apache.commons.httpclient.HttpMethod) -> g
    boolean processRedirectResponse(org.apache.commons.httpclient.HttpMethod) -> h
    boolean processAuthenticationResponse(org.apache.commons.httpclient.HttpMethod) -> i
    boolean processWWWAuthChallenge(org.apache.commons.httpclient.HttpMethod) -> j
    boolean processProxyAuthChallenge(org.apache.commons.httpclient.HttpMethod) -> k
    boolean isRedirectNeeded(org.apache.commons.httpclient.HttpMethod) -> l
    boolean isAuthenticationNeeded(org.apache.commons.httpclient.HttpMethod) -> m
    org.apache.commons.httpclient.Credentials promptForCredentials(org.apache.commons.httpclient.auth.AuthScheme,org.apache.commons.httpclient.params.HttpParams,org.apache.commons.httpclient.auth.AuthScope) -> a
    org.apache.commons.httpclient.Credentials promptForProxyCredentials(org.apache.commons.httpclient.auth.AuthScheme,org.apache.commons.httpclient.params.HttpParams,org.apache.commons.httpclient.auth.AuthScope) -> b
    java.lang.Class class$(java.lang.String) -> a
org.apache.commons.httpclient.HttpMethodRetryHandler -> org.apache.a.a.z:
    boolean retryMethod(org.apache.commons.httpclient.HttpMethod,java.io.IOException,int) -> a
org.apache.commons.httpclient.HttpParser -> org.apache.a.a.aa:
    org.apache.commons.logging.Log LOG -> b
    java.lang.Class class$org$apache$commons$httpclient$HttpParser -> a
    byte[] readRawLine(java.io.InputStream) -> a
    java.lang.String readLine(java.io.InputStream,java.lang.String) -> a
    org.apache.commons.httpclient.Header[] parseHeaders(java.io.InputStream,java.lang.String) -> b
    java.lang.Class class$(java.lang.String) -> a
org.apache.commons.httpclient.HttpRecoverableException -> org.apache.a.a.ab:
org.apache.commons.httpclient.HttpState -> org.apache.a.a.ac:
    java.util.HashMap credMap -> a
    java.util.HashMap proxyCred -> b
    java.util.ArrayList cookies -> c
    boolean preemptive -> e
    int cookiePolicy -> f
    org.apache.commons.logging.Log LOG -> g
    java.lang.Class class$org$apache$commons$httpclient$HttpState -> d
    void addCookie(org.apache.commons.httpclient.Cookie) -> a
    org.apache.commons.httpclient.Cookie[] getCookies() -> a
    int getCookiePolicy() -> b
    boolean isAuthenticationPreemptive() -> c
    void setCredentials(org.apache.commons.httpclient.auth.AuthScope,org.apache.commons.httpclient.Credentials) -> a
    org.apache.commons.httpclient.Credentials matchCredentials(java.util.HashMap,org.apache.commons.httpclient.auth.AuthScope) -> a
    org.apache.commons.httpclient.Credentials getCredentials(org.apache.commons.httpclient.auth.AuthScope) -> a
    void setProxyCredentials(org.apache.commons.httpclient.auth.AuthScope,org.apache.commons.httpclient.Credentials) -> b
    org.apache.commons.httpclient.Credentials getProxyCredentials(org.apache.commons.httpclient.auth.AuthScope) -> b
    java.lang.String toString() -> toString
    java.lang.String getCredentialsStringRepresentation(java.util.Map) -> a
    java.lang.String getCookiesStringRepresentation(java.util.List) -> a
    java.lang.Class class$(java.lang.String) -> a
org.apache.commons.httpclient.HttpVersion -> org.apache.a.a.ad:
    int major -> d
    int minor -> e
    org.apache.commons.httpclient.HttpVersion HTTP_0_9 -> a
    org.apache.commons.httpclient.HttpVersion HTTP_1_0 -> b
    org.apache.commons.httpclient.HttpVersion HTTP_1_1 -> c
    int getMajor() -> a
    int getMinor() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(org.apache.commons.httpclient.HttpVersion) -> a
    int compareTo(java.lang.Object) -> compareTo
    boolean equals(org.apache.commons.httpclient.HttpVersion) -> b
    boolean greaterEquals(org.apache.commons.httpclient.HttpVersion) -> c
    boolean lessEquals(org.apache.commons.httpclient.HttpVersion) -> d
    java.lang.String toString() -> toString
    org.apache.commons.httpclient.HttpVersion parse(java.lang.String) -> a
org.apache.commons.httpclient.InvalidRedirectLocationException -> org.apache.a.a.ae:
    java.lang.String location -> b
org.apache.commons.httpclient.MethodRetryHandler -> org.apache.a.a.af:
    boolean retryMethod(org.apache.commons.httpclient.HttpMethod,org.apache.commons.httpclient.HttpConnection,org.apache.commons.httpclient.HttpRecoverableException,int,boolean) -> a
org.apache.commons.httpclient.NTCredentials -> org.apache.a.a.ag:
    java.lang.String domain -> a
    java.lang.String host -> b
    java.lang.String getDomain() -> a
    java.lang.String getHost() -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.httpclient.NameValuePair -> org.apache.a.a.ah:
    java.lang.String name -> a
    java.lang.String value -> b
    void setName(java.lang.String) -> e
    java.lang.String getName() -> k
    void setValue(java.lang.String) -> f
    java.lang.String getValue() -> l
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.httpclient.NoHttpResponseException -> org.apache.a.a.ai:
org.apache.commons.httpclient.ProtocolException -> org.apache.a.a.aj:
org.apache.commons.httpclient.ProxyHost -> org.apache.a.a.ak:
    java.lang.Object clone() -> clone
org.apache.commons.httpclient.RedirectException -> org.apache.a.a.al:
org.apache.commons.httpclient.ResponseConsumedWatcher -> org.apache.a.a.am:
    void responseConsumed() -> a
org.apache.commons.httpclient.SimpleHttpConnectionManager -> org.apache.a.a.an:
    org.apache.commons.logging.Log LOG -> c
    org.apache.commons.httpclient.HttpConnection httpConnection -> a
    org.apache.commons.httpclient.params.HttpConnectionManagerParams params -> d
    long idleStartTime -> e
    boolean inUse -> f
    boolean alwaysClose -> g
    java.lang.Class class$org$apache$commons$httpclient$SimpleHttpConnectionManager -> b
    void finishLastResponse(org.apache.commons.httpclient.HttpConnection) -> b
    org.apache.commons.httpclient.HttpConnection getConnectionWithTimeout(org.apache.commons.httpclient.HostConfiguration,long) -> a
    void releaseConnection(org.apache.commons.httpclient.HttpConnection) -> a
    org.apache.commons.httpclient.params.HttpConnectionManagerParams getParams() -> a
    java.lang.Class class$(java.lang.String) -> a
org.apache.commons.httpclient.StatusLine -> org.apache.a.a.ao:
    java.lang.String statusLine -> a
    java.lang.String httpVersion -> b
    int statusCode -> c
    java.lang.String reasonPhrase -> d
    int getStatusCode() -> a
    java.lang.String getHttpVersion() -> b
    java.lang.String toString() -> toString
    boolean startsWithHTTP(java.lang.String) -> a
org.apache.commons.httpclient.URI -> org.apache.a.a.ap:
    int hash -> a
    char[] _uri -> b
    java.lang.String protocolCharset -> c
    java.lang.String defaultProtocolCharset -> d
    java.lang.String defaultDocumentCharset -> e
    java.lang.String defaultDocumentCharsetByLocale -> f
    java.lang.String defaultDocumentCharsetByPlatform -> g
    char[] _scheme -> h
    char[] _opaque -> i
    char[] _authority -> j
    char[] _userinfo -> k
    char[] _host -> l
    int _port -> m
    char[] _path -> n
    char[] _query -> o
    char[] _fragment -> p
    char[] rootPath -> q
    java.util.BitSet percent -> r
    java.util.BitSet digit -> s
    java.util.BitSet alpha -> t
    java.util.BitSet alphanum -> u
    java.util.BitSet hex -> v
    java.util.BitSet escaped -> w
    java.util.BitSet mark -> x
    java.util.BitSet unreserved -> y
    java.util.BitSet reserved -> z
    java.util.BitSet uric -> A
    java.util.BitSet fragment -> B
    java.util.BitSet query -> C
    java.util.BitSet pchar -> D
    java.util.BitSet param -> E
    java.util.BitSet segment -> F
    java.util.BitSet path_segments -> G
    java.util.BitSet abs_path -> H
    java.util.BitSet uric_no_slash -> I
    java.util.BitSet opaque_part -> J
    java.util.BitSet path -> K
    java.util.BitSet port -> L
    java.util.BitSet IPv4address -> M
    java.util.BitSet IPv6address -> N
    java.util.BitSet IPv6reference -> O
    java.util.BitSet toplabel -> P
    java.util.BitSet domainlabel -> Q
    java.util.BitSet hostname -> R
    java.util.BitSet host -> S
    java.util.BitSet hostport -> T
    java.util.BitSet userinfo -> U
    java.util.BitSet within_userinfo -> V
    java.util.BitSet server -> W
    java.util.BitSet reg_name -> X
    java.util.BitSet authority -> Y
    java.util.BitSet scheme -> Z
    java.util.BitSet rel_segment -> aa
    java.util.BitSet rel_path -> ab
    java.util.BitSet net_path -> ac
    java.util.BitSet hier_part -> ad
    java.util.BitSet relativeURI -> ae
    java.util.BitSet absoluteURI -> af
    java.util.BitSet URI_reference -> ag
    java.util.BitSet control -> ah
    java.util.BitSet space -> ai
    java.util.BitSet delims -> aj
    java.util.BitSet unwise -> ak
    java.util.BitSet disallowed_rel_path -> al
    java.util.BitSet disallowed_opaque_part -> am
    java.util.BitSet allowed_authority -> an
    java.util.BitSet allowed_opaque_part -> ao
    java.util.BitSet allowed_reg_name -> ap
    java.util.BitSet allowed_userinfo -> aq
    java.util.BitSet allowed_within_userinfo -> ar
    java.util.BitSet allowed_IPv6reference -> as
    java.util.BitSet allowed_host -> at
    java.util.BitSet allowed_within_authority -> au
    java.util.BitSet allowed_abs_path -> av
    java.util.BitSet allowed_rel_path -> aw
    java.util.BitSet allowed_within_path -> ax
    java.util.BitSet allowed_query -> ay
    java.util.BitSet allowed_within_query -> az
    java.util.BitSet allowed_fragment -> aA
    boolean _is_hier_part -> aB
    boolean _is_opaque_part -> aC
    boolean _is_net_path -> aD
    boolean _is_abs_path -> aE
    boolean _is_rel_path -> aF
    boolean _is_reg_name -> aG
    boolean _is_server -> aH
    boolean _is_hostname -> aI
    boolean _is_IPv4address -> aJ
    boolean _is_IPv6reference -> aK
    char[] encode(java.lang.String,java.util.BitSet,java.lang.String) -> a
    java.lang.String decode(char[],java.lang.String) -> a
    java.lang.String decode(java.lang.String,java.lang.String) -> a
    boolean prevalidate(java.lang.String,java.util.BitSet) -> a
    boolean validate(char[],java.util.BitSet) -> a
    boolean validate(char[],int,int,java.util.BitSet) -> a
    void parseUriReference(java.lang.String,boolean) -> a
    int indexFirstOf(java.lang.String,java.lang.String,int) -> a
    int indexFirstOf(char[],char) -> a
    int indexFirstOf(char[],char,int) -> a
    void parseAuthority(java.lang.String,boolean) -> b
    void setURI() -> a
    boolean isAbsoluteURI() -> b
    boolean isRelativeURI() -> c
    boolean hasQuery() -> d
    java.lang.String getProtocolCharset() -> e
    java.lang.String getScheme() -> f
    char[] getRawAuthority() -> g
    java.lang.String getHost() -> h
    int getPort() -> i
    void setRawPath(char[]) -> a
    void setPath(java.lang.String) -> a
    char[] resolvePath(char[],char[]) -> a
    char[] getRawPath() -> j
    java.lang.String getEscapedPath() -> k
    java.lang.String getPath() -> l
    void setRawQuery(char[]) -> b
    void setQuery(java.lang.String) -> b
    java.lang.String getEscapedQuery() -> m
    char[] removeFragmentIdentifier(char[]) -> c
    char[] normalize(char[]) -> d
    boolean equals(char[],char[]) -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
    java.lang.Object clone() -> clone
    java.lang.String getEscapedURI() -> n
    java.lang.String toString() -> toString
org.apache.commons.httpclient.URI$LocaleToCharsetMap -> org.apache.a.a.aq:
    java.util.Hashtable LOCALE_TO_CHARSET_MAP -> a
    java.lang.String getCharset(java.util.Locale) -> a
org.apache.commons.httpclient.URIException -> org.apache.a.a.ar:
    int reasonCode -> b
    java.lang.String reason -> c
org.apache.commons.httpclient.UsernamePasswordCredentials -> org.apache.a.a.as:
    java.lang.String userName -> a
    java.lang.String password -> b
    java.lang.String getUserName() -> c
    java.lang.String getPassword() -> d
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
org.apache.commons.httpclient.Wire -> org.apache.a.a.at:
    org.apache.commons.httpclient.Wire HEADER_WIRE -> a
    org.apache.commons.httpclient.Wire CONTENT_WIRE -> b
    org.apache.commons.logging.Log log -> c
    void wire(java.lang.String,java.io.InputStream) -> a
    boolean enabled() -> a
    void output(byte[],int,int) -> a
    void input(byte[],int,int) -> b
    void output(byte[]) -> a
    void input(byte[]) -> b
    void output(int) -> a
    void input(int) -> b
    void output(java.lang.String) -> a
    void input(java.lang.String) -> b
org.apache.commons.httpclient.WireLogInputStream -> org.apache.a.a.au:
    java.io.InputStream in -> a
    org.apache.commons.httpclient.Wire wire -> b
    int read(byte[],int,int) -> read
    int read() -> read
    int read(byte[]) -> read
org.apache.commons.httpclient.WireLogOutputStream -> org.apache.a.a.av:
    java.io.OutputStream out -> a
    org.apache.commons.httpclient.Wire wire -> b
    void write(byte[],int,int) -> write
    void write(int) -> write
    void write(byte[]) -> write
org.apache.commons.httpclient.auth.AuthChallengeException -> org.apache.a.a.a.a:
org.apache.commons.httpclient.auth.AuthChallengeParser -> org.apache.a.a.a.b:
    java.lang.String extractScheme(java.lang.String) -> a
    java.util.Map extractParams(java.lang.String) -> b
    java.util.Map parseChallenges(org.apache.commons.httpclient.Header[]) -> a
org.apache.commons.httpclient.auth.AuthChallengeProcessor -> org.apache.a.a.a.c:
    org.apache.commons.logging.Log LOG -> b
    org.apache.commons.httpclient.params.HttpParams params -> c
    java.lang.Class class$org$apache$commons$httpclient$auth$AuthChallengeProcessor -> a
    org.apache.commons.httpclient.auth.AuthScheme selectAuthScheme(java.util.Map) -> a
    org.apache.commons.httpclient.auth.AuthScheme processChallenge(org.apache.commons.httpclient.auth.AuthState,java.util.Map) -> a
    java.lang.Class class$(java.lang.String) -> a
org.apache.commons.httpclient.auth.AuthPolicy -> org.apache.a.a.a.d:
    java.util.HashMap SCHEMES -> f
    java.util.ArrayList SCHEME_LIST -> g
    org.apache.commons.logging.Log LOG -> a
    java.lang.Class class$org$apache$commons$httpclient$auth$NTLMScheme -> b
    java.lang.Class class$org$apache$commons$httpclient$auth$DigestScheme -> c
    java.lang.Class class$org$apache$commons$httpclient$auth$BasicScheme -> d
    java.lang.Class class$org$apache$commons$httpclient$auth$AuthPolicy -> e
    void registerAuthScheme(java.lang.String,java.lang.Class) -> a
    org.apache.commons.httpclient.auth.AuthScheme getAuthScheme(java.lang.String) -> a
    java.util.List getDefaultAuthPrefs() -> a
    java.lang.Class class$(java.lang.String) -> b
org.apache.commons.httpclient.auth.AuthScheme -> org.apache.a.a.a.e:
    void processChallenge(java.lang.String) -> a
    java.lang.String getSchemeName() -> a
    java.lang.String getRealm() -> b
    boolean isConnectionBased() -> c
    boolean isComplete() -> d
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> a
org.apache.commons.httpclient.auth.AuthScope -> org.apache.a.a.a.f:
    java.lang.String ANY_HOST -> a
    java.lang.String ANY_REALM -> b
    java.lang.String ANY_SCHEME -> c
    org.apache.commons.httpclient.auth.AuthScope ANY -> d
    java.lang.String scheme -> e
    java.lang.String realm -> f
    java.lang.String host -> g
    int port -> h
    java.lang.String getHost() -> a
    int getPort() -> b
    boolean paramsEqual(java.lang.String,java.lang.String) -> a
    boolean paramsEqual(int,int) -> a
    int match(org.apache.commons.httpclient.auth.AuthScope) -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
org.apache.commons.httpclient.auth.AuthState -> org.apache.a.a.a.g:
    org.apache.commons.httpclient.auth.AuthScheme authScheme -> a
    boolean authRequested -> b
    boolean authAttempted -> c
    boolean preemptive -> d
    void invalidate() -> a
    boolean isAuthRequested() -> b
    void setAuthRequested(boolean) -> a
    boolean isAuthAttempted() -> c
    void setAuthAttempted(boolean) -> b
    void setPreemptive() -> d
    boolean isPreemptive() -> e
    void setAuthScheme(org.apache.commons.httpclient.auth.AuthScheme) -> a
    org.apache.commons.httpclient.auth.AuthScheme getAuthScheme() -> f
    java.lang.String toString() -> toString
org.apache.commons.httpclient.auth.AuthenticationException -> org.apache.a.a.a.h:
org.apache.commons.httpclient.auth.BasicScheme -> org.apache.a.a.a.i:
    org.apache.commons.logging.Log LOG -> b
    boolean complete -> c
    java.lang.Class class$org$apache$commons$httpclient$auth$BasicScheme -> a
    java.lang.String getSchemeName() -> a
    void processChallenge(java.lang.String) -> a
    boolean isComplete() -> d
    boolean isConnectionBased() -> c
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> a
    java.lang.String authenticate(org.apache.commons.httpclient.UsernamePasswordCredentials,java.lang.String) -> a
    java.lang.Class class$(java.lang.String) -> b
org.apache.commons.httpclient.auth.CredentialsNotAvailableException -> org.apache.a.a.a.j:
org.apache.commons.httpclient.auth.CredentialsProvider -> org.apache.a.a.a.k:
    org.apache.commons.httpclient.Credentials getCredentials(org.apache.commons.httpclient.auth.AuthScheme,java.lang.String,int,boolean) -> a
org.apache.commons.httpclient.auth.DigestScheme -> org.apache.a.a.a.l:
    org.apache.commons.logging.Log LOG -> b
    char[] HEXADECIMAL -> c
    boolean complete -> d
    int qopVariant -> e
    java.lang.String cnonce -> f
    org.apache.commons.httpclient.util.ParameterFormatter formatter -> g
    java.lang.Class class$org$apache$commons$httpclient$auth$DigestScheme -> a
    void processChallenge(java.lang.String) -> a
    boolean isComplete() -> d
    java.lang.String getSchemeName() -> a
    boolean isConnectionBased() -> c
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> a
    java.lang.String createDigest(java.lang.String,java.lang.String) -> a
    java.lang.String createDigestHeader(java.lang.String,java.lang.String) -> b
    java.lang.String getQopVariantString() -> g
    java.lang.String encode(byte[]) -> a
    java.lang.String createCnonce() -> e
    java.lang.Class class$(java.lang.String) -> b
org.apache.commons.httpclient.auth.InvalidCredentialsException -> org.apache.a.a.a.m:
org.apache.commons.httpclient.auth.MalformedChallengeException -> org.apache.a.a.a.n:
org.apache.commons.httpclient.auth.NTLM -> org.apache.a.a.a.o:
    byte[] currentResponse -> a
    int currentPosition -> b
    java.lang.String credentialCharset -> c
    javax.crypto.Cipher getCipher(byte[]) -> a
    byte[] setupKey(byte[]) -> b
    byte[] encrypt(byte[],byte[]) -> a
    void prepareResponse(int) -> a
    void addByte(byte) -> a
    void addBytes(byte[]) -> c
    java.lang.String getResponse() -> a
    java.lang.String getType1Message(java.lang.String,java.lang.String) -> a
    byte[] parseType2Message(java.lang.String) -> a
    java.lang.String getType3Message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[]) -> a
    byte[] hashPassword(java.lang.String,byte[]) -> a
    void calcResp(byte[],byte[],byte[]) -> a
    byte[] convertShort(int) -> b
    void setCredentialCharset(java.lang.String) -> b
org.apache.commons.httpclient.auth.NTLMScheme -> org.apache.a.a.a.p:
    org.apache.commons.logging.Log LOG -> b
    java.lang.String ntlmchallenge -> c
    int state -> d
    java.lang.Class class$org$apache$commons$httpclient$auth$NTLMScheme -> a
    void processChallenge(java.lang.String) -> a
    boolean isComplete() -> d
    java.lang.String getSchemeName() -> a
    java.lang.String getRealm() -> b
    boolean isConnectionBased() -> c
    java.lang.String authenticate(org.apache.commons.httpclient.Credentials,org.apache.commons.httpclient.HttpMethod) -> a
    java.lang.Class class$(java.lang.String) -> b
org.apache.commons.httpclient.auth.RFC2617Scheme -> org.apache.a.a.a.q:
    java.util.Map params -> a
    void processChallenge(java.lang.String) -> a
    java.util.Map getParameters() -> f
    java.lang.String getParameter(java.lang.String) -> c
    java.lang.String getRealm() -> b
org.apache.commons.httpclient.cookie.Cookie2 -> org.apache.a.a.b.a:
    java.lang.String cookieCommentURL -> b
    int[] cookiePorts -> c
    boolean discard -> d
    boolean hasPortAttribute -> e
    boolean isPortAttributeBlank -> f
    boolean hasVersionAttribute -> g
    void setCommentURL(java.lang.String) -> g
    int[] getPorts() -> m
    void setPorts(int[]) -> a
    void setDiscard(boolean) -> d
    boolean isPersistent() -> b
    void setPortAttributeSpecified(boolean) -> e
    boolean isPortAttributeSpecified() -> n
    void setPortAttributeBlank(boolean) -> f
    boolean isPortAttributeBlank() -> o
    void setVersionAttributeSpecified(boolean) -> g
    boolean isVersionAttributeSpecified() -> p
    java.lang.String toExternalForm() -> j
org.apache.commons.httpclient.cookie.CookieAttributeHandler -> org.apache.a.a.b.b:
    void parse(org.apache.commons.httpclient.Cookie,java.lang.String) -> a
    void validate(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> a
    boolean match(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> b
org.apache.commons.httpclient.cookie.CookieOrigin -> org.apache.a.a.b.c:
    java.lang.String host -> a
    int port -> b
    java.lang.String path -> c
    boolean secure -> d
    java.lang.String getHost() -> a
    java.lang.String getPath() -> b
    int getPort() -> c
    boolean isSecure() -> d
org.apache.commons.httpclient.cookie.CookiePathComparator -> org.apache.a.a.b.d:
    java.lang.String normalizePath(org.apache.commons.httpclient.Cookie) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.commons.httpclient.cookie.CookiePolicy -> org.apache.a.a.b.e:
    java.util.Map SPECS -> h
    int defaultPolicy -> i
    org.apache.commons.logging.Log LOG -> a
    java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2109Spec -> b
    java.lang.Class class$org$apache$commons$httpclient$cookie$RFC2965Spec -> c
    java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpecBase -> d
    java.lang.Class class$org$apache$commons$httpclient$cookie$NetscapeDraftSpec -> e
    java.lang.Class class$org$apache$commons$httpclient$cookie$IgnoreCookiesSpec -> f
    java.lang.Class class$org$apache$commons$httpclient$cookie$CookiePolicy -> g
    void registerCookieSpec(java.lang.String,java.lang.Class) -> a
    org.apache.commons.httpclient.cookie.CookieSpec getCookieSpec(java.lang.String) -> a
    org.apache.commons.httpclient.cookie.CookieSpec getSpecByPolicy(int) -> a
    org.apache.commons.httpclient.cookie.CookieSpec getDefaultSpec() -> a
    java.lang.Class class$(java.lang.String) -> b
org.apache.commons.httpclient.cookie.CookieSpec -> org.apache.a.a.b.f:
    char PATH_DELIM_CHAR -> a
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> a
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Header) -> a
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> a
    void setValidDateFormats(java.util.Collection) -> a
    boolean match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> b
    org.apache.commons.httpclient.Cookie[] match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie[]) -> a
    java.lang.String formatCookie(org.apache.commons.httpclient.Cookie) -> a
    java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) -> a
org.apache.commons.httpclient.cookie.CookieSpecBase -> org.apache.a.a.b.g:
    org.apache.commons.logging.Log LOG -> b
    java.util.Collection datepatterns -> d
    java.lang.Class class$org$apache$commons$httpclient$cookie$CookieSpec -> c
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> a
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Header) -> a
    void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie) -> a
    void setValidDateFormats(java.util.Collection) -> a
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> a
    boolean match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> b
    boolean domainMatch(java.lang.String,java.lang.String) -> a
    boolean pathMatch(java.lang.String,java.lang.String) -> b
    org.apache.commons.httpclient.Cookie[] match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie[]) -> a
    void addInPathOrder(java.util.List,org.apache.commons.httpclient.Cookie) -> a
    java.lang.String formatCookie(org.apache.commons.httpclient.Cookie) -> a
    java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) -> a
    java.lang.Class class$(java.lang.String) -> a
org.apache.commons.httpclient.cookie.CookieVersionSupport -> org.apache.a.a.b.h:
    int getVersion() -> a
    org.apache.commons.httpclient.Header getVersionHeader() -> b
org.apache.commons.httpclient.cookie.IgnoreCookiesSpec -> org.apache.a.a.b.i:
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> a
    void setValidDateFormats(java.util.Collection) -> a
    java.lang.String formatCookie(org.apache.commons.httpclient.Cookie) -> a
    java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) -> a
    boolean match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> b
    org.apache.commons.httpclient.Cookie[] match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie[]) -> a
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Header) -> a
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> a
org.apache.commons.httpclient.cookie.MalformedCookieException -> org.apache.a.a.b.j:
org.apache.commons.httpclient.cookie.NetscapeDraftSpec -> org.apache.a.a.b.k:
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> a
    void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie) -> a
    boolean domainMatch(java.lang.String,java.lang.String) -> a
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> a
    boolean isSpecialDomain(java.lang.String) -> b
org.apache.commons.httpclient.cookie.RFC2109Spec -> org.apache.a.a.b.l:
    org.apache.commons.httpclient.util.ParameterFormatter formatter -> d
    void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie) -> a
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> a
    boolean domainMatch(java.lang.String,java.lang.String) -> a
    void formatParam(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair,int) -> a
    void formatCookieAsVer(java.lang.StringBuffer,org.apache.commons.httpclient.Cookie,int) -> a
    java.lang.String formatCookie(org.apache.commons.httpclient.Cookie) -> a
    java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) -> a
org.apache.commons.httpclient.cookie.RFC2965Spec -> org.apache.a.a.b.m:
    java.util.Comparator PATH_COMPOARATOR -> d
    org.apache.commons.httpclient.util.ParameterFormatter formatter -> e
    java.util.List attribHandlerList -> f
    java.util.Map attribHandlerMap -> g
    org.apache.commons.httpclient.cookie.CookieSpec rfc2109 -> h
    void registerAttribHandler(java.lang.String,org.apache.commons.httpclient.cookie.CookieAttributeHandler) -> a
    org.apache.commons.httpclient.cookie.CookieAttributeHandler findAttribHandler(java.lang.String) -> b
    java.util.Iterator getAttribHandlerIterator() -> c
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Header) -> a
    org.apache.commons.httpclient.Cookie[] parse(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> a
    void parseAttribute(org.apache.commons.httpclient.NameValuePair,org.apache.commons.httpclient.Cookie) -> a
    void validate(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> a
    boolean match(java.lang.String,int,java.lang.String,boolean,org.apache.commons.httpclient.Cookie) -> b
    void doFormatCookie2(org.apache.commons.httpclient.cookie.Cookie2,java.lang.StringBuffer) -> a
    java.lang.String formatCookie(org.apache.commons.httpclient.Cookie) -> a
    java.lang.String formatCookies(org.apache.commons.httpclient.Cookie[]) -> a
    java.lang.String createPortAttribute(int[]) -> a
    int[] parsePortAttribute(java.lang.String) -> c
    java.lang.String getEffectiveHost(java.lang.String) -> d
    boolean domainMatch(java.lang.String,java.lang.String) -> a
    boolean portMatch(int,int[]) -> a
    int getVersion() -> a
    org.apache.commons.httpclient.Header getVersionHeader() -> b
    int[] access$900(org.apache.commons.httpclient.cookie.RFC2965Spec,java.lang.String) -> a
    boolean access$1000(org.apache.commons.httpclient.cookie.RFC2965Spec,int,int[]) -> a
org.apache.commons.httpclient.cookie.RFC2965Spec$1 -> org.apache.a.a.b.n:
org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2DomainAttributeHandler -> org.apache.a.a.b.o:
    org.apache.commons.httpclient.cookie.RFC2965Spec this$0 -> a
    void parse(org.apache.commons.httpclient.Cookie,java.lang.String) -> a
    void validate(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> a
    boolean match(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> b
org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2MaxageAttributeHandler -> org.apache.a.a.b.p:
    org.apache.commons.httpclient.cookie.RFC2965Spec this$0 -> a
    void parse(org.apache.commons.httpclient.Cookie,java.lang.String) -> a
    void validate(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> a
    boolean match(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> b
org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2PathAttributeHandler -> org.apache.a.a.b.q:
    org.apache.commons.httpclient.cookie.RFC2965Spec this$0 -> a
    void parse(org.apache.commons.httpclient.Cookie,java.lang.String) -> a
    void validate(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> a
    boolean match(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> b
org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2PortAttributeHandler -> org.apache.a.a.b.r:
    org.apache.commons.httpclient.cookie.RFC2965Spec this$0 -> a
    void parse(org.apache.commons.httpclient.Cookie,java.lang.String) -> a
    void validate(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> a
    boolean match(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> b
org.apache.commons.httpclient.cookie.RFC2965Spec$Cookie2VersionAttributeHandler -> org.apache.a.a.b.s:
    org.apache.commons.httpclient.cookie.RFC2965Spec this$0 -> a
    void parse(org.apache.commons.httpclient.Cookie,java.lang.String) -> a
    void validate(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> a
    boolean match(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> b
org.apache.commons.httpclient.cookie.RFC2965Spec$CookieCommentAttributeHandler -> org.apache.a.a.b.t:
    org.apache.commons.httpclient.cookie.RFC2965Spec this$0 -> a
    void parse(org.apache.commons.httpclient.Cookie,java.lang.String) -> a
    void validate(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> a
    boolean match(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> b
org.apache.commons.httpclient.cookie.RFC2965Spec$CookieCommentUrlAttributeHandler -> org.apache.a.a.b.u:
    org.apache.commons.httpclient.cookie.RFC2965Spec this$0 -> a
    void parse(org.apache.commons.httpclient.Cookie,java.lang.String) -> a
    void validate(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> a
    boolean match(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> b
org.apache.commons.httpclient.cookie.RFC2965Spec$CookieDiscardAttributeHandler -> org.apache.a.a.b.v:
    org.apache.commons.httpclient.cookie.RFC2965Spec this$0 -> a
    void parse(org.apache.commons.httpclient.Cookie,java.lang.String) -> a
    void validate(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> a
    boolean match(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> b
org.apache.commons.httpclient.cookie.RFC2965Spec$CookieSecureAttributeHandler -> org.apache.a.a.b.w:
    org.apache.commons.httpclient.cookie.RFC2965Spec this$0 -> a
    void parse(org.apache.commons.httpclient.Cookie,java.lang.String) -> a
    void validate(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> a
    boolean match(org.apache.commons.httpclient.Cookie,org.apache.commons.httpclient.cookie.CookieOrigin) -> b
org.apache.commons.httpclient.methods.ByteArrayRequestEntity -> org.apache.a.a.c.a:
    byte[] content -> a
    java.lang.String contentType -> b
    boolean isRepeatable() -> a
    java.lang.String getContentType() -> b
    void writeRequest(java.io.OutputStream) -> a
    long getContentLength() -> c
org.apache.commons.httpclient.methods.EntityEnclosingMethod -> org.apache.a.a.c.b:
    org.apache.commons.logging.Log LOG -> f
    java.io.InputStream requestStream -> g
    java.lang.String requestString -> h
    org.apache.commons.httpclient.methods.RequestEntity requestEntity -> i
    int repeatCount -> j
    long requestContentLength -> k
    boolean chunked -> l
    java.lang.Class class$org$apache$commons$httpclient$methods$EntityEnclosingMethod -> a
    boolean hasRequestContent() -> C
    void clearRequestBody() -> D
    byte[] generateRequestBody() -> E
    org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity() -> F
    boolean getFollowRedirects() -> d
    void setFollowRedirects(boolean) -> a
    java.lang.String getRequestCharSet() -> x
    long getRequestContentLength() -> G
    void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> b
    void addContentLengthRequestHeader(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> r
    void setRequestBody(java.lang.String) -> a
    boolean writeRequestBody(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> p
    org.apache.commons.httpclient.methods.RequestEntity getRequestEntity() -> H
    java.lang.Class class$(java.lang.String) -> j
org.apache.commons.httpclient.methods.ExpectContinueMethod -> org.apache.a.a.c.c:
    org.apache.commons.logging.Log LOG -> a
    java.lang.Class class$org$apache$commons$httpclient$methods$ExpectContinueMethod -> e
    boolean hasRequestContent() -> C
    void addRequestHeaders(org.apache.commons.httpclient.HttpState,org.apache.commons.httpclient.HttpConnection) -> b
    java.lang.Class class$(java.lang.String) -> k
org.apache.commons.httpclient.methods.InputStreamRequestEntity -> org.apache.a.a.c.d:
    org.apache.commons.logging.Log LOG -> b
    long contentLength -> c
    java.io.InputStream content -> d
    byte[] buffer -> e
    java.lang.String contentType -> f
    java.lang.Class class$org$apache$commons$httpclient$methods$InputStreamRequestEntity -> a
    java.lang.String getContentType() -> b
    void bufferContent() -> d
    boolean isRepeatable() -> a
    void writeRequest(java.io.OutputStream) -> a
    long getContentLength() -> c
    java.lang.Class class$(java.lang.String) -> a
org.apache.commons.httpclient.methods.PostMethod -> org.apache.a.a.c.e:
    org.apache.commons.logging.Log LOG -> g
    java.util.Vector params -> h
    java.lang.Class class$org$apache$commons$httpclient$methods$PostMethod -> f
    java.lang.String getName() -> a
    boolean hasRequestContent() -> C
    void clearRequestBody() -> D
    org.apache.commons.httpclient.methods.RequestEntity generateRequestEntity() -> F
    org.apache.commons.httpclient.NameValuePair[] getParameters() -> I
    void addParameters(org.apache.commons.httpclient.NameValuePair[]) -> a
    void setRequestBody(org.apache.commons.httpclient.NameValuePair[]) -> b
    java.lang.Class class$(java.lang.String) -> l
org.apache.commons.httpclient.methods.RequestEntity -> org.apache.a.a.c.f:
    boolean isRepeatable() -> a
    void writeRequest(java.io.OutputStream) -> a
    long getContentLength() -> c
    java.lang.String getContentType() -> b
org.apache.commons.httpclient.methods.StringRequestEntity -> org.apache.a.a.c.g:
    byte[] content -> a
    java.lang.String charset -> b
    java.lang.String contentType -> c
    java.lang.String getContentType() -> b
    boolean isRepeatable() -> a
    void writeRequest(java.io.OutputStream) -> a
    long getContentLength() -> c
org.apache.commons.httpclient.params.DefaultHttpParams -> org.apache.a.a.d.a:
    org.apache.commons.logging.Log LOG -> b
    org.apache.commons.httpclient.params.HttpParamsFactory httpParamsFactory -> c
    org.apache.commons.httpclient.params.HttpParams defaults -> d
    java.util.HashMap parameters -> e
    java.lang.Class class$org$apache$commons$httpclient$params$DefaultHttpParams -> a
    org.apache.commons.httpclient.params.HttpParams getDefaultParams() -> a
    void setDefaults(org.apache.commons.httpclient.params.HttpParams) -> a
    java.lang.Object getParameter(java.lang.String) -> a
    void setParameter(java.lang.String,java.lang.Object) -> a
    long getLongParameter(java.lang.String,long) -> a
    int getIntParameter(java.lang.String,int) -> a
    void setIntParameter(java.lang.String,int) -> b
    boolean getBooleanParameter(java.lang.String,boolean) -> a
    boolean isParameterTrue(java.lang.String) -> b
    boolean isParameterFalse(java.lang.String) -> c
    java.lang.Object clone() -> clone
    java.lang.Class class$(java.lang.String) -> d
org.apache.commons.httpclient.params.DefaultHttpParamsFactory -> org.apache.a.a.d.b:
    org.apache.commons.httpclient.params.HttpParams httpParams -> b
    java.lang.Class class$org$apache$commons$httpclient$SimpleHttpConnectionManager -> a
    org.apache.commons.httpclient.params.HttpParams getDefaultParams() -> a
    org.apache.commons.httpclient.params.HttpParams createParams() -> b
    java.lang.Class class$(java.lang.String) -> a
org.apache.commons.httpclient.params.HostParams -> org.apache.a.a.d.c:
org.apache.commons.httpclient.params.HttpClientParams -> org.apache.a.a.d.d:
    java.lang.String[] PROTOCOL_STRICTNESS_PARAMETERS -> c
    long getConnectionManagerTimeout() -> b
    java.lang.Class getConnectionManagerClass() -> c
    void setConnectionManagerClass(java.lang.Class) -> a
    boolean isAuthenticationPreemptive() -> d
org.apache.commons.httpclient.params.HttpConnectionManagerParams -> org.apache.a.a.d.e:
org.apache.commons.httpclient.params.HttpConnectionParams -> org.apache.a.a.d.f:
    int getSoTimeout() -> b
    void setSoTimeout(int) -> a
    boolean getTcpNoDelay() -> c
    int getSendBufferSize() -> d
    int getReceiveBufferSize() -> e
    int getLinger() -> f
    int getConnectionTimeout() -> g
    void setConnectionTimeout(int) -> b
    boolean isStaleCheckingEnabled() -> h
org.apache.commons.httpclient.params.HttpMethodParams -> org.apache.a.a.d.g:
    org.apache.commons.logging.Log LOG -> c
    java.lang.String[] PROTOCOL_STRICTNESS_PARAMETERS -> d
    java.lang.Class class$org$apache$commons$httpclient$params$HttpMethodParams -> b
    java.lang.String getHttpElementCharset() -> e
    void setHttpElementCharset(java.lang.String) -> e
    java.lang.String getContentCharset() -> f
    java.lang.String getUriCharset() -> g
    void setContentCharset(java.lang.String) -> f
    java.lang.String getCredentialCharset() -> h
    org.apache.commons.httpclient.HttpVersion getVersion() -> i
    void setVersion(org.apache.commons.httpclient.HttpVersion) -> a
    java.lang.String getCookiePolicy() -> j
    void setCookiePolicy(java.lang.String) -> g
    java.lang.String getVirtualHost() -> k
    java.lang.Class class$(java.lang.String) -> h
org.apache.commons.httpclient.params.HttpParams -> org.apache.a.a.d.h:
    java.lang.Object getParameter(java.lang.String) -> a
org.apache.commons.httpclient.params.HttpParamsFactory -> org.apache.a.a.d.i:
    org.apache.commons.httpclient.params.HttpParams getDefaultParams() -> a
org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory -> org.apache.a.a.e.a:
    java.net.Socket createSocket(org.apache.commons.httpclient.protocol.ProtocolSocketFactory,java.lang.String,int,java.net.InetAddress,int,int) -> a
org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$1 -> org.apache.a.a.e.b:
    org.apache.commons.httpclient.protocol.ProtocolSocketFactory val$socketfactory -> a
    java.lang.String val$host -> b
    int val$port -> c
    java.net.InetAddress val$localAddress -> d
    int val$localPort -> e
    void doit() -> a
org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask -> org.apache.a.a.e.c:
    java.net.Socket socket -> a
    java.io.IOException exception -> b
    void setSocket(java.net.Socket) -> a
    java.net.Socket getSocket() -> b
    void doit() -> a
    void run() -> run
    java.io.IOException access$000(org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask) -> a
org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory -> org.apache.a.a.e.d:
    org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory factory -> a
    org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory getSocketFactory() -> a
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> a
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.httpclient.protocol.Protocol -> org.apache.a.a.e.e:
    java.util.Map PROTOCOLS -> a
    java.lang.String scheme -> b
    org.apache.commons.httpclient.protocol.ProtocolSocketFactory socketFactory -> c
    int defaultPort -> d
    boolean secure -> e
    void registerProtocol(java.lang.String,org.apache.commons.httpclient.protocol.Protocol) -> a
    org.apache.commons.httpclient.protocol.Protocol getProtocol(java.lang.String) -> a
    org.apache.commons.httpclient.protocol.Protocol lazyRegisterProtocol(java.lang.String) -> b
    int getDefaultPort() -> a
    org.apache.commons.httpclient.protocol.ProtocolSocketFactory getSocketFactory() -> b
    java.lang.String getScheme() -> c
    boolean isSecure() -> d
    int resolvePort(int) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.httpclient.protocol.ProtocolSocketFactory -> org.apache.a.a.e.f:
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> a
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams) -> a
org.apache.commons.httpclient.protocol.ReflectionSocketFactory -> org.apache.a.a.e.g:
    boolean REFLECTION_FAILED -> c
    java.lang.reflect.Constructor INETSOCKETADDRESS_CONSTRUCTOR -> d
    java.lang.reflect.Method SOCKETCONNECT_METHOD -> e
    java.lang.reflect.Method SOCKETBIND_METHOD -> f
    java.lang.Class SOCKETTIMEOUTEXCEPTION_CLASS -> g
    java.lang.Class class$java$net$InetAddress -> a
    java.lang.Class class$java$net$Socket -> b
    java.net.Socket createSocket(java.lang.String,java.lang.String,int,java.net.InetAddress,int,int) -> a
    java.lang.Class class$(java.lang.String) -> a
org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory -> org.apache.a.a.e.h:
    org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory factory -> a
    org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory getSocketFactory() -> a
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int) -> a
    java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams) -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.commons.httpclient.protocol.SecureProtocolSocketFactory -> org.apache.a.a.e.i:
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> a
org.apache.commons.httpclient.util.DateParseException -> org.apache.a.a.f.a:
org.apache.commons.httpclient.util.DateUtil -> org.apache.a.a.f.b:
    java.util.Collection DEFAULT_PATTERNS -> a
    java.util.Date DEFAULT_TWO_DIGIT_YEAR_START -> b
    java.util.TimeZone GMT -> c
    java.util.Date parseDate(java.lang.String,java.util.Collection) -> a
    java.util.Date parseDate(java.lang.String,java.util.Collection,java.util.Date) -> a
org.apache.commons.httpclient.util.EncodingUtil -> org.apache.a.a.f.c:
    org.apache.commons.logging.Log LOG -> b
    java.lang.Class class$org$apache$commons$httpclient$util$EncodingUtil -> a
    java.lang.String formUrlEncode(org.apache.commons.httpclient.NameValuePair[],java.lang.String) -> a
    java.lang.String doFormUrlEncode(org.apache.commons.httpclient.NameValuePair[],java.lang.String) -> b
    java.lang.String getString(byte[],int,int,java.lang.String) -> a
    java.lang.String getString(byte[],java.lang.String) -> a
    byte[] getBytes(java.lang.String,java.lang.String) -> a
    byte[] getAsciiBytes(java.lang.String) -> a
    java.lang.String getAsciiString(byte[],int,int) -> a
    java.lang.String getAsciiString(byte[]) -> a
    java.lang.Class class$(java.lang.String) -> b
org.apache.commons.httpclient.util.ExceptionUtil -> org.apache.a.a.f.d:
    org.apache.commons.logging.Log LOG -> c
    java.lang.reflect.Method INIT_CAUSE_METHOD -> d
    java.lang.Class SOCKET_TIMEOUT_CLASS -> e
    java.lang.Class class$org$apache$commons$httpclient$util$ExceptionUtil -> a
    java.lang.Class class$java$lang$Throwable -> b
    java.lang.reflect.Method getInitCauseMethod() -> a
    java.lang.Class SocketTimeoutExceptionClass() -> b
    void initCause(java.lang.Throwable,java.lang.Throwable) -> a
    boolean isSocketTimeoutException(java.io.InterruptedIOException) -> a
    java.lang.Class class$(java.lang.String) -> a
org.apache.commons.httpclient.util.LangUtils -> org.apache.a.a.f.e:
    int hashCode(int,int) -> a
    int hashCode(int,java.lang.Object) -> a
    int hashCode(int,boolean) -> a
    boolean equals(java.lang.Object,java.lang.Object) -> a
org.apache.commons.httpclient.util.ParameterFormatter -> org.apache.a.a.f.f:
    char[] SEPARATORS -> a
    char[] UNSAFE_CHARS -> b
    boolean alwaysUseQuotes -> c
    boolean isOneOf(char[],char) -> a
    boolean isUnsafeChar(char) -> a
    boolean isSeparator(char) -> b
    void setAlwaysUseQuotes(boolean) -> a
    void formatValue(java.lang.StringBuffer,java.lang.String,boolean) -> a
    void format(java.lang.StringBuffer,org.apache.commons.httpclient.NameValuePair) -> a
org.apache.commons.httpclient.util.ParameterParser -> org.apache.a.a.f.g:
    char[] chars -> a
    int pos -> b
    int len -> c
    int i1 -> d
    int i2 -> e
    boolean hasChar() -> a
    java.lang.String getToken(boolean) -> a
    boolean isOneOf(char,char[]) -> a
    java.lang.String parseToken(char[]) -> a
    java.lang.String parseQuotedToken(char[]) -> b
    java.util.List parse(java.lang.String,char) -> a
    java.util.List parse(char[],char) -> a
    java.util.List parse(char[],int,int,char) -> a
org.apache.commons.httpclient.util.TimeoutController -> org.apache.a.a.f.h:
    void execute(java.lang.Thread,long) -> a
    void execute(java.lang.Runnable,long) -> a
org.apache.commons.httpclient.util.TimeoutController$TimeoutException -> org.apache.a.a.f.i:
org.apache.http.auth.AUTH -> org.apache.http.auth.AUTH:
    java.lang.String WWW_AUTH -> WWW_AUTH
    java.lang.String WWW_AUTH_RESP -> WWW_AUTH_RESP
    java.lang.String PROXY_AUTH -> PROXY_AUTH
    java.lang.String PROXY_AUTH_RESP -> PROXY_AUTH_RESP
org.apache.http.auth.AuthOption -> org.apache.http.auth.AuthOption:
    org.apache.http.auth.AuthScheme authScheme -> authScheme
    org.apache.http.auth.Credentials creds -> creds
    org.apache.http.auth.AuthScheme getAuthScheme() -> getAuthScheme
    org.apache.http.auth.Credentials getCredentials() -> getCredentials
    java.lang.String toString() -> toString
org.apache.http.auth.AuthProtocolState -> org.apache.http.auth.AuthProtocolState:
    org.apache.http.auth.AuthProtocolState UNCHALLENGED -> UNCHALLENGED
    org.apache.http.auth.AuthProtocolState CHALLENGED -> CHALLENGED
    org.apache.http.auth.AuthProtocolState HANDSHAKE -> HANDSHAKE
    org.apache.http.auth.AuthProtocolState FAILURE -> FAILURE
    org.apache.http.auth.AuthProtocolState SUCCESS -> SUCCESS
    org.apache.http.auth.AuthProtocolState[] $VALUES -> $VALUES
    org.apache.http.auth.AuthProtocolState[] values() -> values
    org.apache.http.auth.AuthProtocolState valueOf(java.lang.String) -> valueOf
org.apache.http.auth.AuthScheme -> org.apache.http.auth.AuthScheme:
    void processChallenge(org.apache.http.Header) -> processChallenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    boolean isComplete() -> isComplete
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
org.apache.http.auth.AuthSchemeFactory -> org.apache.http.auth.AuthSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.auth.AuthSchemeRegistry -> org.apache.http.auth.AuthSchemeRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSchemes -> registeredSchemes
    void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory) -> register
    void unregister(java.lang.String) -> unregister
    org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams) -> getAuthScheme
    java.util.List getSchemeNames() -> getSchemeNames
    void setItems(java.util.Map) -> setItems
org.apache.http.auth.AuthScope -> org.apache.http.auth.AuthScope:
    java.lang.String ANY_HOST -> ANY_HOST
    int ANY_PORT -> ANY_PORT
    java.lang.String ANY_REALM -> ANY_REALM
    java.lang.String ANY_SCHEME -> ANY_SCHEME
    org.apache.http.auth.AuthScope ANY -> ANY
    java.lang.String scheme -> scheme
    java.lang.String realm -> realm
    java.lang.String host -> host
    int port -> port
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getRealm() -> getRealm
    java.lang.String getScheme() -> getScheme
    int match(org.apache.http.auth.AuthScope) -> match
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
org.apache.http.auth.AuthState -> org.apache.http.auth.AuthState:
    org.apache.http.auth.AuthProtocolState state -> state
    org.apache.http.auth.AuthScheme authScheme -> authScheme
    org.apache.http.auth.AuthScope authScope -> authScope
    org.apache.http.auth.Credentials credentials -> credentials
    java.util.Queue authOptions -> authOptions
    void reset() -> reset
    org.apache.http.auth.AuthProtocolState getState() -> getState
    void setState(org.apache.http.auth.AuthProtocolState) -> setState
    org.apache.http.auth.AuthScheme getAuthScheme() -> getAuthScheme
    org.apache.http.auth.Credentials getCredentials() -> getCredentials
    void update(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials) -> update
    java.util.Queue getAuthOptions() -> getAuthOptions
    boolean hasAuthOptions() -> hasAuthOptions
    void update(java.util.Queue) -> update
    void invalidate() -> invalidate
    boolean isValid() -> isValid
    void setAuthScheme(org.apache.http.auth.AuthScheme) -> setAuthScheme
    void setCredentials(org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.AuthScope getAuthScope() -> getAuthScope
    void setAuthScope(org.apache.http.auth.AuthScope) -> setAuthScope
    java.lang.String toString() -> toString
org.apache.http.auth.AuthenticationException -> org.apache.http.auth.AuthenticationException:
    long serialVersionUID -> serialVersionUID
org.apache.http.auth.BasicUserPrincipal -> org.apache.http.auth.BasicUserPrincipal:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    java.lang.String getName() -> getName
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.ChallengeState -> org.apache.http.auth.ChallengeState:
    org.apache.http.auth.ChallengeState TARGET -> TARGET
    org.apache.http.auth.ChallengeState PROXY -> PROXY
    org.apache.http.auth.ChallengeState[] $VALUES -> $VALUES
    org.apache.http.auth.ChallengeState[] values() -> values
    org.apache.http.auth.ChallengeState valueOf(java.lang.String) -> valueOf
org.apache.http.auth.ContextAwareAuthScheme -> org.apache.http.auth.ContextAwareAuthScheme:
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
org.apache.http.auth.Credentials -> org.apache.http.auth.Credentials:
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getPassword() -> getPassword
org.apache.http.auth.InvalidCredentialsException -> org.apache.http.auth.InvalidCredentialsException:
    long serialVersionUID -> serialVersionUID
org.apache.http.auth.MalformedChallengeException -> org.apache.http.auth.MalformedChallengeException:
    long serialVersionUID -> serialVersionUID
org.apache.http.auth.NTCredentials -> org.apache.http.auth.NTCredentials:
    long serialVersionUID -> serialVersionUID
    org.apache.http.auth.NTUserPrincipal principal -> principal
    java.lang.String password -> password
    java.lang.String workstation -> workstation
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
    java.lang.String getDomain() -> getDomain
    java.lang.String getWorkstation() -> getWorkstation
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.NTUserPrincipal -> org.apache.http.auth.NTUserPrincipal:
    long serialVersionUID -> serialVersionUID
    java.lang.String username -> username
    java.lang.String domain -> domain
    java.lang.String ntname -> ntname
    java.lang.String getName() -> getName
    java.lang.String getDomain() -> getDomain
    java.lang.String getUsername() -> getUsername
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.UsernamePasswordCredentials -> org.apache.http.auth.UsernamePasswordCredentials:
    long serialVersionUID -> serialVersionUID
    org.apache.http.auth.BasicUserPrincipal principal -> principal
    java.lang.String password -> password
    java.security.Principal getUserPrincipal() -> getUserPrincipal
    java.lang.String getUserName() -> getUserName
    java.lang.String getPassword() -> getPassword
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
org.apache.http.auth.params.AuthPNames -> org.apache.http.auth.params.AuthPNames:
    java.lang.String CREDENTIAL_CHARSET -> CREDENTIAL_CHARSET
    java.lang.String TARGET_AUTH_PREF -> TARGET_AUTH_PREF
    java.lang.String PROXY_AUTH_PREF -> PROXY_AUTH_PREF
org.apache.http.auth.params.AuthParamBean -> org.apache.http.auth.params.AuthParamBean:
    void setCredentialCharset(java.lang.String) -> setCredentialCharset
org.apache.http.auth.params.AuthParams -> org.apache.http.auth.params.AuthParams:
    java.lang.String getCredentialCharset(org.apache.http.params.HttpParams) -> getCredentialCharset
    void setCredentialCharset(org.apache.http.params.HttpParams,java.lang.String) -> setCredentialCharset
org.apache.http.client.AuthCache -> org.apache.http.client.AuthCache:
    void put(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> put
    org.apache.http.auth.AuthScheme get(org.apache.http.HttpHost) -> get
    void remove(org.apache.http.HttpHost) -> remove
    void clear() -> clear
org.apache.http.client.AuthenticationHandler -> org.apache.http.client.AuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> selectScheme
org.apache.http.client.AuthenticationStrategy -> org.apache.http.client.AuthenticationStrategy:
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
org.apache.http.client.BackoffManager -> org.apache.http.client.BackoffManager:
    void backOff(org.apache.http.conn.routing.HttpRoute) -> backOff
    void probe(org.apache.http.conn.routing.HttpRoute) -> probe
org.apache.http.client.CircularRedirectException -> org.apache.http.client.CircularRedirectException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.ClientProtocolException -> org.apache.http.client.ClientProtocolException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.ConnectionBackoffStrategy -> org.apache.http.client.ConnectionBackoffStrategy:
    boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    boolean shouldBackoff(org.apache.http.HttpResponse) -> shouldBackoff
org.apache.http.client.CookieStore -> org.apache.http.client.CookieStore:
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
org.apache.http.client.CredentialsProvider -> org.apache.http.client.CredentialsProvider:
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    void clear() -> clear
org.apache.http.client.HttpClient -> org.apache.http.client.HttpClient:
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.client.HttpRequestRetryHandler -> org.apache.http.client.HttpRequestRetryHandler:
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
org.apache.http.client.HttpResponseException -> org.apache.http.client.HttpResponseException:
    long serialVersionUID -> serialVersionUID
    int statusCode -> statusCode
    int getStatusCode() -> getStatusCode
org.apache.http.client.NonRepeatableRequestException -> org.apache.http.client.NonRepeatableRequestException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.RedirectException -> org.apache.http.client.RedirectException:
    long serialVersionUID -> serialVersionUID
org.apache.http.client.RedirectHandler -> org.apache.http.client.RedirectHandler:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
org.apache.http.client.RedirectStrategy -> org.apache.http.client.RedirectStrategy:
    boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
org.apache.http.client.RequestDirector -> org.apache.http.client.RequestDirector:
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.client.ResponseHandler -> org.apache.http.client.ResponseHandler:
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.apache.http.client.ServiceUnavailableRetryStrategy -> org.apache.http.client.ServiceUnavailableRetryStrategy:
    boolean retryRequest(org.apache.http.HttpResponse,int,org.apache.http.protocol.HttpContext) -> retryRequest
    long getRetryInterval() -> getRetryInterval
org.apache.http.client.UserTokenHandler -> org.apache.http.client.UserTokenHandler:
    java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
org.apache.http.client.entity.DecompressingEntity -> org.apache.http.client.entity.a:
    int BUFFER_SIZE -> BUFFER_SIZE
    java.io.InputStream content -> content
    java.io.InputStream getDecompressingInputStream(java.io.InputStream) -> getDecompressingInputStream
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.client.entity.DeflateDecompressingEntity -> org.apache.http.client.entity.DeflateDecompressingEntity:
    java.io.InputStream getDecompressingInputStream(java.io.InputStream) -> getDecompressingInputStream
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
org.apache.http.client.entity.GzipDecompressingEntity -> org.apache.http.client.entity.GzipDecompressingEntity:
    java.io.InputStream getDecompressingInputStream(java.io.InputStream) -> getDecompressingInputStream
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
org.apache.http.client.entity.UrlEncodedFormEntity -> org.apache.http.client.entity.UrlEncodedFormEntity:
org.apache.http.client.methods.AbortableHttpRequest -> org.apache.http.client.methods.AbortableHttpRequest:
    void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) -> setConnectionRequest
    void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    void abort() -> abort
org.apache.http.client.methods.HttpDelete -> org.apache.http.client.methods.HttpDelete:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpEntityEnclosingRequestBase -> org.apache.http.client.methods.HttpEntityEnclosingRequestBase:
    org.apache.http.HttpEntity entity -> entity
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    java.lang.Object clone() -> clone
org.apache.http.client.methods.HttpGet -> org.apache.http.client.methods.HttpGet:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpHead -> org.apache.http.client.methods.HttpHead:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpOptions -> org.apache.http.client.methods.HttpOptions:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
    java.util.Set getAllowedMethods(org.apache.http.HttpResponse) -> getAllowedMethods
org.apache.http.client.methods.HttpPatch -> org.apache.http.client.methods.HttpPatch:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpPost -> org.apache.http.client.methods.HttpPost:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpPut -> org.apache.http.client.methods.HttpPut:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpRequestBase -> org.apache.http.client.methods.HttpRequestBase:
    java.util.concurrent.locks.Lock abortLock -> abortLock
    boolean aborted -> aborted
    java.net.URI uri -> uri
    org.apache.http.conn.ClientConnectionRequest connRequest -> connRequest
    org.apache.http.conn.ConnectionReleaseTrigger releaseTrigger -> releaseTrigger
    java.lang.String getMethod() -> getMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    java.net.URI getURI() -> getURI
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    void setURI(java.net.URI) -> setURI
    void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest) -> setConnectionRequest
    void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger) -> setReleaseTrigger
    void cleanup() -> cleanup
    void abort() -> abort
    boolean isAborted() -> isAborted
    void reset() -> reset
    void releaseConnection() -> releaseConnection
    java.lang.Object clone() -> clone
org.apache.http.client.methods.HttpTrace -> org.apache.http.client.methods.HttpTrace:
    java.lang.String METHOD_NAME -> METHOD_NAME
    java.lang.String getMethod() -> getMethod
org.apache.http.client.methods.HttpUriRequest -> org.apache.http.client.methods.HttpUriRequest:
    java.lang.String getMethod() -> getMethod
    java.net.URI getURI() -> getURI
    void abort() -> abort
    boolean isAborted() -> isAborted
org.apache.http.client.params.AllClientPNames -> org.apache.http.client.params.AllClientPNames:
org.apache.http.client.params.AuthPolicy -> org.apache.http.client.params.AuthPolicy:
    java.lang.String NTLM -> NTLM
    java.lang.String DIGEST -> DIGEST
    java.lang.String BASIC -> BASIC
    java.lang.String SPNEGO -> SPNEGO
    java.lang.String KERBEROS -> KERBEROS
org.apache.http.client.params.ClientPNames -> org.apache.http.client.params.ClientPNames:
    java.lang.String CONNECTION_MANAGER_FACTORY_CLASS_NAME -> CONNECTION_MANAGER_FACTORY_CLASS_NAME
    java.lang.String HANDLE_REDIRECTS -> HANDLE_REDIRECTS
    java.lang.String REJECT_RELATIVE_REDIRECT -> REJECT_RELATIVE_REDIRECT
    java.lang.String MAX_REDIRECTS -> MAX_REDIRECTS
    java.lang.String ALLOW_CIRCULAR_REDIRECTS -> ALLOW_CIRCULAR_REDIRECTS
    java.lang.String HANDLE_AUTHENTICATION -> HANDLE_AUTHENTICATION
    java.lang.String COOKIE_POLICY -> COOKIE_POLICY
    java.lang.String VIRTUAL_HOST -> VIRTUAL_HOST
    java.lang.String DEFAULT_HEADERS -> DEFAULT_HEADERS
    java.lang.String DEFAULT_HOST -> DEFAULT_HOST
    java.lang.String CONN_MANAGER_TIMEOUT -> CONN_MANAGER_TIMEOUT
org.apache.http.client.params.ClientParamBean -> org.apache.http.client.params.ClientParamBean:
    void setConnectionManagerFactoryClassName(java.lang.String) -> setConnectionManagerFactoryClassName
    void setHandleRedirects(boolean) -> setHandleRedirects
    void setRejectRelativeRedirect(boolean) -> setRejectRelativeRedirect
    void setMaxRedirects(int) -> setMaxRedirects
    void setAllowCircularRedirects(boolean) -> setAllowCircularRedirects
    void setHandleAuthentication(boolean) -> setHandleAuthentication
    void setCookiePolicy(java.lang.String) -> setCookiePolicy
    void setVirtualHost(org.apache.http.HttpHost) -> setVirtualHost
    void setDefaultHeaders(java.util.Collection) -> setDefaultHeaders
    void setDefaultHost(org.apache.http.HttpHost) -> setDefaultHost
    void setConnectionManagerTimeout(long) -> setConnectionManagerTimeout
org.apache.http.client.params.CookiePolicy -> org.apache.http.client.params.CookiePolicy:
    java.lang.String BROWSER_COMPATIBILITY -> BROWSER_COMPATIBILITY
    java.lang.String NETSCAPE -> NETSCAPE
    java.lang.String RFC_2109 -> RFC_2109
    java.lang.String RFC_2965 -> RFC_2965
    java.lang.String BEST_MATCH -> BEST_MATCH
    java.lang.String IGNORE_COOKIES -> IGNORE_COOKIES
org.apache.http.client.params.HttpClientParams -> org.apache.http.client.params.HttpClientParams:
    boolean isRedirecting(org.apache.http.params.HttpParams) -> isRedirecting
    void setRedirecting(org.apache.http.params.HttpParams,boolean) -> setRedirecting
    boolean isAuthenticating(org.apache.http.params.HttpParams) -> isAuthenticating
    void setAuthenticating(org.apache.http.params.HttpParams,boolean) -> setAuthenticating
    java.lang.String getCookiePolicy(org.apache.http.params.HttpParams) -> getCookiePolicy
    void setCookiePolicy(org.apache.http.params.HttpParams,java.lang.String) -> setCookiePolicy
    void setConnectionManagerTimeout(org.apache.http.params.HttpParams,long) -> setConnectionManagerTimeout
    long getConnectionManagerTimeout(org.apache.http.params.HttpParams) -> getConnectionManagerTimeout
org.apache.http.client.protocol.ClientContext -> org.apache.http.client.protocol.ClientContext:
    java.lang.String SCHEME_REGISTRY -> SCHEME_REGISTRY
    java.lang.String COOKIESPEC_REGISTRY -> COOKIESPEC_REGISTRY
    java.lang.String COOKIE_SPEC -> COOKIE_SPEC
    java.lang.String COOKIE_ORIGIN -> COOKIE_ORIGIN
    java.lang.String COOKIE_STORE -> COOKIE_STORE
    java.lang.String AUTHSCHEME_REGISTRY -> AUTHSCHEME_REGISTRY
    java.lang.String CREDS_PROVIDER -> CREDS_PROVIDER
    java.lang.String AUTH_CACHE -> AUTH_CACHE
    java.lang.String TARGET_AUTH_STATE -> TARGET_AUTH_STATE
    java.lang.String PROXY_AUTH_STATE -> PROXY_AUTH_STATE
    java.lang.String AUTH_SCHEME_PREF -> AUTH_SCHEME_PREF
    java.lang.String USER_TOKEN -> USER_TOKEN
org.apache.http.client.protocol.ClientContextConfigurer -> org.apache.http.client.protocol.ClientContextConfigurer:
    org.apache.http.protocol.HttpContext context -> context
    void setCookieSpecRegistry(org.apache.http.cookie.CookieSpecRegistry) -> setCookieSpecRegistry
    void setAuthSchemeRegistry(org.apache.http.auth.AuthSchemeRegistry) -> setAuthSchemeRegistry
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
org.apache.http.client.protocol.RequestAcceptEncoding -> org.apache.http.client.protocol.RequestAcceptEncoding:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestAddCookies -> org.apache.http.client.protocol.RequestAddCookies:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestAuthCache -> org.apache.http.client.protocol.RequestAuthCache:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void doPreemptiveAuth(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.auth.AuthState,org.apache.http.client.CredentialsProvider) -> doPreemptiveAuth
org.apache.http.client.protocol.RequestAuthenticationBase -> org.apache.http.client.protocol.a:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.auth.AuthState,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
    void ensureAuthScheme(org.apache.http.auth.AuthScheme) -> ensureAuthScheme
    org.apache.http.Header authenticate(org.apache.http.auth.AuthScheme,org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
org.apache.http.client.protocol.RequestAuthenticationBase$1 -> org.apache.http.client.protocol.b:
    int[] $SwitchMap$org$apache$http$auth$AuthProtocolState -> a
org.apache.http.client.protocol.RequestClientConnControl -> org.apache.http.client.protocol.RequestClientConnControl:
    org.apache.commons.logging.Log log -> log
    java.lang.String PROXY_CONN_DIRECTIVE -> PROXY_CONN_DIRECTIVE
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestDefaultHeaders -> org.apache.http.client.protocol.RequestDefaultHeaders:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestProxyAuthentication -> org.apache.http.client.protocol.RequestProxyAuthentication:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.RequestTargetAuthentication -> org.apache.http.client.protocol.RequestTargetAuthentication:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.ResponseAuthCache -> org.apache.http.client.protocol.ResponseAuthCache:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    boolean isCachable(org.apache.http.auth.AuthState) -> isCachable
    void cache(org.apache.http.client.AuthCache,org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> cache
    void uncache(org.apache.http.client.AuthCache,org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> uncache
org.apache.http.client.protocol.ResponseAuthCache$1 -> org.apache.http.client.protocol.c:
    int[] $SwitchMap$org$apache$http$auth$AuthProtocolState -> a
org.apache.http.client.protocol.ResponseContentEncoding -> org.apache.http.client.protocol.ResponseContentEncoding:
    java.lang.String UNCOMPRESSED -> UNCOMPRESSED
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
org.apache.http.client.protocol.ResponseProcessCookies -> org.apache.http.client.protocol.ResponseProcessCookies:
    org.apache.commons.logging.Log log -> log
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
    void processCookies(org.apache.http.HeaderIterator,org.apache.http.cookie.CookieSpec,org.apache.http.cookie.CookieOrigin,org.apache.http.client.CookieStore) -> processCookies
org.apache.http.client.utils.CloneUtils -> org.apache.http.client.utils.CloneUtils:
    java.lang.Object clone(java.lang.Object) -> clone
org.apache.http.client.utils.HttpClientUtils -> org.apache.http.client.utils.HttpClientUtils:
    void closeQuietly(org.apache.http.HttpResponse) -> closeQuietly
    void closeQuietly(org.apache.http.client.HttpClient) -> closeQuietly
org.apache.http.client.utils.Idn -> org.apache.http.client.utils.Idn:
    java.lang.String toUnicode(java.lang.String) -> toUnicode
org.apache.http.client.utils.JdkIdn -> org.apache.http.client.utils.JdkIdn:
    java.lang.reflect.Method toUnicode -> toUnicode
    java.lang.String toUnicode(java.lang.String) -> toUnicode
org.apache.http.client.utils.Punycode -> org.apache.http.client.utils.Punycode:
    org.apache.http.client.utils.Idn impl -> impl
    java.lang.String toUnicode(java.lang.String) -> toUnicode
org.apache.http.client.utils.Rfc3492Idn -> org.apache.http.client.utils.Rfc3492Idn:
    int base -> base
    int tmin -> tmin
    int tmax -> tmax
    int skew -> skew
    int damp -> damp
    int initial_bias -> initial_bias
    int initial_n -> initial_n
    char delimiter -> delimiter
    java.lang.String ACE_PREFIX -> ACE_PREFIX
    int adapt(int,int,boolean) -> adapt
    int digit(char) -> digit
    java.lang.String toUnicode(java.lang.String) -> toUnicode
    java.lang.String decode(java.lang.String) -> decode
org.apache.http.client.utils.URIBuilder -> org.apache.http.client.utils.URIBuilder:
    java.lang.String scheme -> scheme
    java.lang.String schemeSpecificPart -> schemeSpecificPart
    java.lang.String authority -> authority
    java.lang.String userInfo -> userInfo
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    java.util.List queryParams -> queryParams
    java.lang.String fragment -> fragment
    java.util.List parseQuery(java.lang.String,java.nio.charset.Charset) -> parseQuery
    java.lang.String formatQuery(java.util.List,java.nio.charset.Charset) -> formatQuery
    java.net.URI build() -> build
    void digestURI(java.net.URI) -> digestURI
    org.apache.http.client.utils.URIBuilder setScheme(java.lang.String) -> setScheme
    org.apache.http.client.utils.URIBuilder setUserInfo(java.lang.String) -> setUserInfo
    org.apache.http.client.utils.URIBuilder setUserInfo(java.lang.String,java.lang.String) -> setUserInfo
    org.apache.http.client.utils.URIBuilder setHost(java.lang.String) -> setHost
    org.apache.http.client.utils.URIBuilder setPort(int) -> setPort
    org.apache.http.client.utils.URIBuilder setPath(java.lang.String) -> setPath
    org.apache.http.client.utils.URIBuilder removeQuery() -> removeQuery
    org.apache.http.client.utils.URIBuilder setQuery(java.lang.String) -> setQuery
    org.apache.http.client.utils.URIBuilder addParameter(java.lang.String,java.lang.String) -> addParameter
    org.apache.http.client.utils.URIBuilder setParameter(java.lang.String,java.lang.String) -> setParameter
    org.apache.http.client.utils.URIBuilder setFragment(java.lang.String) -> setFragment
    java.lang.String getScheme() -> getScheme
    java.lang.String getUserInfo() -> getUserInfo
    java.lang.String getHost() -> getHost
    int getPort() -> getPort
    java.lang.String getPath() -> getPath
    java.util.List getQueryParams() -> getQueryParams
    java.lang.String getFragment() -> getFragment
    java.lang.String toString() -> toString
org.apache.http.client.utils.URIUtils -> org.apache.http.client.utils.URIUtils:
    java.net.URI createURI(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> createURI
    java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean) -> rewriteURI
    java.lang.String normalizePath(java.lang.String) -> normalizePath
    java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost) -> rewriteURI
    java.net.URI rewriteURI(java.net.URI) -> rewriteURI
    java.net.URI resolve(java.net.URI,java.lang.String) -> resolve
    java.net.URI resolve(java.net.URI,java.net.URI) -> resolve
    java.net.URI resolveReferenceStartingWithQueryString(java.net.URI,java.net.URI) -> resolveReferenceStartingWithQueryString
    java.net.URI removeDotSegments(java.net.URI) -> removeDotSegments
    org.apache.http.HttpHost extractHost(java.net.URI) -> extractHost
org.apache.http.client.utils.URLEncodedUtils -> org.apache.http.client.utils.URLEncodedUtils:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String PARAMETER_SEPARATOR -> PARAMETER_SEPARATOR
    java.lang.String NAME_VALUE_SEPARATOR -> NAME_VALUE_SEPARATOR
    char[] DELIM -> DELIM
    java.util.List parse(java.net.URI,java.lang.String) -> parse
    java.util.List parse(org.apache.http.HttpEntity) -> parse
    boolean isEncoded(org.apache.http.HttpEntity) -> isEncoded
    void parse(java.util.List,java.util.Scanner,java.lang.String) -> parse
    java.util.List parse(java.lang.String,java.nio.charset.Charset) -> parse
    java.lang.String format(java.util.List,java.lang.String) -> format
    java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> format
    java.lang.String decode(java.lang.String,java.lang.String) -> decode
    java.lang.String decode(java.lang.String,java.nio.charset.Charset) -> decode
    java.lang.String encode(java.lang.String,java.lang.String) -> encode
    java.lang.String encode(java.lang.String,java.nio.charset.Charset) -> encode
org.apache.http.conn.BasicEofSensorWatcher -> org.apache.http.conn.BasicEofSensorWatcher:
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    boolean attemptReuse -> attemptReuse
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.conn.BasicManagedEntity -> org.apache.http.conn.BasicManagedEntity:
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    boolean attemptReuse -> attemptReuse
    boolean isRepeatable() -> isRepeatable
    java.io.InputStream getContent() -> getContent
    void ensureConsumed() -> ensureConsumed
    void consumeContent() -> consumeContent
    void writeTo(java.io.OutputStream) -> writeTo
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
    void releaseManagedConnection() -> releaseManagedConnection
org.apache.http.conn.ClientConnectionManager -> org.apache.http.conn.ClientConnectionManager:
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
org.apache.http.conn.ClientConnectionManagerFactory -> org.apache.http.conn.ClientConnectionManagerFactory:
    org.apache.http.conn.ClientConnectionManager newInstance(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry) -> newInstance
org.apache.http.conn.ClientConnectionOperator -> org.apache.http.conn.ClientConnectionOperator:
    org.apache.http.conn.OperatedClientConnection createConnection() -> createConnection
    void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> openConnection
    void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> updateSecureConnection
org.apache.http.conn.ClientConnectionRequest -> org.apache.http.conn.ClientConnectionRequest:
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
    void abortRequest() -> abortRequest
org.apache.http.conn.ConnectTimeoutException -> org.apache.http.conn.ConnectTimeoutException:
    long serialVersionUID -> serialVersionUID
org.apache.http.conn.ConnectionKeepAliveStrategy -> org.apache.http.conn.ConnectionKeepAliveStrategy:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
org.apache.http.conn.ConnectionPoolTimeoutException -> org.apache.http.conn.ConnectionPoolTimeoutException:
    long serialVersionUID -> serialVersionUID
org.apache.http.conn.ConnectionReleaseTrigger -> org.apache.http.conn.ConnectionReleaseTrigger:
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.conn.DnsResolver -> org.apache.http.conn.DnsResolver:
    java.net.InetAddress[] resolve(java.lang.String) -> resolve
org.apache.http.conn.EofSensorInputStream -> org.apache.http.conn.EofSensorInputStream:
    java.io.InputStream wrappedStream -> wrappedStream
    boolean selfClosed -> selfClosed
    org.apache.http.conn.EofSensorWatcher eofWatcher -> eofWatcher
    boolean isReadAllowed() -> isReadAllowed
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    int available() -> available
    void close() -> close
    void checkEOF(int) -> checkEOF
    void checkClose() -> checkClose
    void checkAbort() -> checkAbort
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.conn.EofSensorWatcher -> org.apache.http.conn.EofSensorWatcher:
    boolean eofDetected(java.io.InputStream) -> eofDetected
    boolean streamClosed(java.io.InputStream) -> streamClosed
    boolean streamAbort(java.io.InputStream) -> streamAbort
org.apache.http.conn.HttpHostConnectException -> org.apache.http.conn.HttpHostConnectException:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpHost host -> host
    org.apache.http.HttpHost getHost() -> getHost
org.apache.http.conn.HttpInetSocketAddress -> org.apache.http.conn.HttpInetSocketAddress:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpHost httphost -> httphost
    org.apache.http.HttpHost getHttpHost() -> getHttpHost
    java.lang.String toString() -> toString
org.apache.http.conn.HttpRoutedConnection -> org.apache.http.conn.HttpRoutedConnection:
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
org.apache.http.conn.ManagedClientConnection -> org.apache.http.conn.ManagedClientConnection:
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setState(java.lang.Object) -> setState
    java.lang.Object getState() -> getState
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
org.apache.http.conn.MultihomePlainSocketFactory -> org.apache.http.conn.MultihomePlainSocketFactory:
    org.apache.http.conn.MultihomePlainSocketFactory DEFAULT_FACTORY -> DEFAULT_FACTORY
    org.apache.http.conn.MultihomePlainSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.OperatedClientConnection -> org.apache.http.conn.OperatedClientConnection:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    boolean isSecure() -> isSecure
    java.net.Socket getSocket() -> getSocket
    void opening(java.net.Socket,org.apache.http.HttpHost) -> opening
    void openCompleted(boolean,org.apache.http.params.HttpParams) -> openCompleted
    void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> update
org.apache.http.conn.params.ConnConnectionPNames -> org.apache.http.conn.params.ConnConnectionPNames:
    java.lang.String MAX_STATUS_LINE_GARBAGE -> MAX_STATUS_LINE_GARBAGE
org.apache.http.conn.params.ConnConnectionParamBean -> org.apache.http.conn.params.ConnConnectionParamBean:
    void setMaxStatusLineGarbage(int) -> setMaxStatusLineGarbage
org.apache.http.conn.params.ConnManagerPNames -> org.apache.http.conn.params.ConnManagerPNames:
    java.lang.String TIMEOUT -> TIMEOUT
    java.lang.String MAX_CONNECTIONS_PER_ROUTE -> MAX_CONNECTIONS_PER_ROUTE
    java.lang.String MAX_TOTAL_CONNECTIONS -> MAX_TOTAL_CONNECTIONS
org.apache.http.conn.params.ConnManagerParamBean -> org.apache.http.conn.params.ConnManagerParamBean:
    void setTimeout(long) -> setTimeout
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    void setConnectionsPerRoute(org.apache.http.conn.params.ConnPerRouteBean) -> setConnectionsPerRoute
org.apache.http.conn.params.ConnManagerParams -> org.apache.http.conn.params.ConnManagerParams:
    int DEFAULT_MAX_TOTAL_CONNECTIONS -> DEFAULT_MAX_TOTAL_CONNECTIONS
    org.apache.http.conn.params.ConnPerRoute DEFAULT_CONN_PER_ROUTE -> DEFAULT_CONN_PER_ROUTE
    long getTimeout(org.apache.http.params.HttpParams) -> getTimeout
    void setTimeout(org.apache.http.params.HttpParams,long) -> setTimeout
    void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams,org.apache.http.conn.params.ConnPerRoute) -> setMaxConnectionsPerRoute
    org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams) -> getMaxConnectionsPerRoute
    void setMaxTotalConnections(org.apache.http.params.HttpParams,int) -> setMaxTotalConnections
    int getMaxTotalConnections(org.apache.http.params.HttpParams) -> getMaxTotalConnections
org.apache.http.conn.params.ConnManagerParams$1 -> org.apache.http.conn.params.a:
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.conn.params.ConnPerRoute -> org.apache.http.conn.params.ConnPerRoute:
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.conn.params.ConnPerRouteBean -> org.apache.http.conn.params.ConnPerRouteBean:
    int DEFAULT_MAX_CONNECTIONS_PER_ROUTE -> DEFAULT_MAX_CONNECTIONS_PER_ROUTE
    java.util.concurrent.ConcurrentHashMap maxPerHostMap -> maxPerHostMap
    int defaultMax -> defaultMax
    int getDefaultMax() -> getDefaultMax
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxForRoute
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
    void setMaxForRoutes(java.util.Map) -> setMaxForRoutes
    java.lang.String toString() -> toString
org.apache.http.conn.params.ConnRoutePNames -> org.apache.http.conn.params.ConnRoutePNames:
    java.lang.String DEFAULT_PROXY -> DEFAULT_PROXY
    java.lang.String LOCAL_ADDRESS -> LOCAL_ADDRESS
    java.lang.String FORCED_ROUTE -> FORCED_ROUTE
org.apache.http.conn.params.ConnRouteParamBean -> org.apache.http.conn.params.ConnRouteParamBean:
    void setDefaultProxy(org.apache.http.HttpHost) -> setDefaultProxy
    void setLocalAddress(java.net.InetAddress) -> setLocalAddress
    void setForcedRoute(org.apache.http.conn.routing.HttpRoute) -> setForcedRoute
org.apache.http.conn.params.ConnRouteParams -> org.apache.http.conn.params.ConnRouteParams:
    org.apache.http.HttpHost NO_HOST -> NO_HOST
    org.apache.http.conn.routing.HttpRoute NO_ROUTE -> NO_ROUTE
    org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams) -> getDefaultProxy
    void setDefaultProxy(org.apache.http.params.HttpParams,org.apache.http.HttpHost) -> setDefaultProxy
    org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams) -> getForcedRoute
    void setForcedRoute(org.apache.http.params.HttpParams,org.apache.http.conn.routing.HttpRoute) -> setForcedRoute
    java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams) -> getLocalAddress
    void setLocalAddress(org.apache.http.params.HttpParams,java.net.InetAddress) -> setLocalAddress
org.apache.http.conn.routing.BasicRouteDirector -> org.apache.http.conn.routing.BasicRouteDirector:
    int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> nextStep
    int firstStep(org.apache.http.conn.routing.RouteInfo) -> firstStep
    int directStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> directStep
    int proxiedStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> proxiedStep
org.apache.http.conn.routing.HttpRoute -> org.apache.http.conn.routing.HttpRoute:
    org.apache.http.HttpHost[] EMPTY_HTTP_HOST_ARRAY -> EMPTY_HTTP_HOST_ARRAY
    org.apache.http.HttpHost targetHost -> targetHost
    java.net.InetAddress localAddress -> localAddress
    org.apache.http.HttpHost[] proxyChain -> proxyChain
    org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled -> tunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType layered -> layered
    boolean secure -> secure
    org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost) -> toChain
    org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost[]) -> toChain
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.conn.routing.HttpRouteDirector -> org.apache.http.conn.routing.HttpRouteDirector:
    int UNREACHABLE -> UNREACHABLE
    int COMPLETE -> COMPLETE
    int CONNECT_TARGET -> CONNECT_TARGET
    int CONNECT_PROXY -> CONNECT_PROXY
    int TUNNEL_TARGET -> TUNNEL_TARGET
    int TUNNEL_PROXY -> TUNNEL_PROXY
    int LAYER_PROTOCOL -> LAYER_PROTOCOL
    int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo) -> nextStep
org.apache.http.conn.routing.HttpRoutePlanner -> org.apache.http.conn.routing.HttpRoutePlanner:
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
org.apache.http.conn.routing.RouteInfo -> org.apache.http.conn.routing.RouteInfo:
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
org.apache.http.conn.routing.RouteInfo$LayerType -> org.apache.http.conn.routing.RouteInfo$LayerType:
    org.apache.http.conn.routing.RouteInfo$LayerType PLAIN -> PLAIN
    org.apache.http.conn.routing.RouteInfo$LayerType LAYERED -> LAYERED
    org.apache.http.conn.routing.RouteInfo$LayerType[] $VALUES -> $VALUES
    org.apache.http.conn.routing.RouteInfo$LayerType[] values() -> values
    org.apache.http.conn.routing.RouteInfo$LayerType valueOf(java.lang.String) -> valueOf
org.apache.http.conn.routing.RouteInfo$TunnelType -> org.apache.http.conn.routing.RouteInfo$TunnelType:
    org.apache.http.conn.routing.RouteInfo$TunnelType PLAIN -> PLAIN
    org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED -> TUNNELLED
    org.apache.http.conn.routing.RouteInfo$TunnelType[] $VALUES -> $VALUES
    org.apache.http.conn.routing.RouteInfo$TunnelType[] values() -> values
    org.apache.http.conn.routing.RouteInfo$TunnelType valueOf(java.lang.String) -> valueOf
org.apache.http.conn.routing.RouteTracker -> org.apache.http.conn.routing.RouteTracker:
    org.apache.http.HttpHost targetHost -> targetHost
    java.net.InetAddress localAddress -> localAddress
    boolean connected -> connected
    org.apache.http.HttpHost[] proxyChain -> proxyChain
    org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled -> tunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType layered -> layered
    boolean secure -> secure
    void reset() -> reset
    void connectTarget(boolean) -> connectTarget
    void connectProxy(org.apache.http.HttpHost,boolean) -> connectProxy
    void tunnelTarget(boolean) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean) -> tunnelProxy
    void layerProtocol(boolean) -> layerProtocol
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getHopCount() -> getHopCount
    org.apache.http.HttpHost getHopTarget(int) -> getHopTarget
    org.apache.http.HttpHost getProxyHost() -> getProxyHost
    boolean isConnected() -> isConnected
    org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType() -> getTunnelType
    boolean isTunnelled() -> isTunnelled
    org.apache.http.conn.routing.RouteInfo$LayerType getLayerType() -> getLayerType
    boolean isLayered() -> isLayered
    boolean isSecure() -> isSecure
    org.apache.http.conn.routing.HttpRoute toRoute() -> toRoute
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
org.apache.http.conn.scheme.HostNameResolver -> org.apache.http.conn.scheme.HostNameResolver:
    java.net.InetAddress resolve(java.lang.String) -> resolve
org.apache.http.conn.scheme.LayeredSchemeSocketFactory -> org.apache.http.conn.scheme.LayeredSchemeSocketFactory:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
org.apache.http.conn.scheme.LayeredSocketFactory -> org.apache.http.conn.scheme.LayeredSocketFactory:
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.apache.http.conn.scheme.LayeredSocketFactoryAdaptor -> org.apache.http.conn.scheme.a:
    org.apache.http.conn.scheme.LayeredSchemeSocketFactory factory -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.apache.http.conn.scheme.PlainSocketFactory -> org.apache.http.conn.scheme.PlainSocketFactory:
    org.apache.http.conn.scheme.HostNameResolver nameResolver -> nameResolver
    org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory() -> getSocketFactory
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
org.apache.http.conn.scheme.Scheme -> org.apache.http.conn.scheme.Scheme:
    java.lang.String name -> name
    org.apache.http.conn.scheme.SchemeSocketFactory socketFactory -> socketFactory
    int defaultPort -> defaultPort
    boolean layered -> layered
    java.lang.String stringRep -> stringRep
    int getDefaultPort() -> getDefaultPort
    org.apache.http.conn.scheme.SocketFactory getSocketFactory() -> getSocketFactory
    org.apache.http.conn.scheme.SchemeSocketFactory getSchemeSocketFactory() -> getSchemeSocketFactory
    java.lang.String getName() -> getName
    boolean isLayered() -> isLayered
    int resolvePort(int) -> resolvePort
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.scheme.SchemeLayeredSocketFactory -> org.apache.http.conn.scheme.SchemeLayeredSocketFactory:
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor -> org.apache.http.conn.scheme.b:
    org.apache.http.conn.scheme.LayeredSocketFactory factory -> a
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
org.apache.http.conn.scheme.SchemeLayeredSocketFactoryAdaptor2 -> org.apache.http.conn.scheme.c:
    org.apache.http.conn.scheme.LayeredSchemeSocketFactory factory -> a
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
org.apache.http.conn.scheme.SchemeRegistry -> org.apache.http.conn.scheme.SchemeRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSchemes -> registeredSchemes
    org.apache.http.conn.scheme.Scheme getScheme(java.lang.String) -> getScheme
    org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost) -> getScheme
    org.apache.http.conn.scheme.Scheme get(java.lang.String) -> get
    org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme) -> register
    org.apache.http.conn.scheme.Scheme unregister(java.lang.String) -> unregister
    java.util.List getSchemeNames() -> getSchemeNames
    void setItems(java.util.Map) -> setItems
org.apache.http.conn.scheme.SchemeSocketFactory -> org.apache.http.conn.scheme.SchemeSocketFactory:
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.scheme.SchemeSocketFactoryAdaptor -> org.apache.http.conn.scheme.d:
    org.apache.http.conn.scheme.SocketFactory factory -> a
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    org.apache.http.conn.scheme.SocketFactory getFactory() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.scheme.SocketFactory -> org.apache.http.conn.scheme.SocketFactory:
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
org.apache.http.conn.scheme.SocketFactoryAdaptor -> org.apache.http.conn.scheme.e:
    org.apache.http.conn.scheme.SchemeSocketFactory factory -> a
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.apache.http.conn.ssl.AbstractVerifier -> org.apache.http.conn.ssl.AbstractVerifier:
    java.lang.String[] BAD_COUNTRY_2LDS -> BAD_COUNTRY_2LDS
    void verify(java.lang.String,javax.net.ssl.SSLSocket) -> verify
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    void verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean) -> verify
    boolean acceptableCountryWildcard(java.lang.String) -> acceptableCountryWildcard
    java.lang.String[] getCNs(java.security.cert.X509Certificate) -> getCNs
    java.lang.String[] getSubjectAlts(java.security.cert.X509Certificate,java.lang.String) -> getSubjectAlts
    java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate) -> getDNSSubjectAlts
    int countDots(java.lang.String) -> countDots
    boolean isIPAddress(java.lang.String) -> isIPAddress
org.apache.http.conn.ssl.AllowAllHostnameVerifier -> org.apache.http.conn.ssl.AllowAllHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    java.lang.String toString() -> toString
org.apache.http.conn.ssl.BrowserCompatHostnameVerifier -> org.apache.http.conn.ssl.BrowserCompatHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    java.lang.String toString() -> toString
org.apache.http.conn.ssl.SSLInitializationException -> org.apache.http.conn.ssl.SSLInitializationException:
    long serialVersionUID -> serialVersionUID
org.apache.http.conn.ssl.SSLSocketFactory -> org.apache.http.conn.ssl.SSLSocketFactory:
    java.lang.String TLS -> TLS
    java.lang.String SSL -> SSL
    java.lang.String SSLV2 -> SSLV2
    org.apache.http.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER -> ALLOW_ALL_HOSTNAME_VERIFIER
    org.apache.http.conn.ssl.X509HostnameVerifier BROWSER_COMPATIBLE_HOSTNAME_VERIFIER -> BROWSER_COMPATIBLE_HOSTNAME_VERIFIER
    org.apache.http.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER -> STRICT_HOSTNAME_VERIFIER
    char[] EMPTY_PASSWORD -> EMPTY_PASSWORD
    javax.net.ssl.SSLSocketFactory socketfactory -> socketfactory
    org.apache.http.conn.scheme.HostNameResolver nameResolver -> nameResolver
    org.apache.http.conn.ssl.X509HostnameVerifier hostnameVerifier -> hostnameVerifier
    org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory() -> getSocketFactory
    org.apache.http.conn.ssl.SSLSocketFactory getSystemSocketFactory() -> getSystemSocketFactory
    javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.ssl.TrustStrategy) -> createSSLContext
    javax.net.ssl.SSLContext createSystemSSLContext(java.lang.String,java.security.SecureRandom) -> createSystemSSLContext
    javax.net.ssl.SSLContext createDefaultSSLContext() -> createDefaultSSLContext
    javax.net.ssl.SSLContext createSystemSSLContext() -> createSystemSSLContext
    java.net.Socket createSocket(org.apache.http.params.HttpParams) -> createSocket
    java.net.Socket createSocket() -> createSocket
    java.net.Socket connectSocket(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.apache.http.params.HttpParams) -> connectSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,org.apache.http.params.HttpParams) -> createLayeredSocket
    java.net.Socket createLayeredSocket(java.net.Socket,java.lang.String,int,boolean) -> createLayeredSocket
    void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier) -> setHostnameVerifier
    org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    void prepareSocket(javax.net.ssl.SSLSocket) -> prepareSocket
org.apache.http.conn.ssl.StrictHostnameVerifier -> org.apache.http.conn.ssl.StrictHostnameVerifier:
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
    java.lang.String toString() -> toString
org.apache.http.conn.ssl.TrustManagerDecorator -> org.apache.http.conn.ssl.a:
    javax.net.ssl.X509TrustManager trustManager -> a
    org.apache.http.conn.ssl.TrustStrategy trustStrategy -> b
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
org.apache.http.conn.ssl.TrustSelfSignedStrategy -> org.apache.http.conn.ssl.TrustSelfSignedStrategy:
    boolean isTrusted(java.security.cert.X509Certificate[],java.lang.String) -> isTrusted
org.apache.http.conn.ssl.TrustStrategy -> org.apache.http.conn.ssl.TrustStrategy:
    boolean isTrusted(java.security.cert.X509Certificate[],java.lang.String) -> isTrusted
org.apache.http.conn.ssl.X509HostnameVerifier -> org.apache.http.conn.ssl.X509HostnameVerifier:
    void verify(java.lang.String,javax.net.ssl.SSLSocket) -> verify
    void verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    void verify(java.lang.String,java.lang.String[],java.lang.String[]) -> verify
org.apache.http.conn.util.InetAddressUtils -> org.apache.http.conn.util.InetAddressUtils:
    java.util.regex.Pattern IPV4_PATTERN -> IPV4_PATTERN
    java.util.regex.Pattern IPV6_STD_PATTERN -> IPV6_STD_PATTERN
    java.util.regex.Pattern IPV6_HEX_COMPRESSED_PATTERN -> IPV6_HEX_COMPRESSED_PATTERN
    boolean isIPv4Address(java.lang.String) -> isIPv4Address
    boolean isIPv6StdAddress(java.lang.String) -> isIPv6StdAddress
    boolean isIPv6HexCompressedAddress(java.lang.String) -> isIPv6HexCompressedAddress
    boolean isIPv6Address(java.lang.String) -> isIPv6Address
org.apache.http.cookie.ClientCookie -> org.apache.http.cookie.ClientCookie:
    java.lang.String VERSION_ATTR -> VERSION_ATTR
    java.lang.String PATH_ATTR -> PATH_ATTR
    java.lang.String DOMAIN_ATTR -> DOMAIN_ATTR
    java.lang.String MAX_AGE_ATTR -> MAX_AGE_ATTR
    java.lang.String SECURE_ATTR -> SECURE_ATTR
    java.lang.String COMMENT_ATTR -> COMMENT_ATTR
    java.lang.String EXPIRES_ATTR -> EXPIRES_ATTR
    java.lang.String PORT_ATTR -> PORT_ATTR
    java.lang.String COMMENTURL_ATTR -> COMMENTURL_ATTR
    java.lang.String DISCARD_ATTR -> DISCARD_ATTR
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    boolean containsAttribute(java.lang.String) -> containsAttribute
org.apache.http.cookie.Cookie -> org.apache.http.cookie.Cookie:
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getComment() -> getComment
    java.lang.String getCommentURL() -> getCommentURL
    java.util.Date getExpiryDate() -> getExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    java.lang.String getPath() -> getPath
    int[] getPorts() -> getPorts
    boolean isSecure() -> isSecure
    int getVersion() -> getVersion
    boolean isExpired(java.util.Date) -> isExpired
org.apache.http.cookie.CookieAttributeHandler -> org.apache.http.cookie.CookieAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.cookie.CookieIdentityComparator -> org.apache.http.cookie.CookieIdentityComparator:
    long serialVersionUID -> serialVersionUID
    int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.http.cookie.CookieOrigin -> org.apache.http.cookie.CookieOrigin:
    java.lang.String host -> host
    int port -> port
    java.lang.String path -> path
    boolean secure -> secure
    java.lang.String getHost() -> getHost
    java.lang.String getPath() -> getPath
    int getPort() -> getPort
    boolean isSecure() -> isSecure
    java.lang.String toString() -> toString
org.apache.http.cookie.CookiePathComparator -> org.apache.http.cookie.CookiePathComparator:
    long serialVersionUID -> serialVersionUID
    java.lang.String normalizePath(org.apache.http.cookie.Cookie) -> normalizePath
    int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.apache.http.cookie.CookieRestrictionViolationException -> org.apache.http.cookie.CookieRestrictionViolationException:
    long serialVersionUID -> serialVersionUID
org.apache.http.cookie.CookieSpec -> org.apache.http.cookie.CookieSpec:
    int getVersion() -> getVersion
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    java.util.List formatCookies(java.util.List) -> formatCookies
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.cookie.CookieSpecFactory -> org.apache.http.cookie.CookieSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.cookie.CookieSpecRegistry -> org.apache.http.cookie.CookieSpecRegistry:
    java.util.concurrent.ConcurrentHashMap registeredSpecs -> registeredSpecs
    void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory) -> register
    void unregister(java.lang.String) -> unregister
    org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams) -> getCookieSpec
    org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String) -> getCookieSpec
    java.util.List getSpecNames() -> getSpecNames
    void setItems(java.util.Map) -> setItems
org.apache.http.cookie.MalformedCookieException -> org.apache.http.cookie.MalformedCookieException:
    long serialVersionUID -> serialVersionUID
org.apache.http.cookie.SM -> org.apache.http.cookie.SM:
    java.lang.String COOKIE -> COOKIE
    java.lang.String COOKIE2 -> COOKIE2
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String SET_COOKIE2 -> SET_COOKIE2
org.apache.http.cookie.SetCookie -> org.apache.http.cookie.SetCookie:
    void setValue(java.lang.String) -> setValue
    void setComment(java.lang.String) -> setComment
    void setExpiryDate(java.util.Date) -> setExpiryDate
    void setDomain(java.lang.String) -> setDomain
    void setPath(java.lang.String) -> setPath
    void setSecure(boolean) -> setSecure
    void setVersion(int) -> setVersion
org.apache.http.cookie.SetCookie2 -> org.apache.http.cookie.SetCookie2:
    void setCommentURL(java.lang.String) -> setCommentURL
    void setPorts(int[]) -> setPorts
    void setDiscard(boolean) -> setDiscard
org.apache.http.cookie.params.CookieSpecPNames -> org.apache.http.cookie.params.CookieSpecPNames:
    java.lang.String DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String SINGLE_COOKIE_HEADER -> SINGLE_COOKIE_HEADER
org.apache.http.cookie.params.CookieSpecParamBean -> org.apache.http.cookie.params.CookieSpecParamBean:
    void setDatePatterns(java.util.Collection) -> setDatePatterns
    void setSingleHeader(boolean) -> setSingleHeader
org.apache.http.entity.mime.FormBodyPart -> org.apache.http.entity.mime.FormBodyPart:
    java.lang.String name -> name
    org.apache.http.entity.mime.Header header -> header
    org.apache.http.entity.mime.content.ContentBody body -> body
    java.lang.String getName() -> getName
    org.apache.http.entity.mime.content.ContentBody getBody() -> getBody
    org.apache.http.entity.mime.Header getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisp(org.apache.http.entity.mime.content.ContentBody) -> generateContentDisp
    void generateContentType(org.apache.http.entity.mime.content.ContentBody) -> generateContentType
    void generateTransferEncoding(org.apache.http.entity.mime.content.ContentBody) -> generateTransferEncoding
org.apache.http.entity.mime.Header -> org.apache.http.entity.mime.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(org.apache.http.entity.mime.MinimalField) -> addField
    java.util.List getFields() -> getFields
    org.apache.http.entity.mime.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(org.apache.http.entity.mime.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
org.apache.http.entity.mime.HttpMultipart -> org.apache.http.entity.mime.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    org.apache.http.entity.mime.HttpMultipartMode mode -> mode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(org.apache.http.entity.mime.MinimalField,java.io.OutputStream) -> writeField
    void writeField(org.apache.http.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    org.apache.http.entity.mime.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(org.apache.http.entity.mime.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(org.apache.http.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream) -> writeTo
    long getTotalLength() -> getTotalLength
org.apache.http.entity.mime.HttpMultipart$1 -> org.apache.http.entity.mime.a:
    int[] $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode -> a
org.apache.http.entity.mime.HttpMultipartMode -> org.apache.http.entity.mime.HttpMultipartMode:
    org.apache.http.entity.mime.HttpMultipartMode STRICT -> STRICT
    org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    org.apache.http.entity.mime.HttpMultipartMode[] $VALUES -> $VALUES
    org.apache.http.entity.mime.HttpMultipartMode[] values() -> values
    org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
org.apache.http.entity.mime.MIME -> org.apache.http.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
org.apache.http.entity.mime.MinimalField -> org.apache.http.entity.mime.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
org.apache.http.entity.mime.MultipartEntity -> org.apache.http.entity.mime.MultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    org.apache.http.entity.mime.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(org.apache.http.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.AbstractContentBody -> org.apache.http.entity.mime.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
org.apache.http.entity.mime.content.ByteArrayBody -> org.apache.http.entity.mime.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.ContentBody -> org.apache.http.entity.mime.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.ContentDescriptor -> org.apache.http.entity.mime.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.FileBody -> org.apache.http.entity.mime.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
org.apache.http.entity.mime.content.InputStreamBody -> org.apache.http.entity.mime.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.http.entity.mime.content.StringBody -> org.apache.http.entity.mime.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.http.impl.auth.AuthSchemeBase -> org.apache.http.impl.auth.AuthSchemeBase:
    org.apache.http.auth.ChallengeState challengeState -> challengeState
    void processChallenge(org.apache.http.Header) -> processChallenge
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    boolean isProxy() -> isProxy
    org.apache.http.auth.ChallengeState getChallengeState() -> getChallengeState
    java.lang.String toString() -> toString
org.apache.http.impl.auth.BasicScheme -> org.apache.http.impl.auth.BasicScheme:
    boolean complete -> complete
    java.lang.String getSchemeName() -> getSchemeName
    void processChallenge(org.apache.http.Header) -> processChallenge
    boolean isComplete() -> isComplete
    boolean isConnectionBased() -> isConnectionBased
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,java.lang.String,boolean) -> authenticate
org.apache.http.impl.auth.BasicSchemeFactory -> org.apache.http.impl.auth.BasicSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.auth.DigestScheme -> org.apache.http.impl.auth.DigestScheme:
    char[] HEXADECIMAL -> HEXADECIMAL
    boolean complete -> complete
    int QOP_UNKNOWN -> QOP_UNKNOWN
    int QOP_MISSING -> QOP_MISSING
    int QOP_AUTH_INT -> QOP_AUTH_INT
    int QOP_AUTH -> QOP_AUTH
    java.lang.String lastNonce -> lastNonce
    long nounceCount -> nounceCount
    java.lang.String cnonce -> cnonce
    java.lang.String a1 -> a1
    java.lang.String a2 -> a2
    void processChallenge(org.apache.http.Header) -> processChallenge
    boolean isComplete() -> isComplete
    java.lang.String getSchemeName() -> getSchemeName
    boolean isConnectionBased() -> isConnectionBased
    void overrideParamter(java.lang.String,java.lang.String) -> overrideParamter
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    java.security.MessageDigest createMessageDigest(java.lang.String) -> createMessageDigest
    org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> createDigestHeader
    java.lang.String getCnonce() -> getCnonce
    java.lang.String getA1() -> getA1
    java.lang.String getA2() -> getA2
    java.lang.String encode(byte[]) -> encode
    java.lang.String createCnonce() -> createCnonce
org.apache.http.impl.auth.DigestSchemeFactory -> org.apache.http.impl.auth.DigestSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.auth.GGSSchemeBase -> org.apache.http.impl.auth.GGSSchemeBase:
    org.apache.commons.logging.Log log -> log
    boolean stripPort -> stripPort
    org.apache.commons.codec.binary.Base64 base64codec -> base64codec
    org.apache.http.impl.auth.GGSSchemeBase$State state -> state
    byte[] token -> token
    org.ietf.jgss.GSSManager getManager() -> getManager
    byte[] generateGSSToken(byte[],org.ietf.jgss.Oid,java.lang.String) -> generateGSSToken
    byte[] generateToken(byte[],java.lang.String) -> generateToken
    boolean isComplete() -> isComplete
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
org.apache.http.impl.auth.GGSSchemeBase$1 -> org.apache.http.impl.auth.a:
    int[] $SwitchMap$org$apache$http$impl$auth$GGSSchemeBase$State -> a
org.apache.http.impl.auth.GGSSchemeBase$State -> org.apache.http.impl.auth.b:
    org.apache.http.impl.auth.GGSSchemeBase$State UNINITIATED -> a
    org.apache.http.impl.auth.GGSSchemeBase$State CHALLENGE_RECEIVED -> b
    org.apache.http.impl.auth.GGSSchemeBase$State TOKEN_GENERATED -> c
    org.apache.http.impl.auth.GGSSchemeBase$State FAILED -> d
    org.apache.http.impl.auth.GGSSchemeBase$State[] $VALUES -> e
    org.apache.http.impl.auth.GGSSchemeBase$State[] values() -> values
    org.apache.http.impl.auth.GGSSchemeBase$State valueOf(java.lang.String) -> valueOf
org.apache.http.impl.auth.HttpEntityDigester -> org.apache.http.impl.auth.c:
    java.security.MessageDigest digester -> a
    boolean closed -> b
    byte[] digest -> c
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    byte[] getDigest() -> a
org.apache.http.impl.auth.KerberosScheme -> org.apache.http.impl.auth.KerberosScheme:
    java.lang.String KERBEROS_OID -> KERBEROS_OID
    java.lang.String getSchemeName() -> getSchemeName
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    byte[] generateToken(byte[],java.lang.String) -> generateToken
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
org.apache.http.impl.auth.KerberosSchemeFactory -> org.apache.http.impl.auth.KerberosSchemeFactory:
    boolean stripPort -> stripPort
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    boolean isStripPort() -> isStripPort
org.apache.http.impl.auth.NTLMEngine -> org.apache.http.impl.auth.NTLMEngine:
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> generateType1Msg
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateType3Msg
org.apache.http.impl.auth.NTLMEngineException -> org.apache.http.impl.auth.NTLMEngineException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.auth.NTLMEngineImpl -> org.apache.http.impl.auth.d:
    java.security.SecureRandom RND_GEN -> a
    java.lang.String credentialCharset -> b
    byte[] SIGNATURE -> c
    java.lang.String getType1Message(java.lang.String,java.lang.String) -> a
    java.lang.String getType3Message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,byte[],int,java.lang.String,byte[]) -> a
    java.lang.String stripDotSuffix(java.lang.String) -> c
    java.lang.String convertHost(java.lang.String) -> d
    java.lang.String convertDomain(java.lang.String) -> e
    int readULong(byte[],int) -> c
    int readUShort(byte[],int) -> d
    byte[] readSecurityBuffer(byte[],int) -> e
    byte[] makeRandomChallenge() -> d
    byte[] makeNTLM2RandomChallenge() -> e
    byte[] getLMResponse(java.lang.String,byte[]) -> a
    byte[] getNTLMResponse(java.lang.String,byte[]) -> b
    byte[] getNTLMv2Response(java.lang.String,java.lang.String,java.lang.String,byte[],byte[],byte[]) -> a
    byte[] getLMv2Response(java.lang.String,java.lang.String,java.lang.String,byte[],byte[]) -> a
    byte[] getNTLM2SessionResponse(java.lang.String,byte[],byte[]) -> a
    byte[] lmHash(java.lang.String) -> f
    byte[] ntlmHash(java.lang.String) -> g
    byte[] ntlmv2Hash(java.lang.String,java.lang.String,java.lang.String) -> a
    byte[] lmResponse(byte[],byte[]) -> a
    byte[] lmv2Response(byte[],byte[],byte[]) -> a
    byte[] createBlob(byte[],byte[]) -> b
    java.security.Key createDESKey(byte[],int) -> f
    void oddParity(byte[]) -> a
    void writeULong(byte[],int,int) -> a
    int F(int,int,int) -> a
    int G(int,int,int) -> b
    int H(int,int,int) -> c
    int rotintlft(int,int) -> a
    java.lang.String generateType1Msg(java.lang.String,java.lang.String) -> generateType1Msg
    java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> generateType3Msg
    byte[] access$000() -> a
    int access$200(byte[],int) -> a
    byte[] access$300(byte[],int) -> b
    java.lang.String access$400(java.lang.String) -> a
    java.lang.String access$500(java.lang.String) -> b
    byte[] access$600() -> b
    byte[] access$700() -> c
org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5 -> org.apache.http.impl.auth.e:
    byte[] ipad -> a
    byte[] opad -> b
    java.security.MessageDigest md5 -> c
    byte[] getOutput() -> a
    void update(byte[]) -> a
org.apache.http.impl.auth.NTLMEngineImpl$MD4 -> org.apache.http.impl.auth.f:
    int A -> a
    int B -> b
    int C -> c
    int D -> d
    long count -> e
    byte[] dataBuffer -> f
    void update(byte[]) -> a
    byte[] getOutput() -> a
    void processBuffer() -> b
    void round1(int[]) -> a
    void round2(int[]) -> b
    void round3(int[]) -> c
org.apache.http.impl.auth.NTLMEngineImpl$NTLMMessage -> org.apache.http.impl.auth.g:
    byte[] messageContents -> a
    int currentOutputPosition -> b
    int getMessageLength() -> a
    void readBytes(byte[],int) -> a
    int readULong(int) -> a
    byte[] readSecurityBuffer(int) -> b
    void prepareResponse(int,int) -> a
    void addByte(byte) -> a
    void addBytes(byte[]) -> a
    void addUShort(int) -> c
    void addULong(int) -> d
    java.lang.String getResponse() -> b
org.apache.http.impl.auth.NTLMEngineImpl$Type1Message -> org.apache.http.impl.auth.h:
    byte[] hostBytes -> a
    byte[] domainBytes -> b
    java.lang.String getResponse() -> b
org.apache.http.impl.auth.NTLMEngineImpl$Type2Message -> org.apache.http.impl.auth.i:
    byte[] challenge -> a
    java.lang.String target -> b
    byte[] targetInfo -> c
    int flags -> d
    byte[] getChallenge() -> c
    java.lang.String getTarget() -> d
    byte[] getTargetInfo() -> e
    int getFlags() -> f
org.apache.http.impl.auth.NTLMEngineImpl$Type3Message -> org.apache.http.impl.auth.j:
    int type2Flags -> a
    byte[] domainBytes -> b
    byte[] hostBytes -> c
    byte[] userBytes -> d
    byte[] lmResp -> e
    byte[] ntResp -> f
    java.lang.String getResponse() -> b
org.apache.http.impl.auth.NTLMScheme -> org.apache.http.impl.auth.NTLMScheme:
    org.apache.http.impl.auth.NTLMEngine engine -> engine
    org.apache.http.impl.auth.NTLMScheme$State state -> state
    java.lang.String challenge -> challenge
    java.lang.String getSchemeName() -> getSchemeName
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    boolean isComplete() -> isComplete
org.apache.http.impl.auth.NTLMScheme$State -> org.apache.http.impl.auth.k:
    org.apache.http.impl.auth.NTLMScheme$State UNINITIATED -> a
    org.apache.http.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED -> b
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE1_GENERATED -> c
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED -> d
    org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED -> e
    org.apache.http.impl.auth.NTLMScheme$State FAILED -> f
    org.apache.http.impl.auth.NTLMScheme$State[] $VALUES -> g
    org.apache.http.impl.auth.NTLMScheme$State[] values() -> values
    org.apache.http.impl.auth.NTLMScheme$State valueOf(java.lang.String) -> valueOf
org.apache.http.impl.auth.NTLMSchemeFactory -> org.apache.http.impl.auth.NTLMSchemeFactory:
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.auth.NegotiateScheme -> org.apache.http.impl.auth.NegotiateScheme:
    org.apache.commons.logging.Log log -> log
    java.lang.String SPNEGO_OID -> SPNEGO_OID
    java.lang.String KERBEROS_OID -> KERBEROS_OID
    org.apache.http.impl.auth.SpnegoTokenGenerator spengoGenerator -> spengoGenerator
    java.lang.String getSchemeName() -> getSchemeName
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest) -> authenticate
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    byte[] generateToken(byte[],java.lang.String) -> generateToken
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
org.apache.http.impl.auth.NegotiateSchemeFactory -> org.apache.http.impl.auth.NegotiateSchemeFactory:
    org.apache.http.impl.auth.SpnegoTokenGenerator spengoGenerator -> spengoGenerator
    boolean stripPort -> stripPort
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    boolean isStripPort() -> isStripPort
    org.apache.http.impl.auth.SpnegoTokenGenerator getSpengoGenerator() -> getSpengoGenerator
org.apache.http.impl.auth.RFC2617Scheme -> org.apache.http.impl.auth.RFC2617Scheme:
    java.util.Map params -> params
    void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int) -> parseChallenge
    java.util.Map getParameters() -> getParameters
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
org.apache.http.impl.auth.SPNegoScheme -> org.apache.http.impl.auth.SPNegoScheme:
    java.lang.String SPNEGO_OID -> SPNEGO_OID
    java.lang.String getSchemeName() -> getSchemeName
    org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> authenticate
    byte[] generateToken(byte[],java.lang.String) -> generateToken
    java.lang.String getParameter(java.lang.String) -> getParameter
    java.lang.String getRealm() -> getRealm
    boolean isConnectionBased() -> isConnectionBased
org.apache.http.impl.auth.SPNegoSchemeFactory -> org.apache.http.impl.auth.SPNegoSchemeFactory:
    boolean stripPort -> stripPort
    org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams) -> newInstance
    boolean isStripPort() -> isStripPort
org.apache.http.impl.auth.SpnegoTokenGenerator -> org.apache.http.impl.auth.SpnegoTokenGenerator:
    byte[] generateSpnegoDERObject(byte[]) -> generateSpnegoDERObject
org.apache.http.impl.auth.UnsupportedDigestAlgorithmException -> org.apache.http.impl.auth.UnsupportedDigestAlgorithmException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.client.AIMDBackoffManager -> org.apache.http.impl.client.AIMDBackoffManager:
    org.apache.http.pool.ConnPoolControl connPerRoute -> connPerRoute
    org.apache.http.impl.client.Clock clock -> clock
    java.util.Map lastRouteProbes -> lastRouteProbes
    java.util.Map lastRouteBackoffs -> lastRouteBackoffs
    long coolDown -> coolDown
    double backoffFactor -> backoffFactor
    int cap -> cap
    void backOff(org.apache.http.conn.routing.HttpRoute) -> backOff
    int getBackedOffPoolSize(int) -> getBackedOffPoolSize
    void probe(org.apache.http.conn.routing.HttpRoute) -> probe
    java.lang.Long getLastUpdate(java.util.Map,org.apache.http.conn.routing.HttpRoute) -> getLastUpdate
    void setBackoffFactor(double) -> setBackoffFactor
    void setCooldownMillis(long) -> setCooldownMillis
    void setPerHostConnectionCap(int) -> setPerHostConnectionCap
org.apache.http.impl.client.AbstractAuthenticationHandler -> org.apache.http.impl.client.AbstractAuthenticationHandler:
    org.apache.commons.logging.Log log -> log
    java.util.List DEFAULT_SCHEME_PRIORITY -> DEFAULT_SCHEME_PRIORITY
    java.util.Map parseChallenges(org.apache.http.Header[]) -> parseChallenges
    java.util.List getAuthPreferences() -> getAuthPreferences
    java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
    org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> selectScheme
org.apache.http.impl.client.AbstractHttpClient -> org.apache.http.impl.client.AbstractHttpClient:
    org.apache.commons.logging.Log log -> log
    org.apache.http.params.HttpParams defaultParams -> defaultParams
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.cookie.CookieSpecRegistry supportedCookieSpecs -> supportedCookieSpecs
    org.apache.http.auth.AuthSchemeRegistry supportedAuthSchemes -> supportedAuthSchemes
    org.apache.http.protocol.BasicHttpProcessor mutableProcessor -> mutableProcessor
    org.apache.http.protocol.ImmutableHttpProcessor protocolProcessor -> protocolProcessor
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.client.RedirectStrategy redirectStrategy -> redirectStrategy
    org.apache.http.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    org.apache.http.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.client.CookieStore cookieStore -> cookieStore
    org.apache.http.client.CredentialsProvider credsProvider -> credsProvider
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.client.UserTokenHandler userTokenHandler -> userTokenHandler
    org.apache.http.client.ConnectionBackoffStrategy connectionBackoffStrategy -> connectionBackoffStrategy
    org.apache.http.client.BackoffManager backoffManager -> backoffManager
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
    org.apache.http.protocol.HttpContext createHttpContext() -> createHttpContext
    org.apache.http.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry() -> createAuthSchemeRegistry
    org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry() -> createCookieSpecRegistry
    org.apache.http.protocol.HttpRequestExecutor createRequestExecutor() -> createRequestExecutor
    org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy() -> createConnectionKeepAliveStrategy
    org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler() -> createHttpRequestRetryHandler
    org.apache.http.client.RedirectHandler createRedirectHandler() -> createRedirectHandler
    org.apache.http.client.AuthenticationStrategy createTargetAuthenticationStrategy() -> createTargetAuthenticationStrategy
    org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler() -> createTargetAuthenticationHandler
    org.apache.http.client.AuthenticationStrategy createProxyAuthenticationStrategy() -> createProxyAuthenticationStrategy
    org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler() -> createProxyAuthenticationHandler
    org.apache.http.client.CookieStore createCookieStore() -> createCookieStore
    org.apache.http.client.CredentialsProvider createCredentialsProvider() -> createCredentialsProvider
    org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    org.apache.http.client.UserTokenHandler createUserTokenHandler() -> createUserTokenHandler
    org.apache.http.params.HttpParams getParams() -> getParams
    void setParams(org.apache.http.params.HttpParams) -> setParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.protocol.HttpRequestExecutor getRequestExecutor() -> getRequestExecutor
    org.apache.http.auth.AuthSchemeRegistry getAuthSchemes() -> getAuthSchemes
    void setAuthSchemes(org.apache.http.auth.AuthSchemeRegistry) -> setAuthSchemes
    org.apache.http.client.ConnectionBackoffStrategy getConnectionBackoffStrategy() -> getConnectionBackoffStrategy
    void setConnectionBackoffStrategy(org.apache.http.client.ConnectionBackoffStrategy) -> setConnectionBackoffStrategy
    org.apache.http.cookie.CookieSpecRegistry getCookieSpecs() -> getCookieSpecs
    org.apache.http.client.BackoffManager getBackoffManager() -> getBackoffManager
    void setBackoffManager(org.apache.http.client.BackoffManager) -> setBackoffManager
    void setCookieSpecs(org.apache.http.cookie.CookieSpecRegistry) -> setCookieSpecs
    org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy() -> getConnectionReuseStrategy
    void setReuseStrategy(org.apache.http.ConnectionReuseStrategy) -> setReuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy() -> getConnectionKeepAliveStrategy
    void setKeepAliveStrategy(org.apache.http.conn.ConnectionKeepAliveStrategy) -> setKeepAliveStrategy
    org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler() -> getHttpRequestRetryHandler
    void setHttpRequestRetryHandler(org.apache.http.client.HttpRequestRetryHandler) -> setHttpRequestRetryHandler
    org.apache.http.client.RedirectHandler getRedirectHandler() -> getRedirectHandler
    void setRedirectHandler(org.apache.http.client.RedirectHandler) -> setRedirectHandler
    org.apache.http.client.RedirectStrategy getRedirectStrategy() -> getRedirectStrategy
    void setRedirectStrategy(org.apache.http.client.RedirectStrategy) -> setRedirectStrategy
    org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler() -> getTargetAuthenticationHandler
    void setTargetAuthenticationHandler(org.apache.http.client.AuthenticationHandler) -> setTargetAuthenticationHandler
    org.apache.http.client.AuthenticationStrategy getTargetAuthenticationStrategy() -> getTargetAuthenticationStrategy
    void setTargetAuthenticationStrategy(org.apache.http.client.AuthenticationStrategy) -> setTargetAuthenticationStrategy
    org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler() -> getProxyAuthenticationHandler
    void setProxyAuthenticationHandler(org.apache.http.client.AuthenticationHandler) -> setProxyAuthenticationHandler
    org.apache.http.client.AuthenticationStrategy getProxyAuthenticationStrategy() -> getProxyAuthenticationStrategy
    void setProxyAuthenticationStrategy(org.apache.http.client.AuthenticationStrategy) -> setProxyAuthenticationStrategy
    org.apache.http.client.CookieStore getCookieStore() -> getCookieStore
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    org.apache.http.client.CredentialsProvider getCredentialsProvider() -> getCredentialsProvider
    void setCredentialsProvider(org.apache.http.client.CredentialsProvider) -> setCredentialsProvider
    org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner() -> getRoutePlanner
    void setRoutePlanner(org.apache.http.conn.routing.HttpRoutePlanner) -> setRoutePlanner
    org.apache.http.client.UserTokenHandler getUserTokenHandler() -> getUserTokenHandler
    void setUserTokenHandler(org.apache.http.client.UserTokenHandler) -> setUserTokenHandler
    org.apache.http.protocol.BasicHttpProcessor getHttpProcessor() -> getHttpProcessor
    org.apache.http.protocol.HttpProcessor getProtocolProcessor() -> getProtocolProcessor
    int getResponseInterceptorCount() -> getResponseInterceptorCount
    org.apache.http.HttpResponseInterceptor getResponseInterceptor(int) -> getResponseInterceptor
    org.apache.http.HttpRequestInterceptor getRequestInterceptor(int) -> getRequestInterceptor
    int getRequestInterceptorCount() -> getRequestInterceptorCount
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor) -> addResponseInterceptor
    void addResponseInterceptor(org.apache.http.HttpResponseInterceptor,int) -> addResponseInterceptor
    void clearResponseInterceptors() -> clearResponseInterceptors
    void removeResponseInterceptorByClass(java.lang.Class) -> removeResponseInterceptorByClass
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor) -> addRequestInterceptor
    void addRequestInterceptor(org.apache.http.HttpRequestInterceptor,int) -> addRequestInterceptor
    void clearRequestInterceptors() -> clearRequestInterceptors
    void removeRequestInterceptorByClass(java.lang.Class) -> removeRequestInterceptorByClass
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpHost determineTarget(org.apache.http.client.methods.HttpUriRequest) -> determineTarget
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.AuthenticationStrategy,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    org.apache.http.params.HttpParams determineParams(org.apache.http.HttpRequest) -> determineParams
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.impl.client.AuthenticationStrategyAdaptor -> org.apache.http.impl.client.a:
    org.apache.commons.logging.Log log -> a
    org.apache.http.client.AuthenticationHandler handler -> b
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
    boolean isCachable(org.apache.http.auth.AuthScheme) -> a
    org.apache.http.client.AuthenticationHandler getHandler() -> a
org.apache.http.impl.client.AuthenticationStrategyImpl -> org.apache.http.impl.client.b:
    org.apache.commons.logging.Log log -> log
    java.util.List DEFAULT_SCHEME_PRIORITY -> DEFAULT_SCHEME_PRIORITY
    int challengeCode -> challengeCode
    java.lang.String headerName -> headerName
    java.lang.String prefParamName -> prefParamName
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.Queue select(java.util.Map,org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> select
    void authSucceeded(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authSucceeded
    boolean isCachable(org.apache.http.auth.AuthScheme) -> isCachable
    void authFailed(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme,org.apache.http.protocol.HttpContext) -> authFailed
org.apache.http.impl.client.AutoRetryHttpClient -> org.apache.http.impl.client.AutoRetryHttpClient:
    org.apache.http.client.HttpClient backend -> backend
    org.apache.http.client.ServiceUnavailableRetryStrategy retryStrategy -> retryStrategy
    org.apache.commons.logging.Log log -> log
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.params.HttpParams getParams() -> getParams
org.apache.http.impl.client.BasicAuthCache -> org.apache.http.impl.client.BasicAuthCache:
    java.util.HashMap map -> map
    void put(org.apache.http.HttpHost,org.apache.http.auth.AuthScheme) -> put
    org.apache.http.auth.AuthScheme get(org.apache.http.HttpHost) -> get
    void remove(org.apache.http.HttpHost) -> remove
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.impl.client.BasicCookieStore -> org.apache.http.impl.client.BasicCookieStore:
    long serialVersionUID -> serialVersionUID
    java.util.TreeSet cookies -> cookies
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void addCookies(org.apache.http.cookie.Cookie[]) -> addCookies
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.impl.client.BasicCredentialsProvider -> org.apache.http.impl.client.BasicCredentialsProvider:
    java.util.concurrent.ConcurrentHashMap credMap -> credMap
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    org.apache.http.auth.Credentials matchCredentials(java.util.Map,org.apache.http.auth.AuthScope) -> matchCredentials
    org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
    void clear() -> clear
    java.lang.String toString() -> toString
org.apache.http.impl.client.BasicResponseHandler -> org.apache.http.impl.client.BasicResponseHandler:
    java.lang.String handleResponse(org.apache.http.HttpResponse) -> handleResponse
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
org.apache.http.impl.client.ClientParamsStack -> org.apache.http.impl.client.ClientParamsStack:
    org.apache.http.params.HttpParams applicationParams -> applicationParams
    org.apache.http.params.HttpParams clientParams -> clientParams
    org.apache.http.params.HttpParams requestParams -> requestParams
    org.apache.http.params.HttpParams overrideParams -> overrideParams
    org.apache.http.params.HttpParams getApplicationParams() -> getApplicationParams
    org.apache.http.params.HttpParams getClientParams() -> getClientParams
    org.apache.http.params.HttpParams getRequestParams() -> getRequestParams
    org.apache.http.params.HttpParams getOverrideParams() -> getOverrideParams
    java.lang.Object getParameter(java.lang.String) -> getParameter
    org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object) -> setParameter
    boolean removeParameter(java.lang.String) -> removeParameter
    org.apache.http.params.HttpParams copy() -> copy
org.apache.http.impl.client.Clock -> org.apache.http.impl.client.Clock:
    long getCurrentTime() -> a
org.apache.http.impl.client.ContentEncodingHttpClient -> org.apache.http.impl.client.ContentEncodingHttpClient:
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
org.apache.http.impl.client.DecompressingHttpClient -> org.apache.http.impl.client.DecompressingHttpClient:
    org.apache.http.client.HttpClient backend -> backend
    org.apache.http.HttpRequestInterceptor acceptEncodingInterceptor -> acceptEncodingInterceptor
    org.apache.http.HttpResponseInterceptor contentEncodingInterceptor -> contentEncodingInterceptor
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.conn.ClientConnectionManager getConnectionManager() -> getConnectionManager
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest) -> execute
    org.apache.http.HttpHost getHttpHost(org.apache.http.client.methods.HttpUriRequest) -> getHttpHost
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest) -> execute
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler) -> execute
    java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext) -> execute
org.apache.http.impl.client.DefaultBackoffStrategy -> org.apache.http.impl.client.DefaultBackoffStrategy:
    boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    boolean shouldBackoff(org.apache.http.HttpResponse) -> shouldBackoff
org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy -> org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy:
    long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getKeepAliveDuration
org.apache.http.impl.client.DefaultHttpClient -> org.apache.http.impl.client.DefaultHttpClient:
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    void setDefaultHttpParams(org.apache.http.params.HttpParams) -> setDefaultHttpParams
    org.apache.http.protocol.BasicHttpProcessor createHttpProcessor() -> createHttpProcessor
org.apache.http.impl.client.DefaultHttpRequestRetryHandler -> org.apache.http.impl.client.DefaultHttpRequestRetryHandler:
    int retryCount -> retryCount
    boolean requestSentRetryEnabled -> requestSentRetryEnabled
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    boolean isRequestSentRetryEnabled() -> isRequestSentRetryEnabled
    int getRetryCount() -> getRetryCount
    boolean handleAsIdempotent(org.apache.http.HttpRequest) -> handleAsIdempotent
    boolean requestIsAborted(org.apache.http.HttpRequest) -> requestIsAborted
org.apache.http.impl.client.DefaultProxyAuthenticationHandler -> org.apache.http.impl.client.DefaultProxyAuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
org.apache.http.impl.client.DefaultRedirectHandler -> org.apache.http.impl.client.DefaultRedirectHandler:
    org.apache.commons.logging.Log log -> log
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
org.apache.http.impl.client.DefaultRedirectStrategy -> org.apache.http.impl.client.DefaultRedirectStrategy:
    org.apache.commons.logging.Log log -> log
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    java.lang.String[] REDIRECT_METHODS -> REDIRECT_METHODS
    boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    java.net.URI getLocationURI(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
    java.net.URI createLocationURI(java.lang.String) -> createLocationURI
    boolean isRedirectable(java.lang.String) -> isRedirectable
    org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
org.apache.http.impl.client.DefaultRedirectStrategyAdaptor -> org.apache.http.impl.client.c:
    org.apache.http.client.RedirectHandler handler -> a
    boolean isRedirected(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirected
    org.apache.http.client.methods.HttpUriRequest getRedirect(org.apache.http.HttpRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getRedirect
    org.apache.http.client.RedirectHandler getHandler() -> a
org.apache.http.impl.client.DefaultRequestDirector -> org.apache.http.impl.client.DefaultRequestDirector:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.conn.routing.HttpRoutePlanner routePlanner -> routePlanner
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy -> keepAliveStrategy
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    org.apache.http.client.HttpRequestRetryHandler retryHandler -> retryHandler
    org.apache.http.client.RedirectHandler redirectHandler -> redirectHandler
    org.apache.http.client.RedirectStrategy redirectStrategy -> redirectStrategy
    org.apache.http.client.AuthenticationHandler targetAuthHandler -> targetAuthHandler
    org.apache.http.client.AuthenticationStrategy targetAuthStrategy -> targetAuthStrategy
    org.apache.http.client.AuthenticationHandler proxyAuthHandler -> proxyAuthHandler
    org.apache.http.client.AuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.client.UserTokenHandler userTokenHandler -> userTokenHandler
    org.apache.http.params.HttpParams params -> params
    org.apache.http.conn.ManagedClientConnection managedConn -> managedConn
    org.apache.http.auth.AuthState targetAuthState -> targetAuthState
    org.apache.http.auth.AuthState proxyAuthState -> proxyAuthState
    org.apache.http.impl.client.HttpAuthenticator authenticator -> authenticator
    int execCount -> execCount
    int redirectCount -> redirectCount
    int maxRedirects -> maxRedirects
    org.apache.http.HttpHost virtualHost -> virtualHost
    org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest) -> wrapRequest
    void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute) -> rewriteRequestURI
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
    void tryConnect(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext) -> tryConnect
    org.apache.http.HttpResponse tryExecute(org.apache.http.impl.client.RoutedRequest,org.apache.http.protocol.HttpContext) -> tryExecute
    void releaseConnection() -> releaseConnection
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> establishRoute
    boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> createTunnelToTarget
    boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext) -> createTunnelToProxy
    org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext) -> createConnectRequest
    org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> handleResponse
    void abortConnection() -> abortConnection
org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy -> org.apache.http.impl.client.DefaultServiceUnavailableRetryStrategy:
    int maxRetries -> maxRetries
    long retryInterval -> retryInterval
    boolean retryRequest(org.apache.http.HttpResponse,int,org.apache.http.protocol.HttpContext) -> retryRequest
    long getRetryInterval() -> getRetryInterval
org.apache.http.impl.client.DefaultTargetAuthenticationHandler -> org.apache.http.impl.client.DefaultTargetAuthenticationHandler:
    boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getChallenges
    java.util.List getAuthPreferences(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getAuthPreferences
org.apache.http.impl.client.DefaultUserTokenHandler -> org.apache.http.impl.client.DefaultUserTokenHandler:
    java.lang.Object getUserToken(org.apache.http.protocol.HttpContext) -> getUserToken
    java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState) -> getAuthPrincipal
org.apache.http.impl.client.EntityEnclosingRequestWrapper -> org.apache.http.impl.client.EntityEnclosingRequestWrapper:
    org.apache.http.HttpEntity entity -> entity
    boolean consumed -> consumed
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    boolean isRepeatable() -> isRepeatable
    boolean access$002(org.apache.http.impl.client.EntityEnclosingRequestWrapper,boolean) -> access$002
org.apache.http.impl.client.EntityEnclosingRequestWrapper$EntityWrapper -> org.apache.http.impl.client.d:
    org.apache.http.impl.client.EntityEnclosingRequestWrapper this$0 -> a
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.impl.client.HttpAuthenticator -> org.apache.http.impl.client.HttpAuthenticator:
    org.apache.commons.logging.Log log -> log
    boolean isAuthenticationRequested(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext) -> isAuthenticationRequested
    boolean authenticate(org.apache.http.HttpHost,org.apache.http.HttpResponse,org.apache.http.client.AuthenticationStrategy,org.apache.http.auth.AuthState,org.apache.http.protocol.HttpContext) -> authenticate
org.apache.http.impl.client.HttpAuthenticator$1 -> org.apache.http.impl.client.e:
    int[] $SwitchMap$org$apache$http$auth$AuthProtocolState -> a
org.apache.http.impl.client.LaxRedirectStrategy -> org.apache.http.impl.client.LaxRedirectStrategy:
    java.lang.String[] REDIRECT_METHODS -> REDIRECT_METHODS
    boolean isRedirectable(java.lang.String) -> isRedirectable
org.apache.http.impl.client.NullBackoffStrategy -> org.apache.http.impl.client.NullBackoffStrategy:
    boolean shouldBackoff(java.lang.Throwable) -> shouldBackoff
    boolean shouldBackoff(org.apache.http.HttpResponse) -> shouldBackoff
org.apache.http.impl.client.ProxyAuthenticationStrategy -> org.apache.http.impl.client.ProxyAuthenticationStrategy:
org.apache.http.impl.client.ProxyClient -> org.apache.http.impl.client.ProxyClient:
    org.apache.http.protocol.HttpProcessor httpProcessor -> httpProcessor
    org.apache.http.protocol.HttpRequestExecutor requestExec -> requestExec
    org.apache.http.impl.client.ProxyAuthenticationStrategy proxyAuthStrategy -> proxyAuthStrategy
    org.apache.http.impl.client.HttpAuthenticator authenticator -> authenticator
    org.apache.http.auth.AuthState proxyAuthState -> proxyAuthState
    org.apache.http.auth.AuthSchemeRegistry authSchemeRegistry -> authSchemeRegistry
    org.apache.http.ConnectionReuseStrategy reuseStrategy -> reuseStrategy
    org.apache.http.params.HttpParams params -> params
    org.apache.http.params.HttpParams getParams() -> getParams
    org.apache.http.auth.AuthSchemeRegistry getAuthSchemeRegistry() -> getAuthSchemeRegistry
    java.net.Socket tunnel(org.apache.http.HttpHost,org.apache.http.HttpHost,org.apache.http.auth.Credentials) -> tunnel
org.apache.http.impl.client.ProxyClient$ProxyConnection -> org.apache.http.impl.client.f:
    org.apache.http.conn.routing.HttpRoute route -> a
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    boolean isSecure() -> isSecure
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    java.net.Socket getSocket() -> getSocket
org.apache.http.impl.client.RedirectLocations -> org.apache.http.impl.client.RedirectLocations:
    java.util.Set unique -> unique
    java.util.List all -> all
    boolean contains(java.net.URI) -> contains
    void add(java.net.URI) -> add
    boolean remove(java.net.URI) -> remove
    java.util.List getAll() -> getAll
org.apache.http.impl.client.RequestWrapper -> org.apache.http.impl.client.RequestWrapper:
    org.apache.http.HttpRequest original -> original
    java.net.URI uri -> uri
    java.lang.String method -> method
    org.apache.http.ProtocolVersion version -> version
    int execCount -> execCount
    void resetHeaders() -> resetHeaders
    java.lang.String getMethod() -> getMethod
    void setMethod(java.lang.String) -> setMethod
    org.apache.http.ProtocolVersion getProtocolVersion() -> getProtocolVersion
    void setProtocolVersion(org.apache.http.ProtocolVersion) -> setProtocolVersion
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    org.apache.http.RequestLine getRequestLine() -> getRequestLine
    void abort() -> abort
    boolean isAborted() -> isAborted
    org.apache.http.HttpRequest getOriginal() -> getOriginal
    boolean isRepeatable() -> isRepeatable
    int getExecCount() -> getExecCount
    void incrementExecCount() -> incrementExecCount
org.apache.http.impl.client.RoutedRequest -> org.apache.http.impl.client.RoutedRequest:
    org.apache.http.impl.client.RequestWrapper request -> request
    org.apache.http.conn.routing.HttpRoute route -> route
    org.apache.http.impl.client.RequestWrapper getRequest() -> getRequest
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
org.apache.http.impl.client.StandardHttpRequestRetryHandler -> org.apache.http.impl.client.StandardHttpRequestRetryHandler:
    java.util.Map idempotentMethods -> idempotentMethods
    boolean handleAsIdempotent(org.apache.http.HttpRequest) -> handleAsIdempotent
org.apache.http.impl.client.SystemClock -> org.apache.http.impl.client.g:
    long getCurrentTime() -> a
org.apache.http.impl.client.SystemDefaultHttpClient -> org.apache.http.impl.client.SystemDefaultHttpClient:
    org.apache.http.conn.ClientConnectionManager createClientConnectionManager() -> createClientConnectionManager
    org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner() -> createHttpRoutePlanner
    org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy() -> createConnectionReuseStrategy
org.apache.http.impl.client.TargetAuthenticationStrategy -> org.apache.http.impl.client.TargetAuthenticationStrategy:
org.apache.http.impl.client.TunnelRefusedException -> org.apache.http.impl.client.TunnelRefusedException:
    long serialVersionUID -> serialVersionUID
    org.apache.http.HttpResponse response -> response
    org.apache.http.HttpResponse getResponse() -> getResponse
org.apache.http.impl.conn.AbstractClientConnAdapter -> org.apache.http.impl.conn.AbstractClientConnAdapter:
    org.apache.http.conn.ClientConnectionManager connManager -> connManager
    org.apache.http.conn.OperatedClientConnection wrappedConnection -> wrappedConnection
    boolean markedReusable -> markedReusable
    boolean released -> released
    long duration -> duration
    void detach() -> detach
    org.apache.http.conn.OperatedClientConnection getWrappedConnection() -> getWrappedConnection
    org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    void assertNotAborted() -> assertNotAborted
    boolean isReleased() -> isReleased
    void assertValid(org.apache.http.conn.OperatedClientConnection) -> assertValid
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    void flush() -> flush
    boolean isResponseAvailable(int) -> isResponseAvailable
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    boolean isSecure() -> isSecure
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
org.apache.http.impl.conn.AbstractPoolEntry -> org.apache.http.impl.conn.AbstractPoolEntry:
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.conn.OperatedClientConnection connection -> connection
    org.apache.http.conn.routing.HttpRoute route -> route
    java.lang.Object state -> state
    org.apache.http.conn.routing.RouteTracker tracker -> tracker
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void shutdownEntry() -> shutdownEntry
org.apache.http.impl.conn.AbstractPooledConnAdapter -> org.apache.http.impl.conn.AbstractPooledConnAdapter:
    org.apache.http.impl.conn.AbstractPoolEntry poolEntry -> poolEntry
    org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    void assertValid(org.apache.http.impl.conn.AbstractPoolEntry) -> assertValid
    void assertAttached() -> assertAttached
    void detach() -> detach
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    void close() -> close
    void shutdown() -> shutdown
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
org.apache.http.impl.conn.BasicClientConnectionManager -> org.apache.http.impl.conn.BasicClientConnectionManager:
    org.apache.commons.logging.Log log -> log
    java.util.concurrent.atomic.AtomicLong COUNTER -> COUNTER
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.impl.conn.HttpPoolEntry poolEntry -> poolEntry
    org.apache.http.impl.conn.ManagedClientConnectionImpl conn -> conn
    boolean shutdown -> shutdown
    void finalize() -> finalize
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void assertNotShutdown() -> assertNotShutdown
    org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeExpiredConnections() -> closeExpiredConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void shutdown() -> shutdown
org.apache.http.impl.conn.BasicClientConnectionManager$1 -> org.apache.http.impl.conn.a:
    org.apache.http.conn.routing.HttpRoute val$route -> a
    java.lang.Object val$state -> b
    org.apache.http.impl.conn.BasicClientConnectionManager this$0 -> c
    void abortRequest() -> abortRequest
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.ConnectionShutdownException -> org.apache.http.impl.conn.ConnectionShutdownException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.conn.DefaultClientConnection -> org.apache.http.impl.conn.DefaultClientConnection:
    org.apache.commons.logging.Log log -> log
    org.apache.commons.logging.Log headerLog -> headerLog
    org.apache.commons.logging.Log wireLog -> wireLog
    java.net.Socket socket -> socket
    org.apache.http.HttpHost targetHost -> targetHost
    boolean connSecure -> connSecure
    boolean shutdown -> shutdown
    java.util.Map attributes -> attributes
    org.apache.http.HttpHost getTargetHost() -> getTargetHost
    boolean isSecure() -> isSecure
    java.net.Socket getSocket() -> getSocket
    void opening(java.net.Socket,org.apache.http.HttpHost) -> opening
    void openCompleted(boolean,org.apache.http.params.HttpParams) -> openCompleted
    void shutdown() -> shutdown
    void close() -> close
    org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionInputBuffer
    org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams) -> createSessionOutputBuffer
    org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams) -> createResponseParser
    void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> update
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    java.lang.Object removeAttribute(java.lang.String) -> removeAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
org.apache.http.impl.conn.DefaultClientConnectionOperator -> org.apache.http.impl.conn.DefaultClientConnectionOperator:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.DnsResolver dnsResolver -> dnsResolver
    org.apache.http.conn.OperatedClientConnection createConnection() -> createConnection
    void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> openConnection
    void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> updateSecureConnection
    void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> prepareSocket
    java.net.InetAddress[] resolveHostname(java.lang.String) -> resolveHostname
org.apache.http.impl.conn.DefaultHttpResponseParser -> org.apache.http.impl.conn.DefaultHttpResponseParser:
    org.apache.commons.logging.Log log -> log
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    org.apache.http.HttpResponse parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
    boolean reject(org.apache.http.util.CharArrayBuffer,int) -> reject
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.conn.DefaultHttpRoutePlanner -> org.apache.http.impl.conn.DefaultHttpRoutePlanner:
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
org.apache.http.impl.conn.DefaultResponseParser -> org.apache.http.impl.conn.DefaultResponseParser:
    org.apache.commons.logging.Log log -> log
    org.apache.http.HttpResponseFactory responseFactory -> responseFactory
    org.apache.http.util.CharArrayBuffer lineBuf -> lineBuf
    int maxGarbageLines -> maxGarbageLines
    int getMaxGarbageLines(org.apache.http.params.HttpParams) -> getMaxGarbageLines
    org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer) -> parseHead
org.apache.http.impl.conn.HttpConnPool -> org.apache.http.impl.conn.b:
    java.util.concurrent.atomic.AtomicLong COUNTER -> a
    org.apache.commons.logging.Log log -> b
    long timeToLive -> c
    java.util.concurrent.TimeUnit tunit -> d
org.apache.http.impl.conn.HttpConnPool$InternalConnFactory -> org.apache.http.impl.conn.c:
org.apache.http.impl.conn.HttpPoolEntry -> org.apache.http.impl.conn.d:
    org.apache.commons.logging.Log log -> a
    org.apache.http.conn.routing.RouteTracker tracker -> b
    boolean isExpired(long) -> a
    org.apache.http.conn.routing.RouteTracker getTracker() -> a
    org.apache.http.conn.routing.HttpRoute getPlannedRoute() -> b
    org.apache.http.conn.routing.HttpRoute getEffectiveRoute() -> c
    boolean isClosed() -> d
    void close() -> e
org.apache.http.impl.conn.IdleConnectionHandler -> org.apache.http.impl.conn.IdleConnectionHandler:
    org.apache.commons.logging.Log log -> log
    java.util.Map connectionToTimes -> connectionToTimes
    void add(org.apache.http.HttpConnection,long,java.util.concurrent.TimeUnit) -> add
    boolean remove(org.apache.http.HttpConnection) -> remove
    void removeAll() -> removeAll
    void closeIdleConnections(long) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
org.apache.http.impl.conn.IdleConnectionHandler$TimeValues -> org.apache.http.impl.conn.e:
    long timeAdded -> a
    long timeExpires -> b
    long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) -> a
    long access$100(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) -> b
org.apache.http.impl.conn.InMemoryDnsResolver -> org.apache.http.impl.conn.InMemoryDnsResolver:
    org.apache.commons.logging.Log log -> log
    java.util.Map dnsMap -> dnsMap
    void add(java.lang.String,java.net.InetAddress[]) -> add
    java.net.InetAddress[] resolve(java.lang.String) -> resolve
org.apache.http.impl.conn.LoggingSessionInputBuffer -> org.apache.http.impl.conn.LoggingSessionInputBuffer:
    org.apache.http.io.SessionInputBuffer in -> in
    org.apache.http.io.EofSensor eofSensor -> eofSensor
    org.apache.http.impl.conn.Wire wire -> wire
    java.lang.String charset -> charset
    boolean isDataAvailable(int) -> isDataAvailable
    int read(byte[],int,int) -> read
    int read() -> read
    int read(byte[]) -> read
    java.lang.String readLine() -> readLine
    int readLine(org.apache.http.util.CharArrayBuffer) -> readLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
    boolean isEof() -> isEof
org.apache.http.impl.conn.LoggingSessionOutputBuffer -> org.apache.http.impl.conn.LoggingSessionOutputBuffer:
    org.apache.http.io.SessionOutputBuffer out -> out
    org.apache.http.impl.conn.Wire wire -> wire
    java.lang.String charset -> charset
    void write(byte[],int,int) -> write
    void write(int) -> write
    void write(byte[]) -> write
    void flush() -> flush
    void writeLine(org.apache.http.util.CharArrayBuffer) -> writeLine
    void writeLine(java.lang.String) -> writeLine
    org.apache.http.io.HttpTransportMetrics getMetrics() -> getMetrics
org.apache.http.impl.conn.ManagedClientConnectionImpl -> org.apache.http.impl.conn.f:
    org.apache.http.conn.ClientConnectionManager manager -> a
    org.apache.http.conn.ClientConnectionOperator operator -> b
    org.apache.http.impl.conn.HttpPoolEntry poolEntry -> c
    boolean reusable -> d
    long duration -> e
    org.apache.http.impl.conn.HttpPoolEntry getPoolEntry() -> a
    org.apache.http.impl.conn.HttpPoolEntry detach() -> b
    org.apache.http.conn.ClientConnectionManager getManager() -> c
    org.apache.http.conn.OperatedClientConnection getConnection() -> d
    org.apache.http.conn.OperatedClientConnection ensureConnection() -> e
    org.apache.http.impl.conn.HttpPoolEntry ensurePoolEntry() -> f
    void close() -> close
    void shutdown() -> shutdown
    boolean isOpen() -> isOpen
    boolean isStale() -> isStale
    void setSocketTimeout(int) -> setSocketTimeout
    int getSocketTimeout() -> getSocketTimeout
    org.apache.http.HttpConnectionMetrics getMetrics() -> getMetrics
    void flush() -> flush
    boolean isResponseAvailable(int) -> isResponseAvailable
    void receiveResponseEntity(org.apache.http.HttpResponse) -> receiveResponseEntity
    org.apache.http.HttpResponse receiveResponseHeader() -> receiveResponseHeader
    void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest) -> sendRequestEntity
    void sendRequestHeader(org.apache.http.HttpRequest) -> sendRequestHeader
    java.net.InetAddress getLocalAddress() -> getLocalAddress
    int getLocalPort() -> getLocalPort
    java.net.InetAddress getRemoteAddress() -> getRemoteAddress
    int getRemotePort() -> getRemotePort
    boolean isSecure() -> isSecure
    javax.net.ssl.SSLSession getSSLSession() -> getSSLSession
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> open
    void tunnelTarget(boolean,org.apache.http.params.HttpParams) -> tunnelTarget
    void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams) -> tunnelProxy
    void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams) -> layerProtocol
    java.lang.Object getState() -> getState
    void setState(java.lang.Object) -> setState
    void markReusable() -> markReusable
    void unmarkReusable() -> unmarkReusable
    boolean isMarkedReusable() -> isMarkedReusable
    void setIdleDuration(long,java.util.concurrent.TimeUnit) -> setIdleDuration
    void releaseConnection() -> releaseConnection
    void abortConnection() -> abortConnection
org.apache.http.impl.conn.PoolingClientConnectionManager -> org.apache.http.impl.conn.PoolingClientConnectionManager:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.impl.conn.HttpConnPool pool -> pool
    org.apache.http.conn.ClientConnectionOperator operator -> operator
    org.apache.http.conn.DnsResolver dnsResolver -> dnsResolver
    void finalize() -> finalize
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    java.lang.String format(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> format
    java.lang.String formatStats(org.apache.http.conn.routing.HttpRoute) -> formatStats
    java.lang.String format(org.apache.http.impl.conn.HttpPoolEntry) -> format
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    org.apache.http.conn.ManagedClientConnection leaseConnection(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit) -> leaseConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void shutdown() -> shutdown
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    int getMaxTotal() -> getMaxTotal
    void setMaxTotal(int) -> setMaxTotal
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getMaxPerRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxPerRoute
    void setMaxPerRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxPerRoute
    org.apache.http.pool.PoolStats getTotalStats() -> getTotalStats
    org.apache.http.pool.PoolStats getStats(org.apache.http.conn.routing.HttpRoute) -> getStats
    org.apache.http.pool.PoolStats getStats(java.lang.Object) -> getStats
    int getMaxPerRoute(java.lang.Object) -> getMaxPerRoute
    void setMaxPerRoute(java.lang.Object,int) -> setMaxPerRoute
org.apache.http.impl.conn.PoolingClientConnectionManager$1 -> org.apache.http.impl.conn.g:
    java.util.concurrent.Future val$future -> a
    org.apache.http.impl.conn.PoolingClientConnectionManager this$0 -> b
    void abortRequest() -> abortRequest
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.ProxySelectorRoutePlanner -> org.apache.http.impl.conn.ProxySelectorRoutePlanner:
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    java.net.ProxySelector proxySelector -> proxySelector
    java.net.ProxySelector getProxySelector() -> getProxySelector
    void setProxySelector(java.net.ProxySelector) -> setProxySelector
    org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineRoute
    org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> determineProxy
    java.lang.String getHost(java.net.InetSocketAddress) -> getHost
    java.net.Proxy chooseProxy(java.util.List,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> chooseProxy
org.apache.http.impl.conn.ProxySelectorRoutePlanner$1 -> org.apache.http.impl.conn.h:
    int[] $SwitchMap$java$net$Proxy$Type -> a
org.apache.http.impl.conn.SchemeRegistryFactory -> org.apache.http.impl.conn.SchemeRegistryFactory:
    org.apache.http.conn.scheme.SchemeRegistry createDefault() -> createDefault
    org.apache.http.conn.scheme.SchemeRegistry createSystemDefault() -> createSystemDefault
org.apache.http.impl.conn.SingleClientConnManager -> org.apache.http.impl.conn.SingleClientConnManager:
    org.apache.commons.logging.Log log -> log
    java.lang.String MISUSE_MESSAGE -> MISUSE_MESSAGE
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    boolean alwaysShutDown -> alwaysShutDown
    org.apache.http.impl.conn.SingleClientConnManager$PoolEntry uniquePoolEntry -> uniquePoolEntry
    org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter managedConn -> managedConn
    long lastReleaseTime -> lastReleaseTime
    long connectionExpiresTime -> connectionExpiresTime
    boolean isShutDown -> isShutDown
    void finalize() -> finalize
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    void assertStillUp() -> assertStillUp
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> getConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void closeExpiredConnections() -> closeExpiredConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void shutdown() -> shutdown
    void revokeConnection() -> revokeConnection
org.apache.http.impl.conn.SingleClientConnManager$1 -> org.apache.http.impl.conn.i:
    org.apache.http.conn.routing.HttpRoute val$route -> a
    java.lang.Object val$state -> b
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> c
    void abortRequest() -> abortRequest
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter -> org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter:
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
org.apache.http.impl.conn.SingleClientConnManager$PoolEntry -> org.apache.http.impl.conn.SingleClientConnManager$PoolEntry:
    org.apache.http.impl.conn.SingleClientConnManager this$0 -> this$0
    void close() -> close
    void shutdown() -> shutdown
org.apache.http.impl.conn.SystemDefaultDnsResolver -> org.apache.http.impl.conn.SystemDefaultDnsResolver:
    java.net.InetAddress[] resolve(java.lang.String) -> resolve
org.apache.http.impl.conn.Wire -> org.apache.http.impl.conn.Wire:
    org.apache.commons.logging.Log log -> log
    void wire(java.lang.String,java.io.InputStream) -> wire
    boolean enabled() -> enabled
    void output(java.io.InputStream) -> output
    void input(java.io.InputStream) -> input
    void output(byte[],int,int) -> output
    void input(byte[],int,int) -> input
    void output(byte[]) -> output
    void input(byte[]) -> input
    void output(int) -> output
    void input(int) -> input
    void output(java.lang.String) -> output
    void input(java.lang.String) -> input
org.apache.http.impl.conn.tsccm.AbstractConnPool -> org.apache.http.impl.conn.tsccm.AbstractConnPool:
    org.apache.commons.logging.Log log -> log
    java.util.concurrent.locks.Lock poolLock -> poolLock
    java.util.Set leasedConnections -> leasedConnections
    int numConnections -> numConnections
    boolean isShutDown -> isShutDown
    java.util.Set issuedConnections -> issuedConnections
    java.lang.ref.ReferenceQueue refQueue -> refQueue
    org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler -> idleConnHandler
    void enableConnectionGC() -> enableConnectionGC
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit) -> getEntry
    org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    void handleReference(java.lang.ref.Reference) -> handleReference
    void handleLostEntry(org.apache.http.conn.routing.HttpRoute) -> handleLostEntry
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void deleteClosedConnections() -> deleteClosedConnections
    void shutdown() -> shutdown
    void closeConnection(org.apache.http.conn.OperatedClientConnection) -> closeConnection
org.apache.http.impl.conn.tsccm.BasicPoolEntry -> org.apache.http.impl.conn.tsccm.BasicPoolEntry:
    long created -> created
    long updated -> updated
    long validUntil -> validUntil
    long expiry -> expiry
    org.apache.http.conn.OperatedClientConnection getConnection() -> getConnection
    org.apache.http.conn.routing.HttpRoute getPlannedRoute() -> getPlannedRoute
    org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef() -> getWeakRef
    void shutdownEntry() -> shutdownEntry
    long getCreated() -> getCreated
    long getUpdated() -> getUpdated
    long getExpiry() -> getExpiry
    long getValidUntil() -> getValidUntil
    void updateExpiry(long,java.util.concurrent.TimeUnit) -> updateExpiry
    boolean isExpired(long) -> isExpired
org.apache.http.impl.conn.tsccm.BasicPoolEntryRef -> org.apache.http.impl.conn.tsccm.BasicPoolEntryRef:
    org.apache.http.conn.routing.HttpRoute route -> route
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter -> org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter:
    org.apache.http.conn.ClientConnectionManager getManager() -> getManager
    org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry() -> getPoolEntry
    void detach() -> detach
org.apache.http.impl.conn.tsccm.ConnPoolByRoute -> org.apache.http.impl.conn.tsccm.ConnPoolByRoute:
    org.apache.commons.logging.Log log -> log
    java.util.concurrent.locks.Lock poolLock -> poolLock
    org.apache.http.conn.ClientConnectionOperator operator -> operator
    org.apache.http.conn.params.ConnPerRoute connPerRoute -> connPerRoute
    java.util.Set leasedConnections -> leasedConnections
    java.util.Queue freeConnections -> freeConnections
    java.util.Queue waitingThreads -> waitingThreads
    java.util.Map routeToPool -> routeToPool
    long connTTL -> connTTL
    java.util.concurrent.TimeUnit connTTLTimeUnit -> connTTLTimeUnit
    boolean shutdown -> shutdown
    int maxTotalConnections -> maxTotalConnections
    int numConnections -> numConnections
    java.util.concurrent.locks.Lock getLock() -> getLock
    java.util.Queue createFreeConnQueue() -> createFreeConnQueue
    java.util.Queue createWaitingThreadQueue() -> createWaitingThreadQueue
    java.util.Map createRouteToPoolMap() -> createRouteToPoolMap
    org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute) -> newRouteSpecificPool
    org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> newWaitingThread
    void closeConnection(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> closeConnection
    org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean) -> getRoutePool
    int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute) -> getConnectionsInPool
    int getConnectionsInPool() -> getConnectionsInPool
    org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestPoolEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter) -> getEntryBlocking
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit) -> freeEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object) -> getFreeEntry
    org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator) -> createEntry
    void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    void deleteLeastUsedEntry() -> deleteLeastUsedEntry
    void handleLostEntry(org.apache.http.conn.routing.HttpRoute) -> handleLostEntry
    void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool) -> notifyWaitingThread
    void deleteClosedConnections() -> deleteClosedConnections
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    void shutdown() -> shutdown
    void setMaxTotalConnections(int) -> setMaxTotalConnections
    int getMaxTotalConnections() -> getMaxTotalConnections
    java.util.concurrent.locks.Lock access$000(org.apache.http.impl.conn.tsccm.ConnPoolByRoute) -> access$000
org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1 -> org.apache.http.impl.conn.tsccm.a:
    org.apache.http.impl.conn.tsccm.WaitingThreadAborter val$aborter -> a
    org.apache.http.conn.routing.HttpRoute val$route -> b
    java.lang.Object val$state -> c
    org.apache.http.impl.conn.tsccm.ConnPoolByRoute this$0 -> d
    void abortRequest() -> abortRequest
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
org.apache.http.impl.conn.tsccm.PoolEntryRequest -> org.apache.http.impl.conn.tsccm.PoolEntryRequest:
    org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit) -> getPoolEntry
    void abortRequest() -> abortRequest
org.apache.http.impl.conn.tsccm.RouteSpecificPool -> org.apache.http.impl.conn.tsccm.RouteSpecificPool:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.routing.HttpRoute route -> route
    int maxEntries -> maxEntries
    org.apache.http.conn.params.ConnPerRoute connPerRoute -> connPerRoute
    java.util.LinkedList freeEntries -> freeEntries
    java.util.Queue waitingThreads -> waitingThreads
    int numEntries -> numEntries
    org.apache.http.conn.routing.HttpRoute getRoute() -> getRoute
    int getMaxEntries() -> getMaxEntries
    boolean isUnused() -> isUnused
    int getCapacity() -> getCapacity
    int getEntryCount() -> getEntryCount
    org.apache.http.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object) -> allocEntry
    void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> freeEntry
    void createdEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> createdEntry
    boolean deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry) -> deleteEntry
    void dropEntry() -> dropEntry
    void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> queueThread
    boolean hasThread() -> hasThread
    org.apache.http.impl.conn.tsccm.WaitingThread nextThread() -> nextThread
    void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> removeThread
org.apache.http.impl.conn.tsccm.RouteSpecificPool$1 -> org.apache.http.impl.conn.tsccm.b:
    org.apache.http.impl.conn.tsccm.RouteSpecificPool this$0 -> a
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager -> org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager:
    org.apache.commons.logging.Log log -> log
    org.apache.http.conn.scheme.SchemeRegistry schemeRegistry -> schemeRegistry
    org.apache.http.impl.conn.tsccm.AbstractConnPool connectionPool -> connectionPool
    org.apache.http.impl.conn.tsccm.ConnPoolByRoute pool -> pool
    org.apache.http.conn.ClientConnectionOperator connOperator -> connOperator
    org.apache.http.conn.params.ConnPerRouteBean connPerRoute -> connPerRoute
    void finalize() -> finalize
    org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams) -> createConnectionPool
    org.apache.http.impl.conn.tsccm.ConnPoolByRoute createConnectionPool(long,java.util.concurrent.TimeUnit) -> createConnectionPool
    org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry) -> createConnectionOperator
    org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry() -> getSchemeRegistry
    org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object) -> requestConnection
    void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit) -> releaseConnection
    void shutdown() -> shutdown
    int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute) -> getConnectionsInPool
    int getConnectionsInPool() -> getConnectionsInPool
    void closeIdleConnections(long,java.util.concurrent.TimeUnit) -> closeIdleConnections
    void closeExpiredConnections() -> closeExpiredConnections
    int getMaxTotal() -> getMaxTotal
    void setMaxTotal(int) -> setMaxTotal
    int getDefaultMaxPerRoute() -> getDefaultMaxPerRoute
    void setDefaultMaxPerRoute(int) -> setDefaultMaxPerRoute
    int getMaxForRoute(org.apache.http.conn.routing.HttpRoute) -> getMaxForRoute
    void setMaxForRoute(org.apache.http.conn.routing.HttpRoute,int) -> setMaxForRoute
    org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager) -> access$000
org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 -> org.apache.http.impl.conn.tsccm.c:
    org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest -> a
    org.apache.http.conn.routing.HttpRoute val$route -> b
    org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0 -> c
    void abortRequest() -> abortRequest
    org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit) -> getConnection
org.apache.http.impl.conn.tsccm.WaitingThread -> org.apache.http.impl.conn.tsccm.WaitingThread:
    java.util.concurrent.locks.Condition cond -> cond
    org.apache.http.impl.conn.tsccm.RouteSpecificPool pool -> pool
    java.lang.Thread waiter -> waiter
    boolean aborted -> aborted
    java.util.concurrent.locks.Condition getCondition() -> getCondition
    org.apache.http.impl.conn.tsccm.RouteSpecificPool getPool() -> getPool
    java.lang.Thread getThread() -> getThread
    boolean await(java.util.Date) -> await
    void wakeup() -> wakeup
    void interrupt() -> interrupt
org.apache.http.impl.conn.tsccm.WaitingThreadAborter -> org.apache.http.impl.conn.tsccm.WaitingThreadAborter:
    org.apache.http.impl.conn.tsccm.WaitingThread waitingThread -> waitingThread
    boolean aborted -> aborted
    void abort() -> abort
    void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread) -> setWaitingThread
org.apache.http.impl.cookie.AbstractCookieAttributeHandler -> org.apache.http.impl.cookie.AbstractCookieAttributeHandler:
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.AbstractCookieSpec -> org.apache.http.impl.cookie.AbstractCookieSpec:
    java.util.Map attribHandlerMap -> attribHandlerMap
    void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler) -> registerAttribHandler
    org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String) -> findAttribHandler
    org.apache.http.cookie.CookieAttributeHandler getAttribHandler(java.lang.String) -> getAttribHandler
    java.util.Collection getAttribHandlers() -> getAttribHandlers
org.apache.http.impl.cookie.BasicClientCookie -> org.apache.http.impl.cookie.BasicClientCookie:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.util.Map attribs -> attribs
    java.lang.String value -> value
    java.lang.String cookieComment -> cookieComment
    java.lang.String cookieDomain -> cookieDomain
    java.util.Date cookieExpiryDate -> cookieExpiryDate
    java.lang.String cookiePath -> cookiePath
    boolean isSecure -> isSecure
    int cookieVersion -> cookieVersion
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String getComment() -> getComment
    void setComment(java.lang.String) -> setComment
    java.lang.String getCommentURL() -> getCommentURL
    java.util.Date getExpiryDate() -> getExpiryDate
    void setExpiryDate(java.util.Date) -> setExpiryDate
    boolean isPersistent() -> isPersistent
    java.lang.String getDomain() -> getDomain
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getPath() -> getPath
    void setPath(java.lang.String) -> setPath
    boolean isSecure() -> isSecure
    void setSecure(boolean) -> setSecure
    int[] getPorts() -> getPorts
    int getVersion() -> getVersion
    void setVersion(int) -> setVersion
    boolean isExpired(java.util.Date) -> isExpired
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    boolean containsAttribute(java.lang.String) -> containsAttribute
    java.lang.Object clone() -> clone
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.BasicClientCookie2 -> org.apache.http.impl.cookie.BasicClientCookie2:
    long serialVersionUID -> serialVersionUID
    java.lang.String commentURL -> commentURL
    int[] ports -> ports
    boolean discard -> discard
    int[] getPorts() -> getPorts
    void setPorts(int[]) -> setPorts
    java.lang.String getCommentURL() -> getCommentURL
    void setCommentURL(java.lang.String) -> setCommentURL
    void setDiscard(boolean) -> setDiscard
    boolean isPersistent() -> isPersistent
    boolean isExpired(java.util.Date) -> isExpired
    java.lang.Object clone() -> clone
org.apache.http.impl.cookie.BasicCommentHandler -> org.apache.http.impl.cookie.BasicCommentHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicDomainHandler -> org.apache.http.impl.cookie.BasicDomainHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BasicExpiresHandler -> org.apache.http.impl.cookie.BasicExpiresHandler:
    java.lang.String[] datepatterns -> datepatterns
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicMaxAgeHandler -> org.apache.http.impl.cookie.BasicMaxAgeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
org.apache.http.impl.cookie.BasicPathHandler -> org.apache.http.impl.cookie.BasicPathHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BasicSecureHandler -> org.apache.http.impl.cookie.BasicSecureHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.BestMatchSpec -> org.apache.http.impl.cookie.BestMatchSpec:
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    org.apache.http.impl.cookie.RFC2965Spec strict -> strict
    org.apache.http.impl.cookie.RFC2109Spec obsoleteStrict -> obsoleteStrict
    org.apache.http.impl.cookie.BrowserCompatSpec compat -> compat
    org.apache.http.impl.cookie.RFC2965Spec getStrict() -> getStrict
    org.apache.http.impl.cookie.RFC2109Spec getObsoleteStrict() -> getObsoleteStrict
    org.apache.http.impl.cookie.BrowserCompatSpec getCompat() -> getCompat
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.BestMatchSpecFactory -> org.apache.http.impl.cookie.BestMatchSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.BrowserCompatSpec -> org.apache.http.impl.cookie.BrowserCompatSpec:
    java.lang.String[] DEFAULT_DATE_PATTERNS -> DEFAULT_DATE_PATTERNS
    java.lang.String[] datepatterns -> datepatterns
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.BrowserCompatSpecFactory -> org.apache.http.impl.cookie.BrowserCompatSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.CookieSpecBase -> org.apache.http.impl.cookie.CookieSpecBase:
    java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin) -> getDefaultPath
    java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin) -> getDefaultDomain
    java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.DateParseException -> org.apache.http.impl.cookie.DateParseException:
    long serialVersionUID -> serialVersionUID
org.apache.http.impl.cookie.DateUtils -> org.apache.http.impl.cookie.DateUtils:
    java.lang.String PATTERN_RFC1123 -> PATTERN_RFC1123
    java.lang.String PATTERN_RFC1036 -> PATTERN_RFC1036
    java.lang.String PATTERN_ASCTIME -> PATTERN_ASCTIME
    java.lang.String[] DEFAULT_PATTERNS -> DEFAULT_PATTERNS
    java.util.Date DEFAULT_TWO_DIGIT_YEAR_START -> DEFAULT_TWO_DIGIT_YEAR_START
    java.util.TimeZone GMT -> GMT
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[]) -> parseDate
    java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date) -> parseDate
    java.lang.String formatDate(java.util.Date) -> formatDate
    java.lang.String formatDate(java.util.Date,java.lang.String) -> formatDate
org.apache.http.impl.cookie.DateUtils$DateFormatHolder -> org.apache.http.impl.cookie.a:
    java.lang.ThreadLocal THREADLOCAL_FORMATS -> a
    java.text.SimpleDateFormat formatFor(java.lang.String) -> a
org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1 -> org.apache.http.impl.cookie.b:
    java.lang.ref.SoftReference initialValue() -> a
    java.lang.Object initialValue() -> initialValue
org.apache.http.impl.cookie.IgnoreSpec -> org.apache.http.impl.cookie.IgnoreSpec:
    int getVersion() -> getVersion
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    org.apache.http.Header getVersionHeader() -> getVersionHeader
org.apache.http.impl.cookie.IgnoreSpecFactory -> org.apache.http.impl.cookie.IgnoreSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.NetscapeDomainHandler -> org.apache.http.impl.cookie.NetscapeDomainHandler:
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean isSpecialDomain(java.lang.String) -> isSpecialDomain
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.NetscapeDraftHeaderParser -> org.apache.http.impl.cookie.NetscapeDraftHeaderParser:
    org.apache.http.impl.cookie.NetscapeDraftHeaderParser DEFAULT -> DEFAULT
    org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseHeader
    org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor) -> parseNameValuePair
org.apache.http.impl.cookie.NetscapeDraftSpec -> org.apache.http.impl.cookie.NetscapeDraftSpec:
    java.lang.String EXPIRES_PATTERN -> EXPIRES_PATTERN
    java.lang.String[] datepatterns -> datepatterns
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List formatCookies(java.util.List) -> formatCookies
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.NetscapeDraftSpecFactory -> org.apache.http.impl.cookie.NetscapeDraftSpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.PublicSuffixFilter -> org.apache.http.impl.cookie.PublicSuffixFilter:
    org.apache.http.cookie.CookieAttributeHandler wrapped -> wrapped
    java.util.Set exceptions -> exceptions
    java.util.Set suffixes -> suffixes
    void setPublicSuffixes(java.util.Collection) -> setPublicSuffixes
    void setExceptions(java.util.Collection) -> setExceptions
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean isForPublicSuffix(org.apache.http.cookie.Cookie) -> isForPublicSuffix
org.apache.http.impl.cookie.PublicSuffixListParser -> org.apache.http.impl.cookie.PublicSuffixListParser:
    int MAX_LINE_LEN -> MAX_LINE_LEN
    org.apache.http.impl.cookie.PublicSuffixFilter filter -> filter
    void parse(java.io.Reader) -> parse
    boolean readLine(java.io.Reader,java.lang.StringBuilder) -> readLine
org.apache.http.impl.cookie.RFC2109DomainHandler -> org.apache.http.impl.cookie.RFC2109DomainHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2109Spec -> org.apache.http.impl.cookie.RFC2109Spec:
    org.apache.http.cookie.CookiePathComparator PATH_COMPARATOR -> PATH_COMPARATOR
    java.lang.String[] DATE_PATTERNS -> DATE_PATTERNS
    java.lang.String[] datepatterns -> datepatterns
    boolean oneHeader -> oneHeader
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    java.util.List formatCookies(java.util.List) -> formatCookies
    java.util.List doFormatOneHeader(java.util.List) -> doFormatOneHeader
    java.util.List doFormatManyHeaders(java.util.List) -> doFormatManyHeaders
    void formatParamAsVer(org.apache.http.util.CharArrayBuffer,java.lang.String,java.lang.String,int) -> formatParamAsVer
    void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int) -> formatCookieAsVer
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.RFC2109SpecFactory -> org.apache.http.impl.cookie.RFC2109SpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.RFC2109VersionHandler -> org.apache.http.impl.cookie.RFC2109VersionHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler -> org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler -> org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965DomainAttributeHandler -> org.apache.http.impl.cookie.RFC2965DomainAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965PortAttributeHandler -> org.apache.http.impl.cookie.RFC2965PortAttributeHandler:
    int[] parsePortAttribute(java.lang.String) -> parsePortAttribute
    boolean portMatch(int,int[]) -> portMatch
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
org.apache.http.impl.cookie.RFC2965Spec -> org.apache.http.impl.cookie.RFC2965Spec:
    java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> parse
    java.util.List createCookies(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin) -> createCookies
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
    void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int) -> formatCookieAsVer
    org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin) -> adjustEffectiveHost
    int getVersion() -> getVersion
    org.apache.http.Header getVersionHeader() -> getVersionHeader
    java.lang.String toString() -> toString
org.apache.http.impl.cookie.RFC2965SpecFactory -> org.apache.http.impl.cookie.RFC2965SpecFactory:
    org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams) -> newInstance
org.apache.http.impl.cookie.RFC2965VersionAttributeHandler -> org.apache.http.impl.cookie.RFC2965VersionAttributeHandler:
    void parse(org.apache.http.cookie.SetCookie,java.lang.String) -> parse
    void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> validate
    boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin) -> match
